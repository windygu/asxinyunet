#Software: .
#ProcessID: 4292
#AppDomain: c65a07c7-1-129831684400484000
#BaseDirectory: D:\Develop\DotNet-Asxinyu\Web\Newlife.Cube\
#Date: 2012-06-03
#Fields: Time ThreadID IsPoolThread ThreadName Message
11:40:40.543 5 W - XCode 文件版本8.6.2012.0526 编译时间2012-05-27 11:03:20
11:40:40.547 5 W - 开始初始化实体类Administrator
11:40:40.549 5 W - 完成初始化实体类Administrator
11:40:40.569 6 W - 开始初始化实体类Setting
11:40:40.569 6 W - 完成初始化实体类Setting
11:40:40.701 6 W - 开始检查连接[Common/SQLite]的数据库架构……
11:40:40.742 6 W - [Common]的所有实体类（16个）：Category,Administrator,Menu,Role,RoleMenu,Log,Area,Sequence,Simple,SimpleTree,GuidCategory,UserProfile,Setting,Statistics,User,Attachment
11:40:40.743 6 W - [Common]需要检查架构的实体类（0个）：
11:40:40.743 6 W - 检查连接[Common/SQLite]的数据库架构耗时00:00:00.0419066
11:40:40.778 6 W - 检查实体NewLife.CommonEntity.Setting的数据表架构，模式：CheckTableWhenFirstUse，调用栈：<>.get_LongCount()<-get_Count()<-Setting<>.FindByParentIDAndName(Int32, System.String)<-Create(System.String)<-SysSetting.get_Sys()<-.cctor()<-get_DisplayName()<-Login.Page_Load(System.Object, System.EventArgs)<-CalliHelper.EventArgFunctionCaller(IntPtr, System.Object, System.Object, System.EventArgs)<-CalliEventHandlerDelegateProxy.Callback(System.Object, System.EventArgs)
11:40:40.778 6 W - 开始同步检查表[Setting/SQLite]的数据表架构……
11:40:40.822 6 W - GetSchema("MetaDataCollections")
11:40:40.832 6 W - GetSchema("Tables")
11:40:40.844 6 W - GetSchema("Columns")
11:40:40.902 6 W - GetSchema("Indexes")
11:40:40.903 6 W - GetSchema("IndexColumns")
11:40:40.908 6 W - GetSchema("DataTypes")
11:40:40.933 6 W - 检查表[Setting/SQLite]的数据表架构耗时00:00:00.1805458
11:40:40.934 6 W - GetSchema("ReservedWords")
11:40:40.937 6 W - Select Count(*) From Setting
11:40:40.938 6 W - 初始化NewLife.CommonEntity.Setting数据，调用栈：<>.get_LongCount()<-get_Count()<-Setting<>.FindByParentIDAndName(Int32, System.String)<-Create(System.String)<-SysSetting.get_Sys()<-.cctor()<-get_DisplayName()<-Login.Page_Load(System.Object, System.EventArgs)<-CalliHelper.EventArgFunctionCaller(IntPtr, System.Object, System.Object, System.EventArgs)<-CalliEventHandlerDelegateProxy.Callback(System.Object, System.EventArgs)
11:40:40.945 6 W - 一级缓存：关闭缓存
11:40:40.945 6 W - 更新实体缓存（第1次）：NewLife.CommonEntity.Setting 原因：第一次
11:40:40.948 6 W - Select * From Setting
11:40:40.959 6 W - 完成更新缓存（第1次）：NewLife.CommonEntity.Setting
11:40:40.975 6 W - Select Count(*) From Setting Where ID=1
11:40:40.986 6 W - Select Count(*) From Setting Where ID=1
11:40:40.987 6 W - Select Count(*) From Setting Where ID=1
11:40:40.987 6 W - Select Count(*) From Setting Where ID=1
11:40:40.988 6 W - Select Count(*) From Setting Where ID=1
11:40:40.989 6 W - Select Count(*) From Setting Where ID=1
11:40:40.995 6 W - Update Setting Set Value=null Where ID=7
11:40:40.996 6 W - 清空实体缓存：NewLife.CommonEntity.Setting
11:40:40.999 6 W - Select Count(*) From Setting Where ID=1
11:40:40.999 6 W - 更新实体缓存（第2次）：NewLife.CommonEntity.Setting 原因：无缓存数据
11:40:40.999 6 W - Select * From Setting
11:40:41.000 6 W - 完成更新缓存（第2次）：NewLife.CommonEntity.Setting
11:40:41.000 6 W - Select Count(*) From Setting Where ID=1
11:40:41.000 6 W - Update Setting Set Value=null Where ID=8
11:40:41.000 6 W - 清空实体缓存：NewLife.CommonEntity.Setting
11:40:41.000 6 W - Select Count(*) From Setting Where ID=1
11:40:41.001 6 W - 更新实体缓存（第3次）：NewLife.CommonEntity.Setting 原因：无缓存数据
11:40:41.001 6 W - Select * From Setting
11:40:41.001 6 W - 完成更新缓存（第3次）：NewLife.CommonEntity.Setting
11:40:41.001 6 W - Select Count(*) From Setting Where ID=1
11:40:41.002 6 W - Update Setting Set Value=null Where ID=9
11:40:41.002 6 W - 清空实体缓存：NewLife.CommonEntity.Setting
11:40:41.002 6 W - Select Count(*) From Setting Where ID=1
11:40:41.002 6 W - 更新实体缓存（第4次）：NewLife.CommonEntity.Setting 原因：无缓存数据
11:40:41.002 6 W - Select * From Setting
11:40:41.002 6 W - 完成更新缓存（第4次）：NewLife.CommonEntity.Setting
11:40:41.005 6 W - 检查实体NewLife.CommonEntity.Administrator的数据表架构，模式：CheckTableWhenFirstUse，调用栈：<>.get_LongCount()<-get_Count()<-<>.get_Count()<-Login.Page_Load(System.Object, System.EventArgs)<-CalliHelper.EventArgFunctionCaller(IntPtr, System.Object, System.Object, System.EventArgs)<-CalliEventHandlerDelegateProxy.Callback(System.Object, System.EventArgs)<-Control.OnLoad(System.EventArgs)<-LoadRecursive()<-Page.ProcessRequestMain(Boolean, Boolean)<-ProcessRequest(Boolean, Boolean)
11:40:41.005 6 W - 开始同步检查表[Administrator/SQLite]的数据表架构……
11:40:41.005 6 W - GetSchema("Tables")
11:40:41.005 6 W - GetSchema("Columns")
11:40:41.036 6 W - GetSchema("Indexes")
11:40:41.038 6 W - GetSchema("IndexColumns")
11:40:41.040 6 W - 检查表[Administrator/SQLite]的数据表架构耗时00:00:00.0346821
11:40:41.040 6 W - Select Count(*) From Administrator
11:40:41.042 5 Y - 初始化NewLife.CommonEntity.Administrator数据，调用栈：<>.QueryCount(XCode.DataAccessLayer.SelectBuilder)<-Entity<>.FindCount(System.String, System.String, System.String, Int32, Int32)<-FindCount()<-<>.FindCount()<-Login.<Page_Load>b__0()<-ThreadPoolX.<QueueUserWorkItem>b__6(System.Object)<-QueueUserWorkItemCallback.WaitCallback_Context(System.Object)<-ExecutionContext.runTryCode(System.Object)<-RuntimeHelpers.ExecuteCodeWithGuaranteedCleanup(TryCode, CleanupCode, System.Object)<-ExecutionContext.RunInternal(System.Threading.ExecutionContext, System.Threading.ContextCallback, System.Object)
11:40:41.043 5 Y - Select Count(*) From Administrator
11:40:41.061 6 W - Select * From Administrator Order By ID Desc limit 1
11:40:42.756 6 W - 更新实体缓存（第1次）：NewLife.CommonEntity.Administrator 原因：第一次
11:40:42.756 6 W - Select * From Administrator
11:40:42.756 6 W - 完成更新缓存（第1次）：NewLife.CommonEntity.Administrator
11:40:42.756 6 W - Update Administrator Set Logins=10, LastLogin='2012-06-03 11:40:42' Where ID=1
11:40:42.756 6 W - 清空实体缓存：NewLife.CommonEntity.Administrator
11:40:42.756 6 W - 开始初始化实体类Log
11:40:42.756 6 W - 完成初始化实体类Log
11:40:42.762 6 W - 检查实体NewLife.CommonEntity.Log的数据表架构，模式：CheckTableWhenFirstUse，调用栈：<>.WaitForInitData(Int32)<-InsertAndGetIdentity(System.String)<-<>.InsertAndGetIdentity(System.String)<-EntityPersistence.Insert(XCode.IEntity)<-Entity<>.OnInsert()<-DoAction(NewLife.Reflection.Func`1[System.Int32], System.Nullable`1[System.Boolean])<-Insert()<-Log<>.Insert()<-Entity<>.Save()<-Administrator<>.WriteLog(System.Type, System.String, System.String)
11:40:42.762 6 W - 开始同步检查表[Log/SQLite]的数据表架构……
11:40:42.763 6 W - GetSchema("Tables")
11:40:42.763 6 W - GetSchema("Columns")
11:40:42.794 6 W - GetSchema("Indexes")
11:40:42.796 6 W - GetSchema("IndexColumns")
11:40:42.797 6 W - 检查表[Log/SQLite]的数据表架构耗时00:00:00.0352719
11:40:42.798 6 W - 初始化NewLife.CommonEntity.Log数据，调用栈：<>.InsertAndGetIdentity(System.String)<-<>.InsertAndGetIdentity(System.String)<-EntityPersistence.Insert(XCode.IEntity)<-Entity<>.OnInsert()<-DoAction(NewLife.Reflection.Func`1[System.Int32], System.Nullable`1[System.Boolean])<-Insert()<-Log<>.Insert()<-Entity<>.Save()<-Administrator<>.WriteLog(System.Type, System.String, System.String)<-WriteLog(System.String, System.String)
11:40:42.799 6 W - Insert Into Log(Category, Action, UserID, UserName, IP, OccurTime, Remark) Values('管理员', '登录', 0, null, '127.0.0.1', '2012-06-03 11:40:42', 'admin');Select last_insert_rowid() newid
11:40:42.800 6 W - System.Threading.ThreadAbortException: 正在中止线程。
   在 System.Threading.Thread.AbortInternal()
   在 System.Threading.Thread.Abort(Object stateInfo)
   在 System.Web.HttpResponse.End()
   在 System.Web.HttpResponse.Redirect(String url, Boolean endResponse, Boolean permanent)
   在 System.Web.HttpResponse.Redirect(String url)
   在 Login.LoginButton_Click(Object sender, EventArgs e) 位置 d:\Develop\DotNet-Asxinyu\Web\Newlife.Cube\Admin\Login.aspx.cs:行号 71
11:40:43.109 5 W - 开始初始化实体类Menu
11:40:43.109 5 W - 完成初始化实体类Menu
11:40:43.115 5 W - 开始初始化实体类Role
11:40:43.115 5 W - 完成初始化实体类Role
11:40:43.116 5 W - 更新实体缓存（第1次）：NewLife.CommonEntity.Role 原因：第一次
11:40:43.118 5 W - 检查实体NewLife.CommonEntity.Role的数据表架构，模式：CheckTableWhenFirstUse，调用栈：<>.WaitForInitData(Int32)<-Query(System.String)<-Entity<>.FindAll(System.String)<-FindAll()<-EntityCache<>.<FillWaper>b__0()<-CacheBase<>.InvokeFill(NewLife.Reflection.Func)<-EntityCache<>.FillWaper(System.Object)<-get_Entities()<-Role<>.FindByID(Int32)<-Administrator<,,,,>.<get_Role>b__4(System.String)
11:40:43.118 5 W - 开始同步检查表[Role/SQLite]的数据表架构……
11:40:43.118 5 W - GetSchema("Tables")
11:40:43.118 5 W - GetSchema("Columns")
11:40:43.146 5 W - GetSchema("Indexes")
11:40:43.147 5 W - GetSchema("IndexColumns")
11:40:43.148 5 W - 检查表[Role/SQLite]的数据表架构耗时00:00:00.0307497
11:40:43.149 5 W - 初始化NewLife.CommonEntity.Role数据，调用栈：<>.Query(System.String)<-Entity<>.FindAll(System.String)<-FindAll()<-EntityCache<>.<FillWaper>b__0()<-CacheBase<>.InvokeFill(NewLife.Reflection.Func)<-EntityCache<>.FillWaper(System.Object)<-get_Entities()<-Role<>.FindByID(Int32)<-Administrator<,,,,>.<get_Role>b__4(System.String)<-EntityBase.GetExtend[TDependEntity](System.String, NewLife.Reflection.Func`2[System.String,System.Object], System.Collections.Generic.List`1[System.String])
11:40:43.155 5 W - Select Count(*) From Role
11:40:43.159 5 W - 检查实体NewLife.CommonEntity.RoleMenu的数据表架构，模式：CheckTableWhenFirstUse，调用栈：<>.get_LongCount()<-get_Count()<-Role<,,>.InitData()<-<>.WaitForInitData(Int32)<-Query(System.String)<-Entity<>.FindAll(System.String)<-FindAll()<-EntityCache<>.<FillWaper>b__0()<-CacheBase<>.InvokeFill(NewLife.Reflection.Func)<-EntityCache<>.FillWaper(System.Object)
11:40:43.159 5 W - 开始同步检查表[RoleMenu/SQLite]的数据表架构……
11:40:43.159 5 W - GetSchema("Tables")
11:40:43.160 5 W - GetSchema("Columns")
11:40:43.194 5 W - GetSchema("Indexes")
11:40:43.195 5 W - GetSchema("IndexColumns")
11:40:43.197 5 W - 检查表[RoleMenu/SQLite]的数据表架构耗时00:00:00.0375555
11:40:43.197 5 W - Select Count(*) From RoleMenu
11:40:43.198 5 W - 初始化NewLife.CommonEntity.RoleMenu数据，调用栈：<>.get_LongCount()<-get_Count()<-Role<,,>.InitData()<-<>.WaitForInitData(Int32)<-Query(System.String)<-Entity<>.FindAll(System.String)<-FindAll()<-EntityCache<>.<FillWaper>b__0()<-CacheBase<>.InvokeFill(NewLife.Reflection.Func)<-EntityCache<>.FillWaper(System.Object)
11:40:43.198 5 W - 开始初始化实体类RoleMenu
11:40:43.198 5 W - 完成初始化实体类RoleMenu
11:40:43.198 5 W - 如果角色菜单对应关系为空或者只有一个，则授权第一个角色访问所有菜单！
11:40:43.199 5 W - 更新实体缓存（第1次）：NewLife.CommonEntity.Menu 原因：第一次
11:40:43.200 5 W - 检查实体NewLife.CommonEntity.Menu的数据表架构，模式：CheckTableWhenFirstUse，调用栈：<>.WaitForInitData(Int32)<-Query(System.String)<-Entity<>.FindAll(System.String)<-FindAll()<-EntityCache<>.<FillWaper>b__0()<-CacheBase<>.InvokeFill(NewLife.Reflection.Func)<-EntityCache<>.FillWaper(System.Object)<-get_Entities()<-EntityTree<,>.FindAllByParent(TKey)<-FindChilds()
11:40:43.200 5 W - 开始同步检查表[Menu/SQLite]的数据表架构……
11:40:43.201 5 W - GetSchema("Tables")
11:40:43.201 5 W - GetSchema("Columns")
11:40:43.230 5 W - GetSchema("Indexes")
11:40:43.231 5 W - GetSchema("IndexColumns")
11:40:43.233 5 W - 检查表[Menu/SQLite]的数据表架构耗时00:00:00.0325249
11:40:43.234 5 W - 初始化NewLife.CommonEntity.Menu数据，调用栈：<>.Query(System.String)<-Entity<>.FindAll(System.String)<-FindAll()<-EntityCache<>.<FillWaper>b__0()<-CacheBase<>.InvokeFill(NewLife.Reflection.Func)<-EntityCache<>.FillWaper(System.Object)<-get_Entities()<-EntityTree<,>.FindAllByParent(TKey)<-FindChilds()<-<get_Childs>b__2(System.String)
11:40:43.235 5 W - Select Count(*) From Menu
11:40:43.235 5 W - Select * From Menu
11:40:43.237 5 W - 完成更新缓存（第1次）：NewLife.CommonEntity.Menu
11:40:43.243 5 W - 更新实体缓存（第1次）：NewLife.CommonEntity.RoleMenu 原因：第一次
11:40:43.244 5 W - Select * From RoleMenu
11:40:43.245 5 W - 完成更新缓存（第1次）：NewLife.CommonEntity.RoleMenu
11:40:43.247 5 W - 更新实体缓存（第2次）：NewLife.CommonEntity.Role 原因：第一次
11:40:43.247 5 W - Select * From Role
11:40:43.248 5 W - 完成更新缓存（第2次）：NewLife.CommonEntity.Role
11:40:43.254 5 W - Select * From RoleMenu Where RoleID Not In(1) Or MenuID Not In(1,2,3,4,5,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34)
11:40:43.254 5 W - Select * From Role
11:40:43.254 5 W - 完成更新缓存（第2次）：NewLife.CommonEntity.Role
11:40:43.605 4 W - Select * From Menu Where ID=2
11:40:43.607 4 W - Select * From Menu Where ID=7
11:40:43.912 4 W - Select * From Menu Where ID=1
11:40:43.912 4 W - Select * From Menu Where ID=1
11:40:43.913 4 W - Select * From Menu Where ID=2
11:40:43.914 4 W - Select * From Menu Where ID=7
11:40:45.063 4 W - Select * From Menu Where ID=2
11:40:45.064 4 W - Select * From Menu Where ID=7
11:40:45.281 5 W - Select * From Menu Where ID=1
11:40:45.281 5 W - Select * From Menu Where ID=1
11:40:45.282 5 W - Select * From Menu Where ID=2
11:40:45.283 5 W - Select * From Menu Where ID=7
11:40:45.906 10 W - Select * From Menu Where ID=1
11:40:45.906 10 W - Select * From Menu Where ID=1
11:40:45.907 10 W - Select * From Menu Where ID=2
11:40:45.908 10 W - Select * From Menu Where ID=7
11:40:46.099 10 W - Select * From Menu Where ID=1
11:40:46.099 10 W - Select * From Menu Where ID=1
11:40:46.100 10 W - Select * From Menu Where ID=2
11:40:46.101 10 W - Select * From Menu Where ID=7
11:40:46.530 4 W - Select * From Menu Where ID=1
11:40:46.531 4 W - Select * From Menu Where ID=1
11:40:46.531 4 W - Select * From Menu Where ID=2
11:40:46.532 4 W - Select * From Menu Where ID=7
11:40:46.723 4 W - Select * From Menu Where ID=1
11:40:46.723 4 W - Select * From Menu Where ID=1
11:40:46.724 4 W - Select * From Menu Where ID=2
11:40:46.725 4 W - Select * From Menu Where ID=7
11:40:46.996 5 W - Select * From Menu Where ID=1
11:40:46.997 5 W - Select * From Menu Where ID=1
11:40:46.997 5 W - Select * From Menu Where ID=2
11:40:46.998 5 W - Select * From Menu Where ID=7
11:40:47.347 4 W - Select * From Menu Where ID=1
11:40:47.347 4 W - Select * From Menu Where ID=1
11:40:47.348 4 W - Select * From Menu Where ID=2
11:40:47.349 4 W - Select * From Menu Where ID=7
11:40:48.121 6 W - Select * From Menu Where ID=1
11:40:48.122 6 W - Select * From Menu Where ID=1
11:40:48.122 6 W - Select * From Menu Where ID=2
11:40:48.123 6 W - Select * From Menu Where ID=7
11:40:55.508 14 W - Select * From Administrator Order By ID Desc limit 1
11:40:55.510 5 Y - Select Count(*) From Administrator
11:40:56.679 15 W - Select * From Administrator Order By ID Desc limit 1
11:40:56.679 13 Y - Select Count(*) From Administrator
11:40:58.405 15 W - 更新实体缓存（第2次）：NewLife.CommonEntity.Administrator 原因：无缓存数据
11:40:58.405 15 W - Select * From Administrator
11:40:58.405 15 W - 完成更新缓存（第2次）：NewLife.CommonEntity.Administrator
11:40:58.405 15 W - Update Administrator Set Logins=11, LastLogin='2012-06-03 11:40:58' Where ID=1
11:40:58.405 15 W - 清空实体缓存：NewLife.CommonEntity.Administrator
11:40:58.405 15 W - Insert Into Log(Category, Action, UserID, UserName, IP, OccurTime, Remark) Values('管理员', '登录', 0, null, '127.0.0.1', '2012-06-03 11:40:58', 'admin');Select last_insert_rowid() newid
11:40:58.405 15 W - System.Threading.ThreadAbortException: 正在中止线程。
   在 System.Threading.Thread.AbortInternal()
   在 System.Threading.Thread.Abort(Object stateInfo)
   在 System.Web.HttpResponse.End()
   在 System.Web.HttpResponse.Redirect(String url, Boolean endResponse, Boolean permanent)
   在 System.Web.HttpResponse.Redirect(String url)
   在 Login.LoginButton_Click(Object sender, EventArgs e) 位置 d:\Develop\DotNet-Asxinyu\Web\Newlife.Cube\Admin\Login.aspx.cs:行号 71
11:40:58.988 14 W - Select * From Menu Where ID=2
11:40:58.989 14 W - Select * From Menu Where ID=7
11:40:59.294 13 W - Select * From Menu Where ID=1
11:40:59.295 13 W - Select * From Menu Where ID=1
11:40:59.295 13 W - Select * From Menu Where ID=2
11:40:59.296 13 W - Select * From Menu Where ID=7
11:41:00.218 13 W - Select * From Menu Where ID=2
11:41:00.219 13 W - Select * From Menu Where ID=7
11:41:00.450 6 W - Select * From Menu Where ID=1
11:41:00.450 6 W - Select * From Menu Where ID=1
11:41:00.450 6 W - Select * From Menu Where ID=2
11:41:00.450 6 W - Select * From Menu Where ID=7
11:41:01.034 10 W - Select * From Menu Where ID=1
11:41:01.035 10 W - Select * From Menu Where ID=1
11:41:01.035 10 W - Select * From Menu Where ID=2
11:41:01.036 10 W - Select * From Menu Where ID=7
11:41:01.230 6 W - Select * From Menu Where ID=1
11:41:01.230 6 W - Select * From Menu Where ID=1
11:41:01.231 6 W - Select * From Menu Where ID=2
11:41:01.232 6 W - Select * From Menu Where ID=7
11:41:01.656 10 W - Select * From Menu Where ID=1
11:41:01.657 10 W - Select * From Menu Where ID=1
11:41:01.657 10 W - Select * From Menu Where ID=2
11:41:01.658 10 W - Select * From Menu Where ID=7
11:41:01.854 10 W - Select * From Menu Where ID=1
11:41:01.854 10 W - Select * From Menu Where ID=1
11:41:01.855 10 W - Select * From Menu Where ID=2
11:41:01.856 10 W - Select * From Menu Where ID=7
11:41:02.278 5 W - Select * From Menu Where ID=1
11:41:02.278 5 W - Select * From Menu Where ID=1
11:41:02.279 5 W - Select * From Menu Where ID=2
11:41:02.280 5 W - Select * From Menu Where ID=7
11:41:02.478 5 W - Select * From Menu Where ID=1
11:41:02.480 5 W - Select * From Menu Where ID=1
11:41:02.480 5 W - Select * From Menu Where ID=2
11:41:02.481 5 W - Select * From Menu Where ID=7
11:41:02.803 10 W - Select * From Menu Where ID=1
11:41:02.804 10 W - Select * From Menu Where ID=1
11:41:02.804 10 W - Select * From Menu Where ID=2
11:41:02.805 10 W - Select * From Menu Where ID=7
11:41:03.040 5 W - Select * From Menu Where ID=1
11:41:03.040 5 W - Select * From Menu Where ID=1
11:41:03.041 5 W - Select * From Menu Where ID=2
11:41:03.042 5 W - Select * From Menu Where ID=7
11:41:15.176 13 W - Select * From Administrator Order By ID Desc limit 1
11:41:15.176 10 Y - Select Count(*) From Administrator
11:41:27.048 15 W - 更新实体缓存（第3次）：NewLife.CommonEntity.Administrator 原因：无缓存数据
11:41:27.048 15 W - Select * From Administrator
11:41:27.048 15 W - 完成更新缓存（第3次）：NewLife.CommonEntity.Administrator
11:41:27.048 15 W - Update Administrator Set Logins=12, LastLogin='2012-06-03 11:41:27' Where ID=1
11:41:27.048 15 W - 清空实体缓存：NewLife.CommonEntity.Administrator
11:41:27.048 15 W - Insert Into Log(Category, Action, UserID, UserName, IP, OccurTime, Remark) Values('管理员', '登录', 0, null, '127.0.0.1', '2012-06-03 11:41:27', 'admin');Select last_insert_rowid() newid
11:41:27.048 15 W - System.Threading.ThreadAbortException: 正在中止线程。
   在 System.Threading.Thread.AbortInternal()
   在 System.Threading.Thread.Abort(Object stateInfo)
   在 System.Web.HttpResponse.End()
   在 System.Web.HttpResponse.Redirect(String url, Boolean endResponse, Boolean permanent)
   在 System.Web.HttpResponse.Redirect(String url)
   在 Login.LoginButton_Click(Object sender, EventArgs e) 位置 d:\Develop\DotNet-Asxinyu\Web\Newlife.Cube\Admin\Login.aspx.cs:行号 71
11:41:27.797 4 W - Select * From Menu Where ID=1
11:41:27.797 4 W - Select * From Menu Where ID=1
11:41:27.797 4 W - Select * From Menu Where ID=2
11:41:27.797 4 W - Select * From Menu Where ID=7
11:41:33.928 15 W - Select * From Role
11:41:33.944 15 W - Select * From Administrator Order By ID Desc limit 2000
11:41:37.703 15 W - Select * From Administrator Where ID=1
11:41:42.945 15 W - Select * From Administrator Where ID=1
11:41:45.612 13 W - 更新实体缓存（第2次）：NewLife.CommonEntity.Menu 原因：60秒过期
11:41:45.612 13 W - Select * From Menu
11:41:45.612 13 W - 完成更新缓存（第2次）：NewLife.CommonEntity.Menu
11:41:45.612 13 W - Select * From Role
11:41:45.612 13 W - Select * From Administrator Order By ID Desc limit 2000
11:41:45.612 13 W - 更新实体缓存（第3次）：NewLife.CommonEntity.Role 原因：60秒过期
11:41:45.612 13 W - Select * From Role
11:41:45.612 13 W - 完成更新缓存（第3次）：NewLife.CommonEntity.Role
11:45:06.540 4 W - 更新实体缓存（第3次）：NewLife.CommonEntity.Menu 原因：60秒过期
11:45:06.540 4 W - Select * From Menu
11:45:06.540 4 W - 完成更新缓存（第3次）：NewLife.CommonEntity.Menu
11:45:06.540 4 W - 更新实体缓存（第4次）：NewLife.CommonEntity.Role 原因：60秒过期
11:45:06.540 4 W - Select * From Role
11:45:06.540 4 W - 完成更新缓存（第4次）：NewLife.CommonEntity.Role
11:45:20.502 13 W - Insert Into Log(Category, Action, UserID, UserName, IP, OccurTime, Remark) Values('管理员', '添加', 0, 'sdf', '127.0.0.1', '2012-06-03 11:45:20', 'admin1');Select last_insert_rowid() newid
11:45:20.502 13 W - Select Count(*) From Administrator Where Name='admin1'
11:45:20.502 13 W - Insert Into Administrator(Name, Password, DisplayName, RoleID, Logins, LastLogin, LastLoginIP, SSOUserID, IsEnable) Values('admin1', '21232F297A57A5A743894A0E4A801FC3', 'sdf', 1, 0, null, null, 0, 1);Select last_insert_rowid() newid
11:45:22.374 13 W - Select * From Role
11:45:22.374 13 W - Select * From Administrator Order By ID Desc limit 2000
11:45:24.543 4 W - Select * From Administrator Where ID=2

#Software: .
#ProcessID: 4292
#AppDomain: c65a07c7-2-129831689871848000
#BaseDirectory: D:\Develop\DotNet-Asxinyu\Web\Newlife.Cube\
#Date: 2012-06-03
#Fields: Time ThreadID IsPoolThread ThreadName Message
11:49:49.119 13 W - XCode 文件版本8.6.2012.0526 编译时间2012-05-27 11:03:20
11:49:49.119 13 W - 开始初始化实体类Administrator
11:49:49.119 13 W - 完成初始化实体类Administrator
11:49:49.259 13 W - 开始检查连接[Common/SQLite]的数据库架构……
11:49:49.290 13 W - [Common]的所有实体类（16个）：Category,Administrator,Menu,Role,RoleMenu,Log,Area,Sequence,Simple,SimpleTree,GuidCategory,UserProfile,Setting,Statistics,User,Attachment
11:49:49.290 13 W - [Common]需要检查架构的实体类（0个）：
11:49:49.290 13 W - 检查连接[Common/SQLite]的数据库架构耗时00:00:00.0385188
11:49:49.306 13 W - 一级缓存：关闭缓存
11:49:49.306 13 W - 更新实体缓存（第1次）：NewLife.CommonEntity.Administrator 原因：第一次
11:49:49.353 13 W - GetSchema("MetaDataCollections")
11:49:49.353 13 W - GetSchema("ReservedWords")
11:49:49.368 13 W - 检查实体NewLife.CommonEntity.Administrator的数据表架构，模式：CheckTableWhenFirstUse，调用栈：<>.WaitForInitData(Int32)<-Query(System.String)<-Entity<>.FindAll(System.String)<-FindAll()<-EntityCache<>.<FillWaper>b__0()<-CacheBase<>.InvokeFill(NewLife.Reflection.Func)<-EntityCache<>.FillWaper(System.Object)<-get_Entities()<-Administrator<>.FindByName(System.String)<-Login(System.String, System.String, Int32)
11:49:49.368 13 W - 开始同步检查表[Administrator/SQLite]的数据表架构……
11:49:49.384 13 W - GetSchema("Tables")
11:49:49.384 13 W - GetSchema("Columns")
11:49:49.431 13 W - GetSchema("Indexes")
11:49:49.431 13 W - GetSchema("IndexColumns")
11:49:49.446 13 W - GetSchema("DataTypes")
11:49:49.462 13 W - 检查表[Administrator/SQLite]的数据表架构耗时00:00:00.0909965
11:49:49.462 13 W - 初始化NewLife.CommonEntity.Administrator数据，调用栈：<>.Query(System.String)<-Entity<>.FindAll(System.String)<-FindAll()<-EntityCache<>.<FillWaper>b__0()<-CacheBase<>.InvokeFill(NewLife.Reflection.Func)<-EntityCache<>.FillWaper(System.Object)<-get_Entities()<-Administrator<>.FindByName(System.String)<-Login(System.String, System.String, Int32)<-<get_HttpState>b__0(System.Web.HttpCookie)
11:49:49.478 13 W - Select Count(*) From Administrator
11:49:49.478 13 W - Select * From Administrator
11:49:49.478 13 W - 完成更新缓存（第1次）：NewLife.CommonEntity.Administrator
11:49:49.493 13 W - Update Administrator Set Logins=13, LastLogin='2012-06-03 11:49:49' Where ID=1
11:49:49.493 13 W - 清空实体缓存：NewLife.CommonEntity.Administrator
11:49:49.509 13 W - 开始初始化实体类Log
11:49:49.509 13 W - 完成初始化实体类Log
11:49:49.509 13 W - 检查实体NewLife.CommonEntity.Log的数据表架构，模式：CheckTableWhenFirstUse，调用栈：<>.WaitForInitData(Int32)<-InsertAndGetIdentity(System.String)<-<>.InsertAndGetIdentity(System.String)<-EntityPersistence.Insert(XCode.IEntity)<-Entity<>.OnInsert()<-DoAction(NewLife.Reflection.Func`1[System.Int32], System.Nullable`1[System.Boolean])<-Insert()<-Log<>.Insert()<-Entity<>.Save()<-Administrator<>.WriteLog(System.Type, System.String, System.String)
11:49:49.509 13 W - 开始同步检查表[Log/SQLite]的数据表架构……
11:49:49.509 13 W - GetSchema("Tables")
11:49:49.509 13 W - GetSchema("Columns")
11:49:49.540 13 W - GetSchema("Indexes")
11:49:49.540 13 W - GetSchema("IndexColumns")
11:49:49.540 13 W - 检查表[Log/SQLite]的数据表架构耗时00:00:00.0350802
11:49:49.556 13 W - 初始化NewLife.CommonEntity.Log数据，调用栈：<>.InsertAndGetIdentity(System.String)<-<>.InsertAndGetIdentity(System.String)<-EntityPersistence.Insert(XCode.IEntity)<-Entity<>.OnInsert()<-DoAction(NewLife.Reflection.Func`1[System.Int32], System.Nullable`1[System.Boolean])<-Insert()<-Log<>.Insert()<-Entity<>.Save()<-Administrator<>.WriteLog(System.Type, System.String, System.String)<-WriteLog(System.String, System.String)
11:49:49.556 13 W - Insert Into Log(Category, Action, UserID, UserName, IP, OccurTime, Remark) Values('管理员', '自动登录', 0, null, '127.0.0.1', '2012-06-03 11:49:49', 'admin');Select last_insert_rowid() newid
11:49:49.556 13 W - 更新实体缓存（第1次）：NewLife.CommonEntity.Menu 原因：第一次
11:49:49.556 13 W - 开始初始化实体类Menu
11:49:49.556 13 W - 完成初始化实体类Menu
11:49:49.556 13 W - 检查实体NewLife.CommonEntity.Menu的数据表架构，模式：CheckTableWhenFirstUse，调用栈：<>.WaitForInitData(Int32)<-Query(System.String)<-Entity<>.FindAll(System.String)<-FindAll()<-EntityCache<>.<FillWaper>b__0()<-CacheBase<>.InvokeFill(NewLife.Reflection.Func)<-EntityCache<>.FillWaper(System.Object)<-get_Entities()<-Menu<>.GetCurrentMenu()<-get_Current()
11:49:49.556 13 W - 开始同步检查表[Menu/SQLite]的数据表架构……
11:49:49.556 13 W - GetSchema("Tables")
11:49:49.556 13 W - GetSchema("Columns")
11:49:49.587 13 W - GetSchema("Indexes")
11:49:49.587 13 W - GetSchema("IndexColumns")
11:49:49.587 13 W - 检查表[Menu/SQLite]的数据表架构耗时00:00:00.0307629
11:49:49.587 13 W - 初始化NewLife.CommonEntity.Menu数据，调用栈：<>.Query(System.String)<-Entity<>.FindAll(System.String)<-FindAll()<-EntityCache<>.<FillWaper>b__0()<-CacheBase<>.InvokeFill(NewLife.Reflection.Func)<-EntityCache<>.FillWaper(System.Object)<-get_Entities()<-Menu<>.GetCurrentMenu()<-get_Current()<-Administrator<,,,,>.FindPermissionMenu(System.String)
11:49:49.587 13 W - Select Count(*) From Menu
11:49:49.587 13 W - Select * From Menu
11:49:49.587 13 W - 完成更新缓存（第1次）：NewLife.CommonEntity.Menu
11:49:49.602 13 W - 开始初始化实体类Role
11:49:49.602 13 W - 完成初始化实体类Role
11:49:49.602 13 W - 更新实体缓存（第1次）：NewLife.CommonEntity.Role 原因：第一次
11:49:49.602 13 W - 检查实体NewLife.CommonEntity.Role的数据表架构，模式：CheckTableWhenFirstUse，调用栈：<>.WaitForInitData(Int32)<-Query(System.String)<-Entity<>.FindAll(System.String)<-FindAll()<-EntityCache<>.<FillWaper>b__0()<-CacheBase<>.InvokeFill(NewLife.Reflection.Func)<-EntityCache<>.FillWaper(System.Object)<-get_Entities()<-Role<>.FindByID(Int32)<-Administrator<,,,,>.<get_Role>b__4(System.String)
11:49:49.602 13 W - 开始同步检查表[Role/SQLite]的数据表架构……
11:49:49.602 13 W - GetSchema("Tables")
11:49:49.602 13 W - GetSchema("Columns")
11:49:49.634 13 W - GetSchema("Indexes")
11:49:49.634 13 W - GetSchema("IndexColumns")
11:49:49.634 13 W - 检查表[Role/SQLite]的数据表架构耗时00:00:00.0299593
11:49:49.634 13 W - 初始化NewLife.CommonEntity.Role数据，调用栈：<>.Query(System.String)<-Entity<>.FindAll(System.String)<-FindAll()<-EntityCache<>.<FillWaper>b__0()<-CacheBase<>.InvokeFill(NewLife.Reflection.Func)<-EntityCache<>.FillWaper(System.Object)<-get_Entities()<-Role<>.FindByID(Int32)<-Administrator<,,,,>.<get_Role>b__4(System.String)<-EntityBase.GetExtend[TDependEntity](System.String, NewLife.Reflection.Func`2[System.String,System.Object], System.Collections.Generic.List`1[System.String])
11:49:49.634 13 W - Select Count(*) From Role
11:49:49.649 13 W - 检查实体NewLife.CommonEntity.RoleMenu的数据表架构，模式：CheckTableWhenFirstUse，调用栈：<>.get_LongCount()<-get_Count()<-Role<,,>.InitData()<-<>.WaitForInitData(Int32)<-Query(System.String)<-Entity<>.FindAll(System.String)<-FindAll()<-EntityCache<>.<FillWaper>b__0()<-CacheBase<>.InvokeFill(NewLife.Reflection.Func)<-EntityCache<>.FillWaper(System.Object)
11:49:49.649 13 W - 开始同步检查表[RoleMenu/SQLite]的数据表架构……
11:49:49.649 13 W - GetSchema("Tables")
11:49:49.649 13 W - GetSchema("Columns")
11:49:49.665 13 W - GetSchema("Indexes")
11:49:49.680 13 W - GetSchema("IndexColumns")
11:49:49.680 13 W - 检查表[RoleMenu/SQLite]的数据表架构耗时00:00:00.0315637
11:49:49.680 13 W - Select Count(*) From RoleMenu
11:49:49.680 13 W - 初始化NewLife.CommonEntity.RoleMenu数据，调用栈：<>.get_LongCount()<-get_Count()<-Role<,,>.InitData()<-<>.WaitForInitData(Int32)<-Query(System.String)<-Entity<>.FindAll(System.String)<-FindAll()<-EntityCache<>.<FillWaper>b__0()<-CacheBase<>.InvokeFill(NewLife.Reflection.Func)<-EntityCache<>.FillWaper(System.Object)
11:49:49.680 13 W - 开始初始化实体类RoleMenu
11:49:49.680 13 W - 完成初始化实体类RoleMenu
11:49:49.680 13 W - 如果角色菜单对应关系为空或者只有一个，则授权第一个角色访问所有菜单！
11:49:49.696 13 W - 更新实体缓存（第1次）：NewLife.CommonEntity.RoleMenu 原因：第一次
11:49:49.696 13 W - Select * From RoleMenu
11:49:49.696 13 W - 完成更新缓存（第1次）：NewLife.CommonEntity.RoleMenu
11:49:49.696 13 W - 更新实体缓存（第2次）：NewLife.CommonEntity.Role 原因：第一次
11:49:49.696 13 W - Select * From Role
11:49:49.696 13 W - 完成更新缓存（第2次）：NewLife.CommonEntity.Role
11:49:49.712 13 W - Select * From RoleMenu Where RoleID Not In(1) Or MenuID Not In(1,2,3,4,5,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34)
11:49:49.712 13 W - Select * From Role
11:49:49.712 13 W - 完成更新缓存（第2次）：NewLife.CommonEntity.Role
12:05:55.874 24 W - 开始初始化实体类Setting
12:05:55.874 24 W - 完成初始化实体类Setting
12:05:55.878 24 W - 检查实体NewLife.CommonEntity.Setting的数据表架构，模式：CheckTableWhenFirstUse，调用栈：<>.get_LongCount()<-get_Count()<-Setting<>.FindByParentIDAndName(Int32, System.String)<-Create(System.String)<-SysSetting.get_Sys()<-.cctor()<-get_DisplayName()<-Login.Page_Load(System.Object, System.EventArgs)<-CalliHelper.EventArgFunctionCaller(IntPtr, System.Object, System.Object, System.EventArgs)<-CalliEventHandlerDelegateProxy.Callback(System.Object, System.EventArgs)
12:05:55.879 24 W - 开始同步检查表[Setting/SQLite]的数据表架构……
12:05:55.879 24 W - GetSchema("Tables")
12:05:55.879 24 W - GetSchema("Columns")
12:05:55.905 24 W - GetSchema("Indexes")
12:05:55.907 24 W - GetSchema("IndexColumns")
12:05:55.908 24 W - 检查表[Setting/SQLite]的数据表架构耗时00:00:00.0295303
12:05:55.908 24 W - Select Count(*) From Setting
12:05:55.909 24 W - 初始化NewLife.CommonEntity.Setting数据，调用栈：<>.get_LongCount()<-get_Count()<-Setting<>.FindByParentIDAndName(Int32, System.String)<-Create(System.String)<-SysSetting.get_Sys()<-.cctor()<-get_DisplayName()<-Login.Page_Load(System.Object, System.EventArgs)<-CalliHelper.EventArgFunctionCaller(IntPtr, System.Object, System.Object, System.EventArgs)<-CalliEventHandlerDelegateProxy.Callback(System.Object, System.EventArgs)
12:05:55.909 24 W - 更新实体缓存（第1次）：NewLife.CommonEntity.Setting 原因：第一次
12:05:55.909 24 W - Select * From Setting
12:05:55.911 24 W - 完成更新缓存（第1次）：NewLife.CommonEntity.Setting
12:05:55.916 24 W - Select Count(*) From Setting Where ID=1
12:05:55.917 24 W - Select Count(*) From Setting Where ID=1
12:05:55.918 24 W - Select Count(*) From Setting Where ID=1
12:05:55.918 24 W - Select Count(*) From Setting Where ID=1
12:05:55.919 24 W - Select Count(*) From Setting Where ID=1
12:05:55.920 24 W - Select Count(*) From Setting Where ID=1
12:05:55.920 24 W - Update Setting Set Value=null Where ID=7
12:05:55.920 24 W - 清空实体缓存：NewLife.CommonEntity.Setting
12:05:55.923 24 W - Select Count(*) From Setting Where ID=1
12:05:55.923 24 W - 更新实体缓存（第2次）：NewLife.CommonEntity.Setting 原因：无缓存数据
12:05:55.923 24 W - Select * From Setting
12:05:55.923 24 W - 完成更新缓存（第2次）：NewLife.CommonEntity.Setting
12:05:55.924 24 W - Select Count(*) From Setting Where ID=1
12:05:55.924 24 W - Update Setting Set Value=null Where ID=8
12:05:55.924 24 W - 清空实体缓存：NewLife.CommonEntity.Setting
12:05:55.924 24 W - Select Count(*) From Setting Where ID=1
12:05:55.924 24 W - 更新实体缓存（第3次）：NewLife.CommonEntity.Setting 原因：无缓存数据
12:05:55.924 24 W - Select * From Setting
12:05:55.925 24 W - 完成更新缓存（第3次）：NewLife.CommonEntity.Setting
12:05:55.925 24 W - Select Count(*) From Setting Where ID=1
12:05:55.925 24 W - Update Setting Set Value=null Where ID=9
12:05:55.925 24 W - 清空实体缓存：NewLife.CommonEntity.Setting
12:05:55.925 24 W - Select Count(*) From Setting Where ID=1
12:05:55.925 24 W - 更新实体缓存（第4次）：NewLife.CommonEntity.Setting 原因：无缓存数据
12:05:55.926 24 W - Select * From Setting
12:05:55.926 24 W - 完成更新缓存（第4次）：NewLife.CommonEntity.Setting
12:05:55.931 24 Y - Select Count(*) From Administrator
12:05:57.505 5 W - 实体缓存<Administrator>总次数3，一级命中2（66.67%）
12:05:57.505 5 W - 更新实体缓存（第2次）：NewLife.CommonEntity.Administrator 原因：无缓存数据
12:05:57.505 5 W - Select * From Administrator
12:05:57.505 5 W - 完成更新缓存（第2次）：NewLife.CommonEntity.Administrator
12:05:57.505 5 W - Update Administrator Set Logins=14, LastLogin='2012-06-03 12:05:57' Where ID=1
12:05:57.505 5 W - 清空实体缓存：NewLife.CommonEntity.Administrator
12:05:57.505 5 W - Insert Into Log(Category, Action, UserID, UserName, IP, OccurTime, Remark) Values('管理员', '登录', 0, null, '127.0.0.1', '2012-06-03 12:05:57', 'admin');Select last_insert_rowid() newid
12:05:57.505 5 W - System.Threading.ThreadAbortException: 正在中止线程。
   在 System.Threading.Thread.AbortInternal()
   在 System.Threading.Thread.Abort(Object stateInfo)
   在 System.Web.HttpResponse.End()
   在 System.Web.HttpResponse.Redirect(String url, Boolean endResponse, Boolean permanent)
   在 System.Web.HttpResponse.Redirect(String url)
   在 Login.LoginButton_Click(Object sender, EventArgs e) 位置 d:\Develop\DotNet-Asxinyu\Web\Newlife.Cube\Admin\Login.aspx.cs:行号 71
12:05:57.794 23 W - 实体缓存<Role>总次数5，一级命中3（60.00%）
12:05:57.794 23 W - 更新实体缓存（第3次）：NewLife.CommonEntity.Role 原因：60秒过期
12:05:57.794 23 W - Select * From Role
12:05:57.794 23 W - 完成更新缓存（第3次）：NewLife.CommonEntity.Role
12:05:57.795 23 W - 实体缓存<RoleMenu>总次数69，一级命中68（98.55%）
12:05:57.795 23 W - 更新实体缓存（第2次）：NewLife.CommonEntity.RoleMenu 原因：60秒过期
12:05:57.795 23 W - Select * From RoleMenu
12:05:57.796 23 W - 完成更新缓存（第2次）：NewLife.CommonEntity.RoleMenu
12:05:57.796 23 W - 实体缓存<Menu>总次数104，一级命中103（99.04%）
12:05:57.796 23 W - 更新实体缓存（第2次）：NewLife.CommonEntity.Menu 原因：60秒过期
12:05:57.796 23 W - Select * From Menu
12:05:57.797 23 W - 完成更新缓存（第2次）：NewLife.CommonEntity.Menu
12:05:58.338 23 W - Select * From Menu Where ID=2
12:05:58.340 23 W - Select * From Menu Where ID=7
12:05:58.645 23 W - Select * From Menu Where ID=1
12:05:58.646 23 W - Select * From Menu Where ID=1
12:05:58.646 23 W - Select * From Menu Where ID=2
12:05:58.647 23 W - Select * From Menu Where ID=7
12:06:00.019 23 W - Select * From Menu Where ID=1
12:06:00.020 23 W - Select * From Menu Where ID=1
12:06:00.020 23 W - Select * From Menu Where ID=2
12:06:00.023 23 W - Select * From Menu Where ID=7
12:06:01.375 19 W - Select * From Menu Where ID=1
12:06:01.376 19 W - Select * From Menu Where ID=1
12:06:01.376 19 W - Select * From Menu Where ID=2
12:06:01.377 19 W - Select * From Menu Where ID=7
12:06:02.365 23 W - Select * From Menu Where ID=1
12:06:02.365 23 W - Select * From Menu Where ID=1
12:06:02.366 23 W - Select * From Menu Where ID=2
12:06:02.367 23 W - Select * From Menu Where ID=7
12:06:02.534 19 W - Select * From Menu Where ID=1
12:06:02.535 19 W - Select * From Menu Where ID=1
12:06:02.535 19 W - Select * From Menu Where ID=2
12:06:02.536 19 W - Select * From Menu Where ID=7
12:06:28.402 22 Y - Select Count(*) From Administrator
12:06:30.056 22 W - 更新实体缓存（第3次）：NewLife.CommonEntity.Administrator 原因：无缓存数据
12:06:30.056 22 W - Select * From Administrator
12:06:30.056 22 W - 完成更新缓存（第3次）：NewLife.CommonEntity.Administrator
12:06:30.056 22 W - Update Administrator Set Logins=15, LastLogin='2012-06-03 12:06:30' Where ID=1
12:06:30.056 22 W - 清空实体缓存：NewLife.CommonEntity.Administrator
12:06:30.056 22 W - Insert Into Log(Category, Action, UserID, UserName, IP, OccurTime, Remark) Values('管理员', '登录', 0, null, '127.0.0.1', '2012-06-03 12:06:30', 'admin');Select last_insert_rowid() newid
12:06:30.056 22 W - System.Threading.ThreadAbortException: 正在中止线程。
   在 System.Threading.Thread.AbortInternal()
   在 System.Threading.Thread.Abort(Object stateInfo)
   在 System.Web.HttpResponse.End()
   在 System.Web.HttpResponse.Redirect(String url, Boolean endResponse, Boolean permanent)
   在 System.Web.HttpResponse.Redirect(String url)
   在 Login.LoginButton_Click(Object sender, EventArgs e) 位置 d:\Develop\DotNet-Asxinyu\Web\Newlife.Cube\Admin\Login.aspx.cs:行号 71
12:06:30.087 5 W - Select * From Menu Where ID=2
12:06:30.087 5 W - Select * From Menu Where ID=7
12:06:30.103 22 W - Select * From Menu Where ID=1
12:06:30.103 22 W - Select * From Menu Where ID=1
12:06:30.103 22 W - Select * From Menu Where ID=2
12:06:30.103 22 W - Select * From Menu Where ID=7
12:06:54.953 24 W - GetSchema("Tables")
12:06:54.953 24 W - GetSchema("Columns")
12:06:54.985 24 W - GetSchema("Indexes")
12:06:54.985 24 W - GetSchema("IndexColumns")
12:06:54.985 24 W - GetSchema
12:06:59.540 24 W - 更新实体缓存（第3次）：NewLife.CommonEntity.Menu 原因：60秒过期
12:06:59.540 24 W - Select * From Menu
12:06:59.540 24 W - 完成更新缓存（第3次）：NewLife.CommonEntity.Menu
12:06:59.540 24 W - Select * From Role
12:06:59.571 24 W - Select * From Administrator Order By ID Desc limit 2000
12:06:59.571 24 W - 更新实体缓存（第4次）：NewLife.CommonEntity.Role 原因：60秒过期
12:06:59.571 24 W - Select * From Role
12:06:59.571 24 W - 完成更新缓存（第4次）：NewLife.CommonEntity.Role
12:07:05.218 24 W - Select * From Administrator Where RoleID=1 Order By ID Desc limit 2000
12:07:06.825 24 W - Select * From Administrator Where RoleID=1 Order By ID Desc limit 2000
12:07:09.758 23 W - Select * From Administrator Where ID=2
12:07:15.967 24 W - Select * From Administrator Where ID=1
12:07:18.619 5 W - Select * From Role Order By ID Desc limit 20
12:07:18.619 5 W - Select Count(*) From Role
12:07:19.991 18 W - Select * From Setting Order By ID Desc limit 20
12:07:19.991 18 W - Select Count(*) From Setting
12:07:38.743 23 W - Select * From Setting Order By ParentID limit 20
12:07:38.743 23 W - Select Count(*) From Setting
12:07:39.367 5 W - Select * From Setting Order By ParentID DESC limit 20
12:07:39.382 5 W - Select Count(*) From Setting
