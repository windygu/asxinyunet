#Software: .
#ProcessID: 4648
#AppDomain: c5a66244-1-129933499609832396
#BaseDirectory: C:\DevelopMent\Bioinfo\BioinfoWebSite\
#Date: 2012-09-29
#Fields: Time ThreadID IsPoolThread ThreadName Message
07:52:44.711 4 W - NewLife.Core v3.8.2012.0803 Build 2012-09-25 12:03:50
07:52:44.727 4 W - 为NewLife.CommonEntity.IManageProvider配置注册YWSManageProvider，标识Identity=，优先级Priority=5！
07:52:46.271 4 W - NewLife.XCode v8.8.2012.0828 Build 2012-09-25 12:01:34
07:52:46.271 4 W - 检查实体NewLife.CommonEntity.Setting的数据表架构，模式：CheckTableWhenFirstUse
07:52:46.412 4 W - 初始化NewLife.CommonEntity.Setting数据
07:52:46.412 4 W - 开始检查连接[Common/MySql]的数据库架构……
07:52:46.490 4 W - [Common]的所有实体类（22个）：News,Messages,Setting,Category,Sequence,GuidCategory,Administrator,Menu,Role,RoleMenu,Log,Area,User,Simple,SimpleTree,Setting,Statistics,UserProfile,Attachment,Category,MyRole,Admin
07:52:46.490 4 W - [Common]需要检查架构的实体类（6个）：News,Messages,Setting,Category,MyRole,Admin
07:52:46.490 4 W - Common待检查表架构的实体个数：6
07:52:46.583 7 Y - DropDefault(LastLogin)
07:52:46.724 4 W - DropDefault(LastLogin)
07:52:46.802 4 W - 检查连接[Common/MySql]的数据库架构耗时00:00:00.3770955
07:52:46.802 7 Y - 初始化NewLife.YWS.Entities.Admin数据
07:52:46.802 4 W - 一级缓存：关闭缓存
07:52:48.611 10 W - 更新实体缓存（第1次）：NewLife.YWS.Entities.Admin 原因：第一次 Administrator<>.FindByName(String name)<-.Login(String username,String password,Int32 hashTimes)
07:52:48.627 10 W - 完成更新缓存（第1次）：NewLife.YWS.Entities.Admin
07:52:48.694 10 W - 清空实体缓存：NewLife.YWS.Entities.Admin 原因：修改数据后提交事务
07:52:48.714 10 W - 检查实体NewLife.CommonEntity.Log的数据表架构，模式：CheckTableWhenFirstUse
07:52:48.779 10 W - DropDefault(OccurTime)
07:52:48.779 10 W - AddDefault(OccurTime,)
07:52:48.779 10 W - 初始化NewLife.CommonEntity.Log数据
07:52:48.842 4 W - 更新实体缓存（第1次）：NewLife.YWS.Entities.MyRole 原因：第一次 Role<>.FindByID(Int32 id)<-
07:52:48.842 4 W - 初始化NewLife.YWS.Entities.MyRole数据
07:52:48.857 4 W - 检查实体NewLife.CommonEntity.RoleMenu的数据表架构，模式：CheckTableWhenFirstUse
07:52:48.873 4 W - 初始化NewLife.CommonEntity.RoleMenu数据
07:52:48.873 4 W - 如果某一个菜单对应的RoleMenu（角色菜单对应关系）为空或者只有一个，则授权第一个角色访问所有菜单！
07:52:48.888 4 W - 更新实体缓存（第1次）：NewLife.CommonEntity.Menu 原因：第一次 EntityTree<,>.FindAllByParent(EntityTree<,>.TKey parentKey)<-.FindChilds()
07:52:48.888 4 W - 检查实体NewLife.CommonEntity.Menu的数据表架构，模式：CheckTableWhenFirstUse
07:52:48.904 4 W - 初始化NewLife.CommonEntity.Menu数据
07:52:48.920 4 W - 完成更新缓存（第1次）：NewLife.CommonEntity.Menu
07:52:48.935 4 W - 更新实体缓存（第1次）：NewLife.CommonEntity.RoleMenu 原因：第一次 RoleMenu<>.CheckNonePerssion(Int32 menuID)<-Role<,,>.InitData()
07:52:48.935 4 W - 完成更新缓存（第1次）：NewLife.CommonEntity.RoleMenu
07:52:48.951 4 W - 完成更新缓存（第1次）：NewLife.YWS.Entities.MyRole
07:53:19.519 10 W - 初始化Bioinfo.Entites.Setting数据
07:53:19.551 10 W - 初始化Bioinfo.Entites.Category数据
07:53:19.566 10 W - 更新实体缓存（第1次）：Bioinfo.Entites.Category 原因：第一次 Category.FindById(Int32 id)<-Setting.get_Category()
07:53:19.566 10 W - 完成更新缓存（第1次）：Bioinfo.Entites.Category
07:55:42.967 7 W - 更新实体缓存（第2次）：NewLife.CommonEntity.Menu 原因：60秒过期 Menu<>.GetCurrentMenu()<-.get_Current()
07:55:42.967 7 W - 完成更新缓存（第2次）：NewLife.CommonEntity.Menu
07:55:42.983 7 W - 更新实体缓存（第2次）：NewLife.YWS.Entities.MyRole 原因：60秒过期 Role<>.FindByID(Int32 id)<-
07:55:42.983 7 W - 完成更新缓存（第2次）：NewLife.YWS.Entities.MyRole

#Software: .
#ProcessID: 4952
#AppDomain: c5a66244-1-129933503948217998
#BaseDirectory: C:\DevelopMent\Bioinfo\BioinfoWebSite\
#Date: 2012-09-29
#Fields: Time ThreadID IsPoolThread ThreadName Message
07:59:55.601 4 W - NewLife.Core v3.8.2012.0803 Build 2012-09-25 12:03:50
07:59:55.601 4 W - 为NewLife.CommonEntity.IManageProvider配置注册YWSManageProvider，标识Identity=，优先级Priority=5！
07:59:57.395 4 W - NewLife.XCode v8.8.2012.0828 Build 2012-09-25 12:01:34
07:59:57.395 4 W - 检查实体NewLife.CommonEntity.Setting的数据表架构，模式：CheckTableWhenFirstUse
07:59:57.551 4 W - 初始化NewLife.CommonEntity.Setting数据
07:59:57.551 4 W - 开始检查连接[Common/MySql]的数据库架构……
07:59:57.645 4 W - [Common]的所有实体类（18个）：Sequence,GuidCategory,Administrator,Menu,Role,RoleMenu,Log,Area,User,Simple,SimpleTree,Setting,Statistics,UserProfile,Attachment,Category,MyRole,Admin
07:59:57.645 4 W - [Common]需要检查架构的实体类（2个）：MyRole,Admin
07:59:57.645 4 W - Common待检查表架构的实体个数：2
07:59:57.723 8 Y - DropDefault(LastLogin)
07:59:57.879 4 W - DropDefault(LastLogin)
07:59:57.957 4 W - 检查连接[Common/MySql]的数据库架构耗时00:00:00.4055663
07:59:57.957 8 Y - 初始化NewLife.YWS.Entities.Admin数据
07:59:57.957 4 W - 一级缓存：关闭缓存
08:00:00.250 4 W - 更新实体缓存（第1次）：NewLife.YWS.Entities.Admin 原因：第一次 Administrator<>.FindByName(String name)<-.Login(String username,String password,Int32 hashTimes)
08:00:00.266 4 W - 完成更新缓存（第1次）：NewLife.YWS.Entities.Admin
08:00:00.323 4 W - 清空实体缓存：NewLife.YWS.Entities.Admin 原因：修改数据后提交事务
08:00:00.343 4 W - 检查实体NewLife.CommonEntity.Log的数据表架构，模式：CheckTableWhenFirstUse
08:00:00.343 4 W - DropDefault(OccurTime)
08:00:00.343 4 W - AddDefault(OccurTime,)
08:00:00.343 4 W - 初始化NewLife.CommonEntity.Log数据
08:00:00.403 8 W - 更新实体缓存（第1次）：NewLife.YWS.Entities.MyRole 原因：第一次 Role<>.FindByID(Int32 id)<-
08:00:00.403 8 W - 初始化NewLife.YWS.Entities.MyRole数据
08:00:00.418 8 W - 检查实体NewLife.CommonEntity.RoleMenu的数据表架构，模式：CheckTableWhenFirstUse
08:00:00.418 8 W - 初始化NewLife.CommonEntity.RoleMenu数据
08:00:00.418 8 W - 如果某一个菜单对应的RoleMenu（角色菜单对应关系）为空或者只有一个，则授权第一个角色访问所有菜单！
08:00:00.434 8 W - 更新实体缓存（第1次）：NewLife.CommonEntity.Menu 原因：第一次 EntityTree<,>.FindAllByParent(EntityTree<,>.TKey parentKey)<-.FindChilds()
08:00:00.434 8 W - 检查实体NewLife.CommonEntity.Menu的数据表架构，模式：CheckTableWhenFirstUse
08:00:00.465 8 W - 初始化NewLife.CommonEntity.Menu数据
08:00:00.465 8 W - 完成更新缓存（第1次）：NewLife.CommonEntity.Menu
08:00:00.481 8 W - 更新实体缓存（第1次）：NewLife.CommonEntity.RoleMenu 原因：第一次 RoleMenu<>.CheckNonePerssion(Int32 menuID)<-Role<,,>.InitData()
08:00:00.496 8 W - 完成更新缓存（第1次）：NewLife.CommonEntity.RoleMenu
08:00:00.496 8 W - 完成更新缓存（第1次）：NewLife.YWS.Entities.MyRole
08:00:05.788 4 W - 初始化Bioinfo.Entites.News数据
08:00:05.820 4 W - 初始化Bioinfo.Entites.Category数据
08:00:05.830 4 W - 更新实体缓存（第1次）：Bioinfo.Entites.Category 原因：第一次 Category.FindById(Int32 id)<-News.get_Category()
08:00:05.830 4 W - 完成更新缓存（第1次）：Bioinfo.Entites.Category
08:00:07.113 4 W - 初始化Bioinfo.Entites.Setting数据
08:06:53.706 16 W - 更新实体缓存（第2次）：NewLife.CommonEntity.Menu 原因：60秒过期 Menu<>.GetCurrentMenu()<-.get_Current()
08:06:53.722 16 W - 完成更新缓存（第2次）：NewLife.CommonEntity.Menu
08:06:53.731 16 W - 更新实体缓存（第2次）：Bioinfo.Entites.Category 原因：60秒过期 EntityTree<,>.FindAllByParent(EntityTree<,>.TKey parentKey)<-Common_NewsForm.LoadCategoryIdData()
08:06:53.734 16 W - 完成更新缓存（第2次）：Bioinfo.Entites.Category
08:08:10.741 10 W - 更新实体缓存（第3次）：NewLife.CommonEntity.Menu 原因：60秒过期 Menu<>.GetCurrentMenu()<-.get_Current()
08:08:10.745 10 W - 完成更新缓存（第3次）：NewLife.CommonEntity.Menu
08:08:11.830 17 W - 更新实体缓存（第3次）：Bioinfo.Entites.Category 原因：60秒过期 Category.FindById(Int32 id)<-News.get_Category()
08:08:11.833 17 W - 完成更新缓存（第3次）：Bioinfo.Entites.Category
08:09:00.712 16 W - 更新实体缓存（第2次）：NewLife.YWS.Entities.MyRole 原因：60秒过期 Role<>.FindByID(Int32 id)<-
08:09:00.715 16 W - 完成更新缓存（第2次）：NewLife.YWS.Entities.MyRole
08:09:03.943 16 W - 异步更新实体缓存（第1次）：NewLife.CommonEntity.Log 原因：600秒过期
08:09:03.970 10 Y - 完成更新缓存（第1次）：NewLife.CommonEntity.Log
08:09:09.161 16 W - 更新实体缓存（第2次）：NewLife.CommonEntity.RoleMenu 原因：60秒过期 EntityCache<>.XCode.Cache.IEntityCache.get_Entities()<-Pages_RoleMenu.FindByRoleAndMenu(Int32 roleID,Int32 menuID)
08:09:09.164 16 W - 完成更新缓存（第2次）：NewLife.CommonEntity.RoleMenu
08:09:11.916 16 W - 更新实体缓存（第4次）：NewLife.CommonEntity.Menu 原因：60秒过期 Menu<>.GetCurrentMenu()<-.get_Current()
08:09:11.920 16 W - 完成更新缓存（第4次）：NewLife.CommonEntity.Menu
08:09:39.653 10 W - 初始化Bioinfo.Entites.Messages数据
08:09:40.462 16 W - 更新实体缓存（第4次）：Bioinfo.Entites.Category 原因：60秒过期 Category.FindById(Int32 id)<-News.get_Category()
08:09:40.465 16 W - 完成更新缓存（第4次）：Bioinfo.Entites.Category
08:10:01.239 15 W - 实体缓存<Menu>总次数192，一级命中188（97.92%）
08:10:20.947 10 W - 更新实体缓存（第5次）：NewLife.CommonEntity.Menu 原因：60秒过期 Menu<>.GetCurrentMenu()<-.get_Current()
08:10:21.145 10 W - 完成更新缓存（第5次）：NewLife.CommonEntity.Menu
08:10:21.152 10 W - 实体缓存<Category>总次数31，一级命中27（87.10%）
08:13:31.961 13 W - 更新实体缓存（第6次）：NewLife.CommonEntity.Menu 原因：60秒过期 Menu<>.GetCurrentMenu()<-.get_Current()
08:13:31.966 13 W - 完成更新缓存（第6次）：NewLife.CommonEntity.Menu
08:13:31.979 13 W - 更新实体缓存（第5次）：Bioinfo.Entites.Category 原因：60秒过期 EntityTree<,>.FindAllByParent(EntityTree<,>.TKey parentKey)<-Common_NewsForm.LoadCategoryIdData()
08:13:31.982 13 W - 完成更新缓存（第5次）：Bioinfo.Entites.Category
08:15:14.112 14 W - 更新实体缓存（第7次）：NewLife.CommonEntity.Menu 原因：60秒过期 Menu<>.GetCurrentMenu()<-.get_Current()
08:15:14.314 14 W - 完成更新缓存（第7次）：NewLife.CommonEntity.Menu
08:15:14.326 14 W - 更新实体缓存（第6次）：Bioinfo.Entites.Category 原因：60秒过期 EntityTree<,>.FindAllByParent(EntityTree<,>.TKey parentKey)<-Common_NewsForm.LoadCategoryIdData()
08:15:14.329 14 W - 完成更新缓存（第6次）：Bioinfo.Entites.Category
08:16:17.857 20 W - 更新实体缓存（第8次）：NewLife.CommonEntity.Menu 原因：60秒过期 Menu<>.GetCurrentMenu()<-.get_Current()
08:16:17.861 20 W - 完成更新缓存（第8次）：NewLife.CommonEntity.Menu
08:16:19.459 18 W - 更新实体缓存（第7次）：Bioinfo.Entites.Category 原因：60秒过期 Category.FindById(Int32 id)<-News.get_Category()
08:16:19.463 18 W - 完成更新缓存（第7次）：Bioinfo.Entites.Category
08:21:37.661 18 W - 实体缓存<Menu>总次数231，一级命中223（96.54%）
08:21:37.664 18 W - 更新实体缓存（第9次）：NewLife.CommonEntity.Menu 原因：60秒过期 Menu<>.GetCurrentMenu()<-.get_Current()
08:21:37.678 18 W - 完成更新缓存（第9次）：NewLife.CommonEntity.Menu
08:21:37.692 18 W - 实体缓存<Category>总次数58，一级命中51（87.93%）
08:21:37.693 18 W - 更新实体缓存（第8次）：Bioinfo.Entites.Category 原因：60秒过期 EntityTree<,>.FindAllByParent(EntityTree<,>.TKey parentKey)<-Common_NewsForm.LoadCategoryIdData()
08:21:37.696 18 W - 完成更新缓存（第8次）：Bioinfo.Entites.Category
08:22:48.800 18 W - 更新实体缓存（第10次）：NewLife.CommonEntity.Menu 原因：60秒过期 Menu<>.GetCurrentMenu()<-.get_Current()
08:22:48.806 18 W - 完成更新缓存（第10次）：NewLife.CommonEntity.Menu
08:22:48.812 18 W - 更新实体缓存（第9次）：Bioinfo.Entites.Category 原因：60秒过期 EntityTree<,>.FindAllByParent(EntityTree<,>.TKey parentKey)<-Common_NewsForm.LoadCategoryIdData()
08:22:48.817 18 W - 完成更新缓存（第9次）：Bioinfo.Entites.Category
08:24:56.750 15 W - 更新实体缓存（第11次）：NewLife.CommonEntity.Menu 原因：60秒过期 Menu<>.GetCurrentMenu()<-.get_Current()
08:24:56.755 15 W - 完成更新缓存（第11次）：NewLife.CommonEntity.Menu
08:24:56.769 15 W - 更新实体缓存（第10次）：Bioinfo.Entites.Category 原因：60秒过期 EntityTree<,>.FindAllByParent(EntityTree<,>.TKey parentKey)<-Common_NewsForm.LoadCategoryIdData()
08:24:56.772 15 W - 完成更新缓存（第10次）：Bioinfo.Entites.Category
08:26:17.947 17 W - 更新实体缓存（第12次）：NewLife.CommonEntity.Menu 原因：60秒过期 Menu<>.GetCurrentMenu()<-.get_Current()
08:26:17.952 17 W - 完成更新缓存（第12次）：NewLife.CommonEntity.Menu
08:26:17.965 17 W - 更新实体缓存（第11次）：Bioinfo.Entites.Category 原因：60秒过期 EntityTree<,>.FindAllByParent(EntityTree<,>.TKey parentKey)<-Common_NewsForm.LoadCategoryIdData()
08:26:17.968 17 W - 完成更新缓存（第11次）：Bioinfo.Entites.Category
08:27:37.574 18 W - 更新实体缓存（第13次）：NewLife.CommonEntity.Menu 原因：60秒过期 Menu<>.GetCurrentMenu()<-.get_Current()
08:27:37.578 18 W - 完成更新缓存（第13次）：NewLife.CommonEntity.Menu
08:27:37.591 18 W - 更新实体缓存（第12次）：Bioinfo.Entites.Category 原因：60秒过期 EntityTree<,>.FindAllByParent(EntityTree<,>.TKey parentKey)<-Common_NewsForm.LoadCategoryIdData()
08:27:37.594 18 W - 完成更新缓存（第12次）：Bioinfo.Entites.Category
08:28:50.391 15 W - 更新实体缓存（第14次）：NewLife.CommonEntity.Menu 原因：60秒过期 Menu<>.GetCurrentMenu()<-.get_Current()
08:28:50.396 15 W - 完成更新缓存（第14次）：NewLife.CommonEntity.Menu
08:28:50.406 15 W - 更新实体缓存（第13次）：Bioinfo.Entites.Category 原因：60秒过期 EntityTree<,>.FindAllByParent(EntityTree<,>.TKey parentKey)<-Common_NewsForm.LoadCategoryIdData()
08:28:50.410 15 W - 完成更新缓存（第13次）：Bioinfo.Entites.Category
08:30:38.249 18 W - 更新实体缓存（第15次）：NewLife.CommonEntity.Menu 原因：60秒过期 Menu<>.GetCurrentMenu()<-.get_Current()
08:30:38.253 18 W - 完成更新缓存（第15次）：NewLife.CommonEntity.Menu
08:31:26.537 2 N - 清空单对象缓存：NewLife.CommonEntity.Setting

#Software: .
#ProcessID: 2600
#AppDomain: c5a66244-1-129933533610555847
#BaseDirectory: C:\DevelopMent\Bioinfo\BioinfoWebSite\
#Date: 2012-09-29
#Fields: Time ThreadID IsPoolThread ThreadName Message
08:49:24.155 4 W - NewLife.Core v3.8.2012.0803 Build 2012-09-25 12:03:50
08:49:24.155 4 W - 为NewLife.CommonEntity.IManageProvider配置注册YWSManageProvider，标识Identity=，优先级Priority=5！
08:49:25.356 4 W - NewLife.XCode v8.8.2012.0828 Build 2012-09-25 12:01:34
08:49:25.356 4 W - 检查实体NewLife.CommonEntity.Setting的数据表架构，模式：CheckTableWhenFirstUse
08:49:25.481 4 W - 初始化NewLife.CommonEntity.Setting数据
08:49:25.481 4 W - 开始检查连接[Common/MySql]的数据库架构……
08:49:25.559 4 W - [Common]的所有实体类（22个）：Category,News,Messages,Setting,Sequence,GuidCategory,Administrator,Menu,Role,RoleMenu,Log,Area,User,Simple,SimpleTree,Setting,Statistics,UserProfile,Attachment,Category,MyRole,Admin
08:49:25.559 4 W - [Common]需要检查架构的实体类（6个）：Category,News,Messages,Setting,MyRole,Admin
08:49:25.559 4 W - Common待检查表架构的实体个数：6
08:49:25.637 8 Y - DropDefault(LastLogin)
08:49:25.793 4 W - DropDefault(LastLogin)
08:49:25.871 4 W - 检查连接[Common/MySql]的数据库架构耗时00:00:00.3899169
08:49:25.871 8 Y - 初始化NewLife.YWS.Entities.Admin数据
08:49:25.886 4 W - 一级缓存：关闭缓存
08:49:38.101 8 W - 更新实体缓存（第1次）：NewLife.YWS.Entities.Admin 原因：第一次 Administrator<>.FindByName(String name)<-.Login(String username,String password,Int32 hashTimes)
08:49:38.101 8 W - 完成更新缓存（第1次）：NewLife.YWS.Entities.Admin
08:49:38.142 8 W - 清空实体缓存：NewLife.YWS.Entities.Admin 原因：修改数据后提交事务
08:49:38.162 8 W - 检查实体NewLife.CommonEntity.Log的数据表架构，模式：CheckTableWhenFirstUse
08:49:38.248 8 W - DropDefault(OccurTime)
08:49:38.248 8 W - AddDefault(OccurTime,)
08:49:38.248 8 W - 初始化NewLife.CommonEntity.Log数据
08:49:38.295 8 W - 更新实体缓存（第1次）：NewLife.YWS.Entities.MyRole 原因：第一次 Role<>.FindByID(Int32 id)<-
08:49:38.295 8 W - 初始化NewLife.YWS.Entities.MyRole数据
08:49:38.310 8 W - 检查实体NewLife.CommonEntity.RoleMenu的数据表架构，模式：CheckTableWhenFirstUse
08:49:38.310 8 W - 初始化NewLife.CommonEntity.RoleMenu数据
08:49:38.310 8 W - 如果某一个菜单对应的RoleMenu（角色菜单对应关系）为空或者只有一个，则授权第一个角色访问所有菜单！
08:49:38.326 8 W - 更新实体缓存（第1次）：NewLife.CommonEntity.Menu 原因：第一次 EntityTree<,>.FindAllByParent(EntityTree<,>.TKey parentKey)<-.FindChilds()
08:49:38.326 8 W - 检查实体NewLife.CommonEntity.Menu的数据表架构，模式：CheckTableWhenFirstUse
08:49:38.341 8 W - 初始化NewLife.CommonEntity.Menu数据
08:49:38.357 8 W - 完成更新缓存（第1次）：NewLife.CommonEntity.Menu
08:49:38.373 8 W - 更新实体缓存（第1次）：NewLife.CommonEntity.RoleMenu 原因：第一次 RoleMenu<>.CheckNonePerssion(Int32 menuID)<-Role<,,>.InitData()
08:49:38.373 8 W - 完成更新缓存（第1次）：NewLife.CommonEntity.RoleMenu
08:49:38.388 8 W - 完成更新缓存（第1次）：NewLife.YWS.Entities.MyRole
08:49:44.315 4 W - 初始化Bioinfo.Entites.News数据
08:49:44.346 4 W - 初始化Bioinfo.Entites.Category数据
08:49:44.362 4 W - 更新实体缓存（第1次）：Bioinfo.Entites.Category 原因：第一次 Category.FindById(Int32 id)<-News.get_Category()
08:49:44.362 4 W - 完成更新缓存（第1次）：Bioinfo.Entites.Category
08:50:42.427 11 W - 更新实体缓存（第2次）：NewLife.CommonEntity.Menu 原因：60秒过期 Menu<>.GetCurrentMenu()<-.get_Current()
08:50:42.427 11 W - 完成更新缓存（第2次）：NewLife.CommonEntity.Menu
08:51:17.947 2 N - 清空单对象缓存：NewLife.CommonEntity.Setting

#Software: .
#ProcessID: 5180
#AppDomain: c5a66244-1-129933535926747312
#BaseDirectory: C:\DevelopMent\Bioinfo\BioinfoWebSite\
#Date: 2012-09-29
#Fields: Time ThreadID IsPoolThread ThreadName Message
08:53:13.392 5 W - NewLife.Core v3.8.2012.0803 Build 2012-09-25 12:03:50
08:53:13.392 5 W - 为NewLife.CommonEntity.IManageProvider配置注册YWSManageProvider，标识Identity=，优先级Priority=5！
08:53:14.375 5 W - NewLife.XCode v8.8.2012.0828 Build 2012-09-25 12:01:34
08:53:14.375 5 W - 一级缓存：关闭缓存
08:53:14.390 5 W - 更新实体缓存（第1次）：NewLife.YWS.Entities.Admin 原因：第一次 Administrator<>.FindByName(String name)<-.Login(String username,String password,Int32 hashTimes)
08:53:14.905 5 W - DropDefault(LastLogin)
08:53:14.952 5 W - 初始化NewLife.YWS.Entities.Admin数据
08:53:14.967 5 W - 开始检查连接[Common/MySql]的数据库架构……
08:53:15.030 5 W - [Common]的所有实体类（22个）：Sequence,GuidCategory,Administrator,Menu,Role,RoleMenu,Log,Area,User,Simple,SimpleTree,Setting,Statistics,UserProfile,Attachment,Category,Category,News,Messages,Setting,MyRole,Admin
08:53:15.030 5 W - [Common]需要检查架构的实体类（6个）：Category,News,Messages,Setting,MyRole,Admin
08:53:15.030 5 W - Common待检查表架构的实体个数：6
08:53:15.186 5 W - DropDefault(LastLogin)
08:53:15.217 5 W - 检查连接[Common/MySql]的数据库架构耗时00:00:00.2557887
08:53:15.248 5 W - 完成更新缓存（第1次）：NewLife.YWS.Entities.Admin
08:53:15.295 5 W - 清空实体缓存：NewLife.YWS.Entities.Admin 原因：修改数据后提交事务
08:53:15.326 5 W - 检查实体NewLife.CommonEntity.Log的数据表架构，模式：CheckTableWhenFirstUse
08:53:15.326 5 W - DropDefault(OccurTime)
08:53:15.326 5 W - AddDefault(OccurTime,)
08:53:15.326 5 W - 初始化NewLife.CommonEntity.Log数据
08:53:15.357 5 W - 更新实体缓存（第1次）：NewLife.CommonEntity.Menu 原因：第一次 Menu<>.GetCurrentMenu()<-.get_Current()
08:53:15.357 5 W - 检查实体NewLife.CommonEntity.Menu的数据表架构，模式：CheckTableWhenFirstUse
08:53:15.404 5 W - 初始化NewLife.CommonEntity.Menu数据
08:53:15.420 5 W - 完成更新缓存（第1次）：NewLife.CommonEntity.Menu
08:53:15.435 5 W - 更新实体缓存（第1次）：NewLife.YWS.Entities.MyRole 原因：第一次 Role<>.FindByID(Int32 id)<-
08:53:15.435 5 W - 初始化NewLife.YWS.Entities.MyRole数据
08:53:15.451 5 W - 检查实体NewLife.CommonEntity.RoleMenu的数据表架构，模式：CheckTableWhenFirstUse
08:53:15.451 5 W - 初始化NewLife.CommonEntity.RoleMenu数据
08:53:15.451 5 W - 如果某一个菜单对应的RoleMenu（角色菜单对应关系）为空或者只有一个，则授权第一个角色访问所有菜单！
08:53:15.467 5 W - 更新实体缓存（第1次）：NewLife.CommonEntity.RoleMenu 原因：第一次 RoleMenu<>.CheckNonePerssion(Int32 menuID)<-Role<,,>.InitData()
08:53:15.482 5 W - 完成更新缓存（第1次）：NewLife.CommonEntity.RoleMenu
08:53:15.498 5 W - 完成更新缓存（第1次）：NewLife.YWS.Entities.MyRole
08:53:15.545 5 W - 更新实体缓存（第1次）：Bioinfo.Entites.Category 原因：第一次 EntityTree<,>.FindByKeyWithCache(EntityTree<,>.TKey key)<-.FindAllChildsByParent(EntityTree<,>.TKey parentKey)
08:53:15.545 5 W - 初始化Bioinfo.Entites.Category数据
08:53:15.560 5 W - 完成更新缓存（第1次）：Bioinfo.Entites.Category
08:55:05.618 4 W - 更新实体缓存（第2次）：NewLife.CommonEntity.Menu 原因：60秒过期 Menu<>.GetCurrentMenu()<-.get_Current()
08:55:05.618 4 W - 完成更新缓存（第2次）：NewLife.CommonEntity.Menu
08:55:05.633 4 W - 更新实体缓存（第2次）：Bioinfo.Entites.Category 原因：60秒过期 EntityTree<,>.FindByKeyWithCache(EntityTree<,>.TKey key)<-.FindAllChildsByParent(EntityTree<,>.TKey parentKey)
08:55:05.633 4 W - 完成更新缓存（第2次）：Bioinfo.Entites.Category
08:56:14.583 5 W - 更新实体缓存（第3次）：NewLife.CommonEntity.Menu 原因：60秒过期 Menu<>.GetCurrentMenu()<-.get_Current()
08:56:14.599 5 W - 完成更新缓存（第3次）：NewLife.CommonEntity.Menu
08:56:14.599 5 W - 更新实体缓存（第3次）：Bioinfo.Entites.Category 原因：60秒过期 EntityTree<,>.FindByKeyWithCache(EntityTree<,>.TKey key)<-.FindAllChildsByParent(EntityTree<,>.TKey parentKey)
08:56:14.599 5 W - 完成更新缓存（第3次）：Bioinfo.Entites.Category
08:57:30.214 15 W - 更新实体缓存（第4次）：NewLife.CommonEntity.Menu 原因：60秒过期 Menu<>.GetCurrentMenu()<-.get_Current()
08:57:30.214 15 W - 完成更新缓存（第4次）：NewLife.CommonEntity.Menu
08:57:30.229 15 W - 更新实体缓存（第4次）：Bioinfo.Entites.Category 原因：60秒过期 EntityTree<,>.FindByKeyWithCache(EntityTree<,>.TKey key)<-.FindAllChildsNoParent(EntityTree<,>.TKey parentKey)
08:57:30.229 15 W - 完成更新缓存（第4次）：Bioinfo.Entites.Category
08:57:57.946 12 W - 初始化Bioinfo.Entites.News数据

#Software: .
#ProcessID: 1012
#AppDomain: c5a66244-1-129933539950142049
#BaseDirectory: C:\DevelopMent\Bioinfo\BioinfoWebSite\
#Date: 2012-09-29
#Fields: Time ThreadID IsPoolThread ThreadName Message
08:59:55.763 4 W - NewLife.Core v3.8.2012.0803 Build 2012-09-25 12:03:50
08:59:55.763 4 W - 为NewLife.CommonEntity.IManageProvider配置注册YWSManageProvider，标识Identity=，优先级Priority=5！
08:59:57.745 8 W - NewLife.XCode v8.8.2012.0828 Build 2012-09-25 12:01:34
08:59:57.745 8 W - 检查实体NewLife.CommonEntity.Setting的数据表架构，模式：CheckTableWhenFirstUse
08:59:57.957 8 W - 初始化NewLife.CommonEntity.Setting数据
08:59:57.964 8 W - 开始检查连接[Common/MySql]的数据库架构……
08:59:58.089 8 W - [Common]的所有实体类（18个）：Sequence,GuidCategory,Administrator,Menu,Role,RoleMenu,Log,Area,User,Simple,SimpleTree,Setting,Statistics,UserProfile,Attachment,Category,MyRole,Admin
08:59:58.089 8 W - [Common]需要检查架构的实体类（2个）：MyRole,Admin
08:59:58.090 8 W - Common待检查表架构的实体个数：2
08:59:58.135 4 Y - DropDefault(LastLogin)
08:59:58.291 8 W - DropDefault(LastLogin)
08:59:58.357 8 W - 检查连接[Common/MySql]的数据库架构耗时00:00:00.3926596
08:59:58.359 8 W - 一级缓存：关闭缓存
08:59:58.360 4 Y - 初始化NewLife.YWS.Entities.Admin数据
09:00:24.167 10 W - 更新实体缓存（第1次）：NewLife.YWS.Entities.Admin 原因：第一次 Administrator<>.FindByName(String name)<-.Login(String username,String password,Int32 hashTimes)
09:00:24.174 10 W - 完成更新缓存（第1次）：NewLife.YWS.Entities.Admin
09:00:24.207 10 W - 清空实体缓存：NewLife.YWS.Entities.Admin 原因：修改数据后提交事务
09:00:24.231 10 W - 检查实体NewLife.CommonEntity.Log的数据表架构，模式：CheckTableWhenFirstUse
09:00:24.304 10 W - DropDefault(OccurTime)
09:00:24.304 10 W - AddDefault(OccurTime,)
09:00:24.304 10 W - 初始化NewLife.CommonEntity.Log数据
09:00:24.363 4 W - 更新实体缓存（第1次）：NewLife.YWS.Entities.MyRole 原因：第一次 Role<>.FindByID(Int32 id)<-
09:00:24.363 4 W - 初始化NewLife.YWS.Entities.MyRole数据
09:00:24.377 4 W - 检查实体NewLife.CommonEntity.RoleMenu的数据表架构，模式：CheckTableWhenFirstUse
09:00:24.443 4 W - 初始化NewLife.CommonEntity.RoleMenu数据
09:00:24.444 4 W - 如果某一个菜单对应的RoleMenu（角色菜单对应关系）为空或者只有一个，则授权第一个角色访问所有菜单！
09:00:24.458 4 W - 更新实体缓存（第1次）：NewLife.CommonEntity.Menu 原因：第一次 EntityTree<,>.FindAllByParent(EntityTree<,>.TKey parentKey)<-.FindChilds()
09:00:24.458 4 W - 检查实体NewLife.CommonEntity.Menu的数据表架构，模式：CheckTableWhenFirstUse
09:00:24.489 4 W - 初始化NewLife.CommonEntity.Menu数据
09:00:24.499 4 W - 完成更新缓存（第1次）：NewLife.CommonEntity.Menu
09:00:24.511 4 W - 更新实体缓存（第1次）：NewLife.CommonEntity.RoleMenu 原因：第一次 RoleMenu<>.CheckNonePerssion(Int32 menuID)<-Role<,,>.InitData()
09:00:24.516 4 W - 完成更新缓存（第1次）：NewLife.CommonEntity.RoleMenu
09:00:24.530 4 W - 完成更新缓存（第1次）：NewLife.YWS.Entities.MyRole
09:00:35.450 8 W - 初始化Bioinfo.Entites.Category数据
09:16:01.502 2 N - 清空单对象缓存：NewLife.CommonEntity.Setting

#Software: .
#ProcessID: 5132
#AppDomain: c5a66244-1-129933573297696262
#BaseDirectory: C:\DevelopMent\Bioinfo\BioinfoWebSite\
#Date: 2012-09-29
#Fields: Time ThreadID IsPoolThread ThreadName Message
09:55:30.471 4 W - NewLife.Core v3.8.2012.0803 Build 2012-09-25 12:03:50
09:55:30.471 4 W - 为NewLife.CommonEntity.IManageProvider配置注册YWSManageProvider，标识Identity=，优先级Priority=5！
09:55:32.390 4 W - NewLife.XCode v8.8.2012.0828 Build 2012-09-25 12:01:34
09:55:32.390 4 W - 检查实体NewLife.CommonEntity.Setting的数据表架构，模式：CheckTableWhenFirstUse
09:55:32.530 4 W - 初始化NewLife.CommonEntity.Setting数据
09:55:32.546 4 W - 开始检查连接[Common/MySql]的数据库架构……
09:55:32.624 4 W - [Common]的所有实体类（18个）：Sequence,GuidCategory,Administrator,Menu,Role,RoleMenu,Log,Area,User,Simple,SimpleTree,Setting,Statistics,UserProfile,Attachment,Category,MyRole,Admin
09:55:32.624 4 W - [Common]需要检查架构的实体类（2个）：MyRole,Admin
09:55:32.624 4 W - Common待检查表架构的实体个数：2
09:55:32.780 10 Y - 初始化NewLife.YWS.Entities.Admin数据
09:55:32.780 4 W - DropDefault(LastLogin)
09:55:32.780 10 Y - 一级缓存：关闭缓存
09:55:32.811 4 W - 检查连接[Common/MySql]的数据库架构耗时00:00:00.2737652
09:55:34.371 4 W - 更新实体缓存（第1次）：NewLife.YWS.Entities.Admin 原因：第一次 Administrator<>.FindByName(String name)<-.Login(String username,String password,Int32 hashTimes)
09:55:34.371 4 W - 完成更新缓存（第1次）：NewLife.YWS.Entities.Admin
09:55:34.402 4 W - 清空实体缓存：NewLife.YWS.Entities.Admin 原因：修改数据后提交事务
09:55:34.428 4 W - 检查实体NewLife.CommonEntity.Log的数据表架构，模式：CheckTableWhenFirstUse
09:55:34.438 4 W - DropDefault(OccurTime)
09:55:34.438 4 W - AddDefault(OccurTime,)
09:55:34.438 4 W - 初始化NewLife.CommonEntity.Log数据
09:55:34.488 4 W - 更新实体缓存（第1次）：NewLife.YWS.Entities.MyRole 原因：第一次 Role<>.FindByID(Int32 id)<-
09:55:34.488 4 W - 初始化NewLife.YWS.Entities.MyRole数据
09:55:34.498 4 W - 检查实体NewLife.CommonEntity.RoleMenu的数据表架构，模式：CheckTableWhenFirstUse
09:55:34.498 4 W - 初始化NewLife.CommonEntity.RoleMenu数据
09:55:34.498 4 W - 如果某一个菜单对应的RoleMenu（角色菜单对应关系）为空或者只有一个，则授权第一个角色访问所有菜单！
09:55:34.508 4 W - 更新实体缓存（第1次）：NewLife.CommonEntity.Menu 原因：第一次 EntityTree<,>.FindAllByParent(EntityTree<,>.TKey parentKey)<-.FindChilds()
09:55:34.508 4 W - 检查实体NewLife.CommonEntity.Menu的数据表架构，模式：CheckTableWhenFirstUse
09:55:34.534 4 W - 初始化NewLife.CommonEntity.Menu数据
09:55:34.549 4 W - 完成更新缓存（第1次）：NewLife.CommonEntity.Menu
09:55:34.565 4 W - 更新实体缓存（第1次）：NewLife.CommonEntity.RoleMenu 原因：第一次 RoleMenu<>.CheckNonePerssion(Int32 menuID)<-Role<,,>.InitData()
09:55:34.565 4 W - 完成更新缓存（第1次）：NewLife.CommonEntity.RoleMenu
09:55:34.580 4 W - 完成更新缓存（第1次）：NewLife.YWS.Entities.MyRole
09:55:40.219 10 W - 初始化Bioinfo.Entites.Category数据
09:56:59.286 10 W - 更新实体缓存（第2次）：NewLife.CommonEntity.Menu 原因：60秒过期 Menu<>.GetCurrentMenu()<-.get_Current()
09:56:59.301 10 W - 完成更新缓存（第2次）：NewLife.CommonEntity.Menu
09:58:13.972 10 W - 更新实体缓存（第3次）：NewLife.CommonEntity.Menu 原因：60秒过期 Menu<>.GetCurrentMenu()<-.get_Current()
09:58:13.972 10 W - 完成更新缓存（第3次）：NewLife.CommonEntity.Menu
10:02:25.064 2 N - 清空单对象缓存：NewLife.CommonEntity.Setting

#Software: .
#ProcessID: 5132
#AppDomain: c5a66244-2-129933577905098439
#BaseDirectory: C:\DevelopMent\Bioinfo\BioinfoWebSite\
#Date: 2012-09-29
#Fields: Time ThreadID IsPoolThread ThreadName Message
10:03:13.892 14 W - NewLife.Core v3.8.2012.0803 Build 2012-09-25 12:03:50
10:03:13.892 14 W - 为NewLife.CommonEntity.IManageProvider配置注册YWSManageProvider，标识Identity=，优先级Priority=5！
10:03:15.015 9 W - NewLife.XCode v8.8.2012.0828 Build 2012-09-25 12:01:34
10:03:15.015 9 W - 一级缓存：关闭缓存
10:03:15.062 9 W - 更新实体缓存（第1次）：NewLife.YWS.Entities.Admin 原因：第一次 Administrator<>.FindByName(String name)<-.Login(String username,String password,Int32 hashTimes)
10:03:15.561 9 W - DropDefault(LastLogin)
10:03:15.608 9 W - 初始化NewLife.YWS.Entities.Admin数据
10:03:15.608 9 W - 开始检查连接[Common/MySql]的数据库架构……
10:03:15.701 9 W - [Common]的所有实体类（22个）：Category,News,Messages,Setting,Sequence,GuidCategory,Administrator,Menu,Role,RoleMenu,Log,Area,User,Simple,SimpleTree,Setting,Statistics,UserProfile,Attachment,Category,MyRole,Admin
10:03:15.701 9 W - [Common]需要检查架构的实体类（6个）：Category,News,Messages,Setting,MyRole,Admin
10:03:15.701 9 W - Common待检查表架构的实体个数：6
10:03:15.889 9 W - DropDefault(LastLogin)
10:03:15.935 9 W - 检查连接[Common/MySql]的数据库架构耗时00:00:00.3194657
10:03:15.951 9 W - 完成更新缓存（第1次）：NewLife.YWS.Entities.Admin
10:03:16.029 14 W - 清空实体缓存：NewLife.YWS.Entities.Admin 原因：修改数据后提交事务
10:03:16.045 14 W - 检查实体NewLife.CommonEntity.Log的数据表架构，模式：CheckTableWhenFirstUse
10:03:16.091 9 W - 更新实体缓存（第1次）：NewLife.CommonEntity.Menu 原因：第一次 Menu<>.GetCurrentMenu()<-.get_Current()
10:03:16.091 9 W - 检查实体NewLife.CommonEntity.Menu的数据表架构，模式：CheckTableWhenFirstUse
10:03:16.138 9 W - 初始化NewLife.CommonEntity.Menu数据
10:03:16.138 9 W - 完成更新缓存（第1次）：NewLife.CommonEntity.Menu
10:03:16.154 9 W - 更新实体缓存（第1次）：NewLife.YWS.Entities.MyRole 原因：第一次 Role<>.FindByID(Int32 id)<-
10:03:16.169 9 W - 初始化NewLife.YWS.Entities.MyRole数据
10:03:16.169 14 W - 修改表AddColumn失败！Duplicate column name 'ID'[SQL:Alter Table Log Add ID INT NOT NULL AUTO_INCREMENT COMMENT '编号'][DB:Common/MySql]
10:03:16.169 14 W - 修改表AddColumn失败！Duplicate column name 'Category'[SQL:Alter Table Log Add Category NVARCHAR(50) NOT NULL COMMENT '类别'][DB:Common/MySql]
10:03:16.169 14 W - 修改表AddColumn失败！Duplicate column name 'Action'[SQL:Alter Table Log Add Action NVARCHAR(50) NOT NULL COMMENT '操作'][DB:Common/MySql]
10:03:16.169 9 W - 检查实体NewLife.CommonEntity.RoleMenu的数据表架构，模式：CheckTableWhenFirstUse
10:03:16.169 14 W - 修改表AddColumn失败！Duplicate column name 'UserID'[SQL:Alter Table Log Add UserID INT NOT NULL Default 0 COMMENT '用户编号'][DB:Common/MySql]
10:03:16.185 14 W - 修改表AddColumn失败！Duplicate column name 'UserName'[SQL:Alter Table Log Add UserName NVARCHAR(50) COMMENT '用户名'][DB:Common/MySql]
10:03:16.185 9 W - 初始化NewLife.CommonEntity.RoleMenu数据
10:03:16.185 14 W - 修改表AddColumn失败！Duplicate column name 'IP'[SQL:Alter Table Log Add IP NVARCHAR(50) COMMENT 'IP地址'][DB:Common/MySql]
10:03:16.185 9 W - 如果某一个菜单对应的RoleMenu（角色菜单对应关系）为空或者只有一个，则授权第一个角色访问所有菜单！
10:03:16.185 14 W - 修改表AddColumn失败！Duplicate column name 'OccurTime'[SQL:Alter Table Log Add OccurTime TIMESTAMP NOT NULL COMMENT '时间'][DB:Common/MySql]
10:03:16.185 14 W - 修改表AddColumn失败！Duplicate column name 'Remark'[SQL:Alter Table Log Add Remark NVARCHAR(500) COMMENT '详细信息'][DB:Common/MySql]
10:03:16.185 14 W - 初始化NewLife.CommonEntity.Log数据
10:03:16.201 9 W - 更新实体缓存（第1次）：NewLife.CommonEntity.RoleMenu 原因：第一次 RoleMenu<>.CheckNonePerssion(Int32 menuID)<-Role<,,>.InitData()
10:03:16.216 9 W - 完成更新缓存（第1次）：NewLife.CommonEntity.RoleMenu
10:03:16.232 9 W - 完成更新缓存（第1次）：NewLife.YWS.Entities.MyRole
10:03:16.263 9 W - 初始化Bioinfo.Entites.News数据
10:03:16.325 9 W - 初始化Bioinfo.Entites.Category数据
10:03:16.325 14 W - 更新实体缓存（第1次）：Bioinfo.Entites.Category 原因：第一次 Category.FindById(Int32 id)<-News.get_Category()
10:03:16.325 14 W - 完成更新缓存（第1次）：Bioinfo.Entites.Category
10:07:10.540 8 W - 更新实体缓存（第2次）：NewLife.CommonEntity.Menu 原因：60秒过期 Menu<>.GetCurrentMenu()<-.get_Current()
10:07:10.540 8 W - 完成更新缓存（第2次）：NewLife.CommonEntity.Menu
10:07:10.556 8 W - 更新实体缓存（第2次）：Bioinfo.Entites.Category 原因：60秒过期 EntityTree<,>.FindByKeyWithCache(EntityTree<,>.TKey key)<-.FindAllChildsNoParent(EntityTree<,>.TKey parentKey)
10:07:10.571 8 W - 完成更新缓存（第2次）：Bioinfo.Entites.Category
10:09:12.393 10 W - 更新实体缓存（第3次）：NewLife.CommonEntity.Menu 原因：60秒过期 Menu<>.GetCurrentMenu()<-.get_Current()
10:09:12.393 10 W - 完成更新缓存（第3次）：NewLife.CommonEntity.Menu
10:09:12.408 10 W - 更新实体缓存（第3次）：Bioinfo.Entites.Category 原因：60秒过期 EntityTree<,>.FindByKeyWithCache(EntityTree<,>.TKey key)<-.FindAllChildsNoParent(EntityTree<,>.TKey parentKey)
10:09:12.408 10 W - 完成更新缓存（第3次）：Bioinfo.Entites.Category
10:10:17.089 16 W - 更新实体缓存（第4次）：NewLife.CommonEntity.Menu 原因：60秒过期 Menu<>.GetCurrentMenu()<-.get_Current()
10:10:17.089 16 W - 完成更新缓存（第4次）：NewLife.CommonEntity.Menu
10:10:17.089 16 W - 更新实体缓存（第4次）：Bioinfo.Entites.Category 原因：60秒过期 EntityTree<,>.FindByKeyWithCache(EntityTree<,>.TKey key)<-.FindAllChildsNoParent(EntityTree<,>.TKey parentKey)
10:10:17.104 16 W - 完成更新缓存（第4次）：Bioinfo.Entites.Category
10:11:17.816 10 W - 更新实体缓存（第5次）：NewLife.CommonEntity.Menu 原因：60秒过期 Menu<>.GetCurrentMenu()<-.get_Current()
10:11:17.816 10 W - 完成更新缓存（第5次）：NewLife.CommonEntity.Menu
10:11:19.142 11 W - 更新实体缓存（第5次）：Bioinfo.Entites.Category 原因：60秒过期 EntityTree<,>.FindByKeyWithCache(EntityTree<,>.TKey key)<-.FindAllChildsNoParent(EntityTree<,>.TKey parentKey)
10:11:19.142 11 W - 完成更新缓存（第5次）：Bioinfo.Entites.Category
10:11:40.451 11 W - 初始化Bioinfo.Entites.Messages数据
10:11:46.271 13 W - 初始化Bioinfo.Entites.Setting数据
10:18:37.454 14 W - 实体缓存<Menu>总次数163，一级命中158（96.93%）
10:18:37.456 14 W - 更新实体缓存（第6次）：NewLife.CommonEntity.Menu 原因：60秒过期 Menu<>.GetCurrentMenu()<-.get_Current()
10:18:37.470 14 W - 完成更新缓存（第6次）：NewLife.CommonEntity.Menu
10:21:14.946 17 W - 更新实体缓存（第7次）：NewLife.CommonEntity.Menu 原因：60秒过期 Menu<>.GetCurrentMenu()<-.get_Current()
10:21:14.951 17 W - 完成更新缓存（第7次）：NewLife.CommonEntity.Menu
10:25:49.305 23 W - 更新实体缓存（第8次）：NewLife.CommonEntity.Menu 原因：60秒过期 Menu<>.GetCurrentMenu()<-.get_Current()
10:25:49.323 23 W - 完成更新缓存（第8次）：NewLife.CommonEntity.Menu
10:25:49.332 23 W - 实体缓存<Category>总次数52，一级命中46（88.46%），二级命中1（1.92%）
10:25:49.333 23 W - 更新实体缓存（第6次）：Bioinfo.Entites.Category 原因：60秒过期 Category.FindById(Int32 id)<-Setting.get_Category()
10:25:49.336 23 W - 完成更新缓存（第6次）：Bioinfo.Entites.Category
10:27:21.915 17 W - 更新实体缓存（第9次）：NewLife.CommonEntity.Menu 原因：60秒过期 Menu<>.GetCurrentMenu()<-.get_Current()
10:27:21.919 17 W - 完成更新缓存（第9次）：NewLife.CommonEntity.Menu
10:29:29.766 21 W - 实体缓存<Menu>总次数186，一级命中177（95.16%）
10:29:29.767 21 W - 更新实体缓存（第10次）：NewLife.CommonEntity.Menu 原因：60秒过期 Menu<>.GetCurrentMenu()<-.get_Current()
10:29:29.771 21 W - 完成更新缓存（第10次）：NewLife.CommonEntity.Menu
10:31:05.763 21 W - 更新实体缓存（第11次）：NewLife.CommonEntity.Menu 原因：60秒过期 Menu<>.GetCurrentMenu()<-.get_Current()
10:31:05.767 21 W - 完成更新缓存（第11次）：NewLife.CommonEntity.Menu
10:33:19.642 18 W - 更新实体缓存（第12次）：NewLife.CommonEntity.Menu 原因：60秒过期 Menu<>.GetCurrentMenu()<-.get_Current()
10:33:19.647 18 W - 完成更新缓存（第12次）：NewLife.CommonEntity.Menu
10:48:41.814 19 W - 实体缓存<Menu>总次数203，一级命中191（94.09%）
10:48:41.815 19 W - 更新实体缓存（第13次）：NewLife.CommonEntity.Menu 原因：60秒过期 Menu<>.GetCurrentMenu()<-.get_Current()
10:48:41.830 19 W - 完成更新缓存（第13次）：NewLife.CommonEntity.Menu
10:52:37.742 24 W - 更新实体缓存（第14次）：NewLife.CommonEntity.Menu 原因：60秒过期 Menu<>.GetCurrentMenu()<-.get_Current()
10:52:37.747 24 W - 完成更新缓存（第14次）：NewLife.CommonEntity.Menu
10:53:55.243 24 W - 更新实体缓存（第15次）：NewLife.CommonEntity.Menu 原因：60秒过期 Menu<>.GetCurrentMenu()<-.get_Current()
10:53:55.247 24 W - 完成更新缓存（第15次）：NewLife.CommonEntity.Menu
10:54:04.124 18 W - 实体缓存<Category>总次数53，一级命中46（86.79%），二级命中1（1.89%）
10:54:04.126 18 W - 更新实体缓存（第7次）：Bioinfo.Entites.Category 原因：60秒过期 Category.FindById(Int32 id)<-Setting.get_Category()
10:54:04.129 18 W - 完成更新缓存（第7次）：Bioinfo.Entites.Category
10:55:22.712 25 W - 更新实体缓存（第16次）：NewLife.CommonEntity.Menu 原因：60秒过期 Menu<>.GetCurrentMenu()<-.get_Current()
10:55:22.717 25 W - 完成更新缓存（第16次）：NewLife.CommonEntity.Menu
10:55:43.059 19 W - 更新实体缓存（第8次）：Bioinfo.Entites.Category 原因：60秒过期 Category.FindById(Int32 id)<-Setting.get_Category()
10:55:43.066 19 W - 完成更新缓存（第8次）：Bioinfo.Entites.Category

#Software: .
#ProcessID: 5132
#AppDomain: c5a66244-3-129933609889425661
#BaseDirectory: C:\DevelopMent\Bioinfo\BioinfoWebSite\
#Date: 2012-09-29
#Fields: Time ThreadID IsPoolThread ThreadName Message
10:56:32.934 15 W - NewLife.Core v3.8.2012.0803 Build 2012-09-25 12:03:50
10:56:32.938 15 W - 为NewLife.CommonEntity.IManageProvider配置注册YWSManageProvider，标识Identity=，优先级Priority=5！
10:56:33.940 15 W - NewLife.XCode v8.8.2012.0828 Build 2012-09-25 12:01:34
10:56:33.941 15 W - 一级缓存：关闭缓存
10:56:33.955 15 W - 更新实体缓存（第1次）：NewLife.YWS.Entities.Admin 原因：第一次 Administrator<>.FindByName(String name)<-.Login(String username,String password,Int32 hashTimes)
10:56:34.395 15 W - DropDefault(LastLogin)
10:56:34.433 15 W - 初始化NewLife.YWS.Entities.Admin数据
10:56:34.446 15 W - 开始检查连接[Common/MySql]的数据库架构……
10:56:34.517 15 W - [Common]的所有实体类（22个）：Sequence,GuidCategory,Administrator,Menu,Role,RoleMenu,Log,Area,User,Simple,SimpleTree,Setting,Statistics,UserProfile,Attachment,Category,Category,News,Messages,Setting,MyRole,Admin
10:56:34.517 15 W - [Common]需要检查架构的实体类（6个）：Category,News,Messages,Setting,MyRole,Admin
10:56:34.517 15 W - Common待检查表架构的实体个数：6
10:56:34.661 15 W - DropDefault(LastLogin)
10:56:34.691 15 W - 检查连接[Common/MySql]的数据库架构耗时00:00:00.2451307
10:56:34.714 15 W - 完成更新缓存（第1次）：NewLife.YWS.Entities.Admin
10:56:34.770 15 W - 清空实体缓存：NewLife.YWS.Entities.Admin 原因：修改数据后提交事务
10:56:34.795 15 W - 检查实体NewLife.CommonEntity.Log的数据表架构，模式：CheckTableWhenFirstUse
10:56:34.796 15 W - DropDefault(OccurTime)
10:56:34.796 15 W - AddDefault(OccurTime,)
10:56:34.796 15 W - 初始化NewLife.CommonEntity.Log数据
10:56:34.827 15 W - 更新实体缓存（第1次）：NewLife.CommonEntity.Menu 原因：第一次 Menu<>.GetCurrentMenu()<-.get_Current()
10:56:34.828 15 W - 检查实体NewLife.CommonEntity.Menu的数据表架构，模式：CheckTableWhenFirstUse
10:56:34.857 15 W - 初始化NewLife.CommonEntity.Menu数据
10:56:34.867 15 W - 完成更新缓存（第1次）：NewLife.CommonEntity.Menu
10:56:34.886 15 W - 更新实体缓存（第1次）：NewLife.YWS.Entities.MyRole 原因：第一次 Role<>.FindByID(Int32 id)<-
10:56:34.887 15 W - 初始化NewLife.YWS.Entities.MyRole数据
10:56:34.901 15 W - 检查实体NewLife.CommonEntity.RoleMenu的数据表架构，模式：CheckTableWhenFirstUse
10:56:34.904 15 W - 初始化NewLife.CommonEntity.RoleMenu数据
10:56:34.905 15 W - 如果某一个菜单对应的RoleMenu（角色菜单对应关系）为空或者只有一个，则授权第一个角色访问所有菜单！
10:56:34.928 15 W - 更新实体缓存（第1次）：NewLife.CommonEntity.RoleMenu 原因：第一次 RoleMenu<>.CheckNonePerssion(Int32 menuID)<-Role<,,>.InitData()
10:56:34.933 15 W - 完成更新缓存（第1次）：NewLife.CommonEntity.RoleMenu
10:56:34.948 15 W - 完成更新缓存（第1次）：NewLife.YWS.Entities.MyRole
10:56:34.982 15 W - 初始化Bioinfo.Entites.Category数据
10:56:36.605 25 W - 初始化Bioinfo.Entites.Setting数据
10:56:36.622 25 W - 更新实体缓存（第1次）：Bioinfo.Entites.Category 原因：第一次 Category.FindById(Int32 id)<-Setting.get_Category()
10:56:36.626 25 W - 完成更新缓存（第1次）：Bioinfo.Entites.Category
10:58:17.343 24 W - 更新实体缓存（第2次）：NewLife.CommonEntity.Menu 原因：60秒过期 Menu<>.GetCurrentMenu()<-.get_Current()
10:58:17.348 24 W - 完成更新缓存（第2次）：NewLife.CommonEntity.Menu
10:59:02.843 14 W - 初始化Bioinfo.Entites.Messages数据
10:59:03.527 24 W - 更新实体缓存（第2次）：Bioinfo.Entites.Category 原因：60秒过期 Category.FindById(Int32 id)<-Setting.get_Category()
10:59:03.530 24 W - 完成更新缓存（第2次）：Bioinfo.Entites.Category
10:59:35.253 25 W - 更新实体缓存（第3次）：NewLife.CommonEntity.Menu 原因：60秒过期 Menu<>.GetCurrentMenu()<-.get_Current()
10:59:35.257 25 W - 完成更新缓存（第3次）：NewLife.CommonEntity.Menu
11:00:06.148 18 W - 更新实体缓存（第3次）：Bioinfo.Entites.Category 原因：60秒过期 Category.FindById(Int32 id)<-Setting.get_Category()
11:00:06.152 18 W - 完成更新缓存（第3次）：Bioinfo.Entites.Category
11:00:39.645 18 W - 更新实体缓存（第4次）：NewLife.CommonEntity.Menu 原因：60秒过期 Menu<>.GetCurrentMenu()<-.get_Current()
11:00:39.650 18 W - 完成更新缓存（第4次）：NewLife.CommonEntity.Menu
11:01:15.365 18 W - 更新实体缓存（第4次）：Bioinfo.Entites.Category 原因：60秒过期 Category.FindById(Int32 id)<-Setting.get_Category()
11:01:15.368 18 W - 完成更新缓存（第4次）：Bioinfo.Entites.Category
11:02:03.376 25 W - 更新实体缓存（第5次）：NewLife.CommonEntity.Menu 原因：60秒过期 Menu<>.GetCurrentMenu()<-.get_Current()
11:02:03.381 25 W - 完成更新缓存（第5次）：NewLife.CommonEntity.Menu
11:02:41.700 25 W - 更新实体缓存（第5次）：Bioinfo.Entites.Category 原因：60秒过期 Category.FindById(Int32 id)<-Setting.get_Category()
11:02:41.704 25 W - 完成更新缓存（第5次）：Bioinfo.Entites.Category
11:03:11.253 24 W - 更新实体缓存（第6次）：NewLife.CommonEntity.Menu 原因：60秒过期 Menu<>.GetCurrentMenu()<-.get_Current()
11:03:11.257 24 W - 完成更新缓存（第6次）：NewLife.CommonEntity.Menu
11:04:10.316 24 W - 更新实体缓存（第6次）：Bioinfo.Entites.Category 原因：60秒过期 EntityTree<,>.FindByKeyWithCache(EntityTree<,>.TKey key)<-.FindAllChildsNoParent(EntityTree<,>.TKey parentKey)
11:04:10.320 24 W - 完成更新缓存（第6次）：Bioinfo.Entites.Category
11:04:16.757 18 W - 更新实体缓存（第7次）：NewLife.CommonEntity.Menu 原因：60秒过期 Menu<>.GetCurrentMenu()<-.get_Current()
11:04:16.762 18 W - 完成更新缓存（第7次）：NewLife.CommonEntity.Menu
11:04:16.768 18 W - 初始化Bioinfo.Entites.News数据
11:06:48.612 15 W - 实体缓存<Menu>总次数171，一级命中164（95.91%）
11:06:48.614 15 W - 更新实体缓存（第8次）：NewLife.CommonEntity.Menu 原因：60秒过期 Menu<>.GetCurrentMenu()<-.get_Current()
11:06:48.618 15 W - 完成更新缓存（第8次）：NewLife.CommonEntity.Menu
11:06:48.626 15 W - 实体缓存<Category>总次数41，一级命中35（85.37%）
11:06:48.627 15 W - 更新实体缓存（第7次）：Bioinfo.Entites.Category 原因：60秒过期 EntityTree<,>.FindByKeyWithCache(EntityTree<,>.TKey key)<-.FindAllChildsNoParent(EntityTree<,>.TKey parentKey)
11:06:48.630 15 W - 完成更新缓存（第7次）：Bioinfo.Entites.Category
