#Software: .
#ProcessID: 2960
#AppDomain: c5a66244-1-129931786928020353
#BaseDirectory: C:\DevelopMent\Bioinfo\BioinfoWebSite\
#Date: 2012-09-27
#Fields: Time ThreadID IsPoolThread ThreadName Message
08:18:13.519 4 W - NewLife.Core v3.8.2012.0803 Build 2012-09-25 12:03:50
08:18:13.519 4 W - 为NewLife.CommonEntity.IManageProvider配置注册YWSManageProvider，标识Identity=，优先级Priority=5！
08:18:13.940 4 W - NewLife.XCode v8.8.2012.0828 Build 2012-09-25 12:01:34
08:18:13.940 4 W - 开始检查连接[Common/MySql]的数据库架构……
08:18:14.034 4 W - [Common]的所有实体类（22个）：Sequence,GuidCategory,Administrator,Menu,Role,RoleMenu,Log,Area,User,Simple,SimpleTree,Setting,Statistics,UserProfile,Attachment,Category,Category,News,Messages,Setting,MyRole,Admin
08:18:14.034 4 W - [Common]需要检查架构的实体类（6个）：Category,News,Messages,Setting,MyRole,Admin
08:18:14.034 4 W - Common待检查表架构的实体个数：6
08:18:14.502 4 W - DropDefault(LastLogin)
08:18:14.533 4 W - 检查连接[Common/MySql]的数据库架构耗时00:00:00.5956648
08:18:14.564 4 W - 初始化Bioinfo.Entites.Setting数据
08:18:14.564 4 W - 一级缓存：关闭缓存

#Software: .
#ProcessID: 5624
#AppDomain: c5a66244-1-129931787109604672
#BaseDirectory: C:\DevelopMent\Bioinfo\BioinfoWebSite\
#Date: 2012-09-27
#Fields: Time ThreadID IsPoolThread ThreadName Message
08:18:31.646 4 W - NewLife.Core v3.8.2012.0803 Build 2012-09-25 12:03:50
08:18:31.662 4 W - 为NewLife.CommonEntity.IManageProvider配置注册YWSManageProvider，标识Identity=，优先级Priority=5！
08:18:32.068 4 W - NewLife.XCode v8.8.2012.0828 Build 2012-09-25 12:01:34
08:18:32.068 4 W - 开始检查连接[Common/MySql]的数据库架构……
08:18:32.161 4 W - [Common]的所有实体类（22个）：Sequence,GuidCategory,Administrator,Menu,Role,RoleMenu,Log,Area,User,Simple,SimpleTree,Setting,Statistics,UserProfile,Attachment,Category,Category,News,Messages,Setting,MyRole,Admin
08:18:32.161 4 W - [Common]需要检查架构的实体类（6个）：Category,News,Messages,Setting,MyRole,Admin
08:18:32.161 4 W - Common待检查表架构的实体个数：6
08:18:32.614 4 W - DropDefault(LastLogin)
08:18:32.660 4 W - 检查连接[Common/MySql]的数据库架构耗时00:00:00.5897146
08:18:32.676 4 W - 初始化Bioinfo.Entites.Setting数据
08:18:32.692 4 W - 一级缓存：关闭缓存
08:18:32.754 4 W - 更新实体缓存（第1次）：Bioinfo.Entites.Setting 原因：60秒过期 Setting.FindById(Int32 id)<-EntityHelper.GetName()
08:18:32.785 4 W - 完成更新缓存（第1次）：Bioinfo.Entites.Setting
08:18:44.397 11 Y - 初始化NewLife.YWS.Entities.Admin数据
08:18:44.416 4 W - 检查实体NewLife.CommonEntity.Setting的数据表架构，模式：CheckTableWhenFirstUse
08:18:44.486 4 W - 初始化NewLife.CommonEntity.Setting数据
08:18:46.834 8 W - 更新实体缓存（第1次）：NewLife.YWS.Entities.Admin 原因：第一次 Administrator<>.FindByName(String name)<-.Login(String username,String password,Int32 hashTimes)
08:18:46.838 8 W - 完成更新缓存（第1次）：NewLife.YWS.Entities.Admin
08:18:46.870 8 W - 清空实体缓存：NewLife.YWS.Entities.Admin 原因：修改数据后提交事务
08:18:46.891 8 W - 检查实体NewLife.CommonEntity.Log的数据表架构，模式：CheckTableWhenFirstUse
08:18:46.970 8 W - DropDefault(OccurTime)
08:18:46.971 8 W - AddDefault(OccurTime,)
08:18:46.971 8 W - 初始化NewLife.CommonEntity.Log数据
08:18:47.024 11 W - 更新实体缓存（第1次）：NewLife.YWS.Entities.MyRole 原因：第一次 Role<>.FindByID(Int32 id)<-
08:18:47.024 11 W - 初始化NewLife.YWS.Entities.MyRole数据
08:18:47.037 11 W - 检查实体NewLife.CommonEntity.RoleMenu的数据表架构，模式：CheckTableWhenFirstUse
08:18:47.103 11 W - 初始化NewLife.CommonEntity.RoleMenu数据
08:18:47.104 11 W - 如果某一个菜单对应的RoleMenu（角色菜单对应关系）为空或者只有一个，则授权第一个角色访问所有菜单！
08:18:47.116 11 W - 更新实体缓存（第1次）：NewLife.CommonEntity.Menu 原因：第一次 EntityTree<,>.FindAllByParent(EntityTree<,>.TKey parentKey)<-.FindChilds()
08:18:47.116 11 W - 检查实体NewLife.CommonEntity.Menu的数据表架构，模式：CheckTableWhenFirstUse
08:18:47.142 11 W - 初始化NewLife.CommonEntity.Menu数据
08:18:47.151 11 W - 完成更新缓存（第1次）：NewLife.CommonEntity.Menu
08:18:47.164 11 W - 更新实体缓存（第1次）：NewLife.CommonEntity.RoleMenu 原因：第一次 RoleMenu<>.CheckNonePerssion(Int32 menuID)<-Role<,,>.InitData()
08:18:47.169 11 W - 完成更新缓存（第1次）：NewLife.CommonEntity.RoleMenu
08:18:47.187 11 W - 完成更新缓存（第1次）：NewLife.YWS.Entities.MyRole
08:18:50.211 8 W - 初始化Bioinfo.Entites.News数据
08:18:50.250 8 W - 初始化Bioinfo.Entites.Category数据
08:18:50.259 8 W - 更新实体缓存（第1次）：Bioinfo.Entites.Category 原因：第一次 Category.FindById(Int32 id)<-News.get_Category()
08:18:50.264 8 W - 完成更新缓存（第1次）：Bioinfo.Entites.Category
08:19:13.126 2 N - 清空单对象缓存：NewLife.CommonEntity.Setting
08:19:13.141 2 N - 错误的连接字符串：Server=192.168.1.47;Database=Bioinfodb2;Uid=root;Pwd=yrshabc123
08:19:13.141 2 N - XCode.Exceptions.XDbSessionException: Unable to connect to any of the specified MySQL hosts.[DB:Common/MySql] ---> MySql.Data.MySqlClient.MySqlException: Unable to connect to any of the specified MySQL hosts. ---> System.ApplicationException: 应用程序中的错误。
   在 System.Threading.ThreadPool.RegisterWaitForSingleObjectNative(WaitHandle waitHandle, Object state, UInt32 timeOutInterval, Boolean executeOnlyOnce, RegisteredWaitHandle registeredWaitHandle, StackCrawlMark& stackMark, Boolean compressStack)
   在 System.Threading.ThreadPool.RegisterWaitForSingleObject(WaitHandle waitObject, WaitOrTimerCallback callBack, Object state, UInt32 millisecondsTimeOutInterval, Boolean executeOnlyOnce, StackCrawlMark& stackMark, Boolean compressStack)
   在 System.Threading.ThreadPool.UnsafeRegisterWaitForSingleObject(WaitHandle waitObject, WaitOrTimerCallback callBack, Object state, Int32 millisecondsTimeOutInterval, Boolean executeOnlyOnce)
   在 System.Net.Sockets.Socket.SetAsyncEventSelect(AsyncEventBits blockEventBits)
   在 System.Net.Sockets.Socket.DoBeginConnect(EndPoint endPointSnapshot, SocketAddress socketAddress, LazyAsyncResult asyncResult)
   在 System.Net.Sockets.Socket.BeginConnect(EndPoint remoteEP, AsyncCallback callback, Object state)
   在 MySql.Data.Common.StreamCreator.CreateSocketStream(IPAddress ip, Boolean unix)
   在 MySql.Data.Common.StreamCreator.GetStream(UInt32 timeout)
   在 MySql.Data.MySqlClient.NativeDriver.Open()
   --- 内部异常堆栈跟踪的结尾 ---
   在 MySql.Data.MySqlClient.NativeDriver.Open()
   在 MySql.Data.MySqlClient.Driver.Open()
   在 MySql.Data.MySqlClient.Driver.Create(MySqlConnectionStringBuilder settings)
   在 MySql.Data.MySqlClient.MySqlPool.GetPooledConnection()
   在 MySql.Data.MySqlClient.MySqlPool.TryToGetDriver()
   在 MySql.Data.MySqlClient.MySqlPool.GetConnection()
   在 MySql.Data.MySqlClient.MySqlConnection.Open()
   在 XCode.DataAccessLayer.DbSession.Open()
   在 XCode.DataAccessLayer.DbSession.BeginTransaction()
   --- 内部异常堆栈跟踪的结尾 ---
   在 XCode.DataAccessLayer.DbSession.BeginTransaction()
   在 XCode.DataAccessLayer.DAL.BeginTransaction()
   在 XCode.Entity`1.Meta.BeginTrans()
   在 XCode.Entity`1.DoAction(Func`1 func, Nullable`1 isnew)
   在 XCode.Entity`1.Update()
   在 XCode.Cache.SingleEntityCache`2.<>c__DisplayClass1c.<Clear>b__1b()
   在 XCode.Cache.CacheBase`1.InvokeFill(Func callback)

#Software: .
#ProcessID: 4448
#AppDomain: c5a66244-1-129931809867345041
#BaseDirectory: C:\DevelopMent\Bioinfo\BioinfoWebSite\
#Date: 2012-09-27
#Fields: Time ThreadID IsPoolThread ThreadName Message
08:56:27.364 4 W - NewLife.Core v3.8.2012.0803 Build 2012-09-25 12:03:50
08:56:27.384 4 W - 为NewLife.CommonEntity.IManageProvider配置注册YWSManageProvider，标识Identity=，优先级Priority=5！
08:56:28.942 8 W - NewLife.XCode v8.8.2012.0828 Build 2012-09-25 12:01:34
08:56:28.943 8 W - 检查实体NewLife.CommonEntity.Setting的数据表架构，模式：CheckTableWhenFirstUse
08:56:29.073 8 W - 初始化NewLife.CommonEntity.Setting数据
08:56:29.080 8 W - 开始检查连接[Common/MySql]的数据库架构……
08:56:29.159 8 W - [Common]的所有实体类（18个）：Sequence,GuidCategory,Administrator,Menu,Role,RoleMenu,Log,Area,User,Simple,SimpleTree,Setting,Statistics,UserProfile,Attachment,Category,MyRole,Admin
08:56:29.159 8 W - [Common]需要检查架构的实体类（2个）：MyRole,Admin
08:56:29.159 8 W - Common待检查表架构的实体个数：2
08:56:29.202 4 Y - DropDefault(LastLogin)
08:56:29.318 8 W - DropDefault(LastLogin)
08:56:29.389 8 W - 检查连接[Common/MySql]的数据库架构耗时00:00:00.3081750
08:56:29.389 4 Y - 初始化NewLife.YWS.Entities.Admin数据
08:56:29.391 8 W - 一级缓存：关闭缓存
08:56:39.344 8 W - 更新实体缓存（第1次）：NewLife.YWS.Entities.Admin 原因：第一次 Administrator<>.FindByName(String name)<-.Login(String username,String password,Int32 hashTimes)
08:56:39.352 8 W - 完成更新缓存（第1次）：NewLife.YWS.Entities.Admin
08:56:39.391 8 W - 清空实体缓存：NewLife.YWS.Entities.Admin 原因：修改数据后提交事务
08:56:39.414 8 W - 检查实体NewLife.CommonEntity.Log的数据表架构，模式：CheckTableWhenFirstUse
08:56:39.480 8 W - DropDefault(OccurTime)
08:56:39.480 8 W - AddDefault(OccurTime,)
08:56:39.480 8 W - 初始化NewLife.CommonEntity.Log数据
08:56:39.532 4 W - 更新实体缓存（第1次）：NewLife.YWS.Entities.MyRole 原因：第一次 Role<>.FindByID(Int32 id)<-
08:56:39.532 4 W - 初始化NewLife.YWS.Entities.MyRole数据
08:56:39.545 4 W - 检查实体NewLife.CommonEntity.RoleMenu的数据表架构，模式：CheckTableWhenFirstUse
08:56:39.610 4 W - 初始化NewLife.CommonEntity.RoleMenu数据
08:56:39.611 4 W - 如果某一个菜单对应的RoleMenu（角色菜单对应关系）为空或者只有一个，则授权第一个角色访问所有菜单！
08:56:39.623 4 W - 更新实体缓存（第1次）：NewLife.CommonEntity.Menu 原因：第一次 EntityTree<,>.FindAllByParent(EntityTree<,>.TKey parentKey)<-.FindChilds()
08:56:39.624 4 W - 检查实体NewLife.CommonEntity.Menu的数据表架构，模式：CheckTableWhenFirstUse
08:56:39.662 4 W - 初始化NewLife.CommonEntity.Menu数据
08:56:39.672 4 W - 完成更新缓存（第1次）：NewLife.CommonEntity.Menu
08:56:39.684 4 W - 更新实体缓存（第1次）：NewLife.CommonEntity.RoleMenu 原因：第一次 RoleMenu<>.CheckNonePerssion(Int32 menuID)<-Role<,,>.InitData()
08:56:39.689 4 W - 完成更新缓存（第1次）：NewLife.CommonEntity.RoleMenu
08:56:39.702 4 W - 完成更新缓存（第1次）：NewLife.YWS.Entities.MyRole
08:56:42.493 10 W - 初始化Bioinfo.Entites.Setting数据
08:56:42.525 10 W - 初始化Bioinfo.Entites.Category数据
08:56:42.529 10 W - 更新实体缓存（第1次）：Bioinfo.Entites.Category 原因：第一次 Category.FindById(Int32 id)<-Setting.get_Category()
08:56:42.534 10 W - 完成更新缓存（第1次）：Bioinfo.Entites.Category
08:56:44.325 8 W - 初始化Bioinfo.Entites.News数据
08:58:17.697 10 W - 更新实体缓存（第2次）：NewLife.CommonEntity.Menu 原因：60秒过期 Menu<>.GetCurrentMenu()<-.get_Current()
08:58:17.701 10 W - 完成更新缓存（第2次）：NewLife.CommonEntity.Menu
09:06:44.504 2 N - 清空单对象缓存：NewLife.CommonEntity.Setting

#Software: .
#ProcessID: 4000
#AppDomain: c5a66244-1-129931858620167673
#BaseDirectory: C:\DevelopMent\Bioinfo\BioinfoWebSite\
#Date: 2012-09-27
#Fields: Time ThreadID IsPoolThread ThreadName Message
10:17:42.718 4 W - NewLife.Core v3.8.2012.0803 Build 2012-09-25 12:03:50
10:17:42.734 4 W - 为NewLife.CommonEntity.IManageProvider配置注册YWSManageProvider，标识Identity=，优先级Priority=5！
10:17:44.341 8 W - NewLife.XCode v8.8.2012.0828 Build 2012-09-25 12:01:34
10:17:44.341 8 W - 检查实体NewLife.CommonEntity.Setting的数据表架构，模式：CheckTableWhenFirstUse
10:17:44.465 8 W - 初始化NewLife.CommonEntity.Setting数据
10:17:44.481 8 W - 开始检查连接[Common/MySql]的数据库架构……
10:17:44.559 8 W - [Common]的所有实体类（18个）：Sequence,GuidCategory,Administrator,Menu,Role,RoleMenu,Log,Area,User,Simple,SimpleTree,Setting,Statistics,UserProfile,Attachment,Category,MyRole,Admin
10:17:44.559 8 W - [Common]需要检查架构的实体类（2个）：MyRole,Admin
10:17:44.559 8 W - Common待检查表架构的实体个数：2
10:17:44.606 4 Y - DropDefault(LastLogin)
10:17:44.746 8 W - DropDefault(LastLogin)
10:17:44.824 8 W - 检查连接[Common/MySql]的数据库架构耗时00:00:00.3413450
10:17:44.824 4 Y - 初始化NewLife.YWS.Entities.Admin数据
10:17:44.824 8 W - 一级缓存：关闭缓存
10:17:46.369 8 W - 更新实体缓存（第1次）：NewLife.YWS.Entities.Admin 原因：第一次 Administrator<>.FindByName(String name)<-.Login(String username,String password,Int32 hashTimes)
10:17:46.369 8 W - 完成更新缓存（第1次）：NewLife.YWS.Entities.Admin
10:17:46.400 8 W - 清空实体缓存：NewLife.YWS.Entities.Admin 原因：修改数据后提交事务
10:17:46.435 8 W - 检查实体NewLife.CommonEntity.Log的数据表架构，模式：CheckTableWhenFirstUse
10:17:46.435 8 W - DropDefault(OccurTime)
10:17:46.435 8 W - AddDefault(OccurTime,)
10:17:46.435 8 W - 初始化NewLife.CommonEntity.Log数据
10:17:46.485 8 W - 更新实体缓存（第1次）：NewLife.YWS.Entities.MyRole 原因：第一次 Role<>.FindByID(Int32 id)<-
10:17:46.485 8 W - 初始化NewLife.YWS.Entities.MyRole数据
10:17:46.495 8 W - 检查实体NewLife.CommonEntity.RoleMenu的数据表架构，模式：CheckTableWhenFirstUse
10:17:46.495 8 W - 初始化NewLife.CommonEntity.RoleMenu数据
10:17:46.495 8 W - 如果某一个菜单对应的RoleMenu（角色菜单对应关系）为空或者只有一个，则授权第一个角色访问所有菜单！
10:17:46.505 8 W - 更新实体缓存（第1次）：NewLife.CommonEntity.Menu 原因：第一次 EntityTree<,>.FindAllByParent(EntityTree<,>.TKey parentKey)<-.FindChilds()
10:17:46.505 8 W - 检查实体NewLife.CommonEntity.Menu的数据表架构，模式：CheckTableWhenFirstUse
10:17:46.552 8 W - 初始化NewLife.CommonEntity.Menu数据
10:17:46.552 8 W - 完成更新缓存（第1次）：NewLife.CommonEntity.Menu
10:17:46.568 8 W - 更新实体缓存（第1次）：NewLife.CommonEntity.RoleMenu 原因：第一次 RoleMenu<>.CheckNonePerssion(Int32 menuID)<-Role<,,>.InitData()
10:17:46.568 8 W - 完成更新缓存（第1次）：NewLife.CommonEntity.RoleMenu
10:17:46.583 8 W - 完成更新缓存（第1次）：NewLife.YWS.Entities.MyRole
10:17:55.164 8 W - 初始化Bioinfo.Entites.News数据
10:17:55.195 8 W - 初始化Bioinfo.Entites.Category数据
10:17:55.195 8 W - 更新实体缓存（第1次）：Bioinfo.Entites.Category 原因：第一次 Category.FindById(Int32 id)<-News.get_Category()
10:17:55.211 8 W - 完成更新缓存（第1次）：Bioinfo.Entites.Category
10:18:29.047 2 N - 清空单对象缓存：NewLife.CommonEntity.Setting
10:18:29.047 2 N - 错误的连接字符串：Server=192.168.1.47;Database=Bioinfodb2;Uid=root;Pwd=yrshabc123
10:18:29.047 2 N - XCode.Exceptions.XDbSessionException: Unable to connect to any of the specified MySQL hosts.[DB:Common/MySql] ---> MySql.Data.MySqlClient.MySqlException: Unable to connect to any of the specified MySQL hosts. ---> System.ApplicationException: 应用程序中的错误。
   在 System.Threading.ThreadPool.RegisterWaitForSingleObjectNative(WaitHandle waitHandle, Object state, UInt32 timeOutInterval, Boolean executeOnlyOnce, RegisteredWaitHandle registeredWaitHandle, StackCrawlMark& stackMark, Boolean compressStack)
   在 System.Threading.ThreadPool.RegisterWaitForSingleObject(WaitHandle waitObject, WaitOrTimerCallback callBack, Object state, UInt32 millisecondsTimeOutInterval, Boolean executeOnlyOnce, StackCrawlMark& stackMark, Boolean compressStack)
   在 System.Threading.ThreadPool.UnsafeRegisterWaitForSingleObject(WaitHandle waitObject, WaitOrTimerCallback callBack, Object state, Int32 millisecondsTimeOutInterval, Boolean executeOnlyOnce)
   在 System.Net.Sockets.Socket.SetAsyncEventSelect(AsyncEventBits blockEventBits)
   在 System.Net.Sockets.Socket.DoBeginConnect(EndPoint endPointSnapshot, SocketAddress socketAddress, LazyAsyncResult asyncResult)
   在 System.Net.Sockets.Socket.BeginConnect(EndPoint remoteEP, AsyncCallback callback, Object state)
   在 MySql.Data.Common.StreamCreator.CreateSocketStream(IPAddress ip, Boolean unix)
   在 MySql.Data.Common.StreamCreator.GetStream(UInt32 timeout)
   在 MySql.Data.MySqlClient.NativeDriver.Open()
   --- 内部异常堆栈跟踪的结尾 ---
   在 MySql.Data.MySqlClient.NativeDriver.Open()
   在 MySql.Data.MySqlClient.Driver.Open()
   在 MySql.Data.MySqlClient.Driver.Create(MySqlConnectionStringBuilder settings)
   在 MySql.Data.MySqlClient.MySqlPool.GetPooledConnection()
   在 MySql.Data.MySqlClient.MySqlPool.TryToGetDriver()
   在 MySql.Data.MySqlClient.MySqlPool.GetConnection()
   在 MySql.Data.MySqlClient.MySqlConnection.Open()
   在 XCode.DataAccessLayer.DbSession.Open()
   在 XCode.DataAccessLayer.DbSession.BeginTransaction()
   --- 内部异常堆栈跟踪的结尾 ---
   在 XCode.DataAccessLayer.DbSession.BeginTransaction()
   在 XCode.DataAccessLayer.DAL.BeginTransaction()
   在 XCode.Entity`1.Meta.BeginTrans()
   在 XCode.Entity`1.DoAction(Func`1 func, Nullable`1 isnew)
   在 XCode.Entity`1.Update()
   在 XCode.Cache.SingleEntityCache`2.<>c__DisplayClass1c.<Clear>b__1b()
   在 XCode.Cache.CacheBase`1.InvokeFill(Func callback)

#Software: .
#ProcessID: 3208
#AppDomain: c5a66244-1-129931863990127997
#BaseDirectory: C:\DevelopMent\Bioinfo\BioinfoWebSite\
#Date: 2012-09-27
#Fields: Time ThreadID IsPoolThread ThreadName Message
10:26:39.637 4 W - NewLife.Core v3.8.2012.0803 Build 2012-09-25 12:03:50
10:26:39.656 4 W - 为NewLife.CommonEntity.IManageProvider配置注册YWSManageProvider，标识Identity=，优先级Priority=5！
10:26:41.269 4 W - NewLife.XCode v8.8.2012.0828 Build 2012-09-25 12:01:34
10:26:41.270 4 W - 检查实体NewLife.CommonEntity.Setting的数据表架构，模式：CheckTableWhenFirstUse
10:26:41.421 4 W - 初始化NewLife.CommonEntity.Setting数据
10:26:41.428 4 W - 开始检查连接[Common/MySql]的数据库架构……
10:26:41.510 4 W - [Common]的所有实体类（18个）：Sequence,GuidCategory,Administrator,Menu,Role,RoleMenu,Log,Area,User,Simple,SimpleTree,Setting,Statistics,UserProfile,Attachment,Category,MyRole,Admin
10:26:41.510 4 W - [Common]需要检查架构的实体类（2个）：MyRole,Admin
10:26:41.510 4 W - Common待检查表架构的实体个数：2
10:26:41.646 4 W - DropDefault(LastLogin)
10:26:41.684 4 W - 检查连接[Common/MySql]的数据库架构耗时00:00:00.2561393
10:26:41.686 4 W - 一级缓存：关闭缓存
10:26:41.688 10 Y - 初始化NewLife.YWS.Entities.Admin数据
10:26:43.287 10 W - 更新实体缓存（第1次）：NewLife.YWS.Entities.Admin 原因：第一次 Administrator<>.FindByName(String name)<-.Login(String username,String password,Int32 hashTimes)
10:26:43.293 10 W - 完成更新缓存（第1次）：NewLife.YWS.Entities.Admin
10:26:43.312 10 W - 清空实体缓存：NewLife.YWS.Entities.Admin 原因：修改数据后提交事务
10:26:43.336 10 W - 检查实体NewLife.CommonEntity.Log的数据表架构，模式：CheckTableWhenFirstUse
10:26:43.402 10 W - DropDefault(OccurTime)
10:26:43.402 10 W - AddDefault(OccurTime,)
10:26:43.402 10 W - 初始化NewLife.CommonEntity.Log数据
10:26:43.452 10 W - 更新实体缓存（第1次）：NewLife.YWS.Entities.MyRole 原因：第一次 Role<>.FindByID(Int32 id)<-
10:26:43.452 10 W - 初始化NewLife.YWS.Entities.MyRole数据
10:26:43.465 10 W - 检查实体NewLife.CommonEntity.RoleMenu的数据表架构，模式：CheckTableWhenFirstUse
10:26:43.468 10 W - 初始化NewLife.CommonEntity.RoleMenu数据
10:26:43.469 10 W - 如果某一个菜单对应的RoleMenu（角色菜单对应关系）为空或者只有一个，则授权第一个角色访问所有菜单！
10:26:43.482 10 W - 更新实体缓存（第1次）：NewLife.CommonEntity.Menu 原因：第一次 EntityTree<,>.FindAllByParent(EntityTree<,>.TKey parentKey)<-.FindChilds()
10:26:43.483 10 W - 检查实体NewLife.CommonEntity.Menu的数据表架构，模式：CheckTableWhenFirstUse
10:26:43.522 10 W - 初始化NewLife.CommonEntity.Menu数据
10:26:43.531 10 W - 完成更新缓存（第1次）：NewLife.CommonEntity.Menu
10:26:43.543 10 W - 更新实体缓存（第1次）：NewLife.CommonEntity.RoleMenu 原因：第一次 RoleMenu<>.CheckNonePerssion(Int32 menuID)<-Role<,,>.InitData()
10:26:43.548 10 W - 完成更新缓存（第1次）：NewLife.CommonEntity.RoleMenu
10:26:43.561 10 W - 完成更新缓存（第1次）：NewLife.YWS.Entities.MyRole
10:26:47.419 11 W - 初始化Bioinfo.Entites.News数据
10:26:47.451 11 W - 初始化Bioinfo.Entites.Category数据
10:26:47.455 11 W - 更新实体缓存（第1次）：Bioinfo.Entites.Category 原因：第一次 Category.FindById(Int32 id)<-News.get_Category()
10:26:47.460 11 W - 完成更新缓存（第1次）：Bioinfo.Entites.Category
10:28:28.684 11 W - 更新实体缓存（第2次）：NewLife.CommonEntity.Menu 原因：60秒过期 Menu<>.GetCurrentMenu()<-.get_Current()
10:28:28.688 11 W - 完成更新缓存（第2次）：NewLife.CommonEntity.Menu
10:29:02.653 2 N - 清空单对象缓存：NewLife.CommonEntity.Setting

#Software: .
#ProcessID: 4704
#AppDomain: c5a66244-1-129931865470762685
#BaseDirectory: C:\DevelopMent\Bioinfo\BioinfoWebSite\
#Date: 2012-09-27
#Fields: Time ThreadID IsPoolThread ThreadName Message
10:29:07.758 4 W - NewLife.Core v3.8.2012.0803 Build 2012-09-25 12:03:50
10:29:07.762 4 W - 为NewLife.CommonEntity.IManageProvider配置注册YWSManageProvider，标识Identity=，优先级Priority=5！
10:29:09.125 9 W - NewLife.XCode v8.8.2012.0828 Build 2012-09-25 12:01:34
10:29:09.127 9 W - 一级缓存：关闭缓存
10:29:09.151 4 W - 更新实体缓存（第1次）：NewLife.CommonEntity.Menu 原因：第一次 Entity<>.FindWithCache(String name,Object value)<-Entity<>.EntityOperate.FindWithCache(String name,Object value)
10:29:09.151 9 W - 更新实体缓存（第1次）：NewLife.YWS.Entities.Admin 原因：第一次 Administrator<>.FindByName(String name)<-.Login(String username,String password,Int32 hashTimes)
10:29:09.340 4 W - 检查实体NewLife.CommonEntity.Menu的数据表架构，模式：CheckTableWhenFirstUse
10:29:09.552 4 W - 初始化NewLife.CommonEntity.Menu数据
10:29:09.623 4 W - 开始检查连接[Common/MySql]的数据库架构……
10:29:09.691 9 W - DropDefault(LastLogin)
10:29:09.706 4 W - [Common]的所有实体类（18个）：Sequence,GuidCategory,Administrator,Menu,Role,RoleMenu,Log,Area,User,Simple,SimpleTree,Setting,Statistics,UserProfile,Attachment,Category,MyRole,Admin
10:29:09.706 4 W - [Common]需要检查架构的实体类（2个）：MyRole,Admin
10:29:09.707 4 W - Common待检查表架构的实体个数：2
10:29:09.732 9 W - 初始化NewLife.YWS.Entities.Admin数据
10:29:09.804 9 W - 完成更新缓存（第1次）：NewLife.YWS.Entities.Admin
10:29:09.856 4 W - DropDefault(LastLogin)
10:29:09.890 9 W - 清空实体缓存：NewLife.YWS.Entities.Admin 原因：修改数据后提交事务
10:29:09.900 4 W - 检查连接[Common/MySql]的数据库架构耗时00:00:00.2768049
10:29:09.906 4 W - 完成更新缓存（第1次）：NewLife.CommonEntity.Menu
10:29:09.915 4 W - 更新实体缓存（第2次）：NewLife.YWS.Entities.Admin 原因：60秒过期 Administrator<>.FindByName(String name)<-.Login(String username,String password,Int32 hashTimes)
10:29:09.923 4 W - 完成更新缓存（第2次）：NewLife.YWS.Entities.Admin
10:29:09.923 9 W - 检查实体NewLife.CommonEntity.Log的数据表架构，模式：CheckTableWhenFirstUse
10:29:09.924 9 W - DropDefault(OccurTime)
10:29:09.925 9 W - AddDefault(OccurTime,)
10:29:09.925 9 W - 初始化NewLife.CommonEntity.Log数据
10:29:09.948 4 W - 清空实体缓存：NewLife.YWS.Entities.Admin 原因：修改数据后提交事务
10:29:09.996 4 W - 更新实体缓存（第1次）：NewLife.YWS.Entities.MyRole 原因：第一次 Role<>.FindByID(Int32 id)<-
10:29:09.996 4 W - 初始化NewLife.YWS.Entities.MyRole数据
10:29:10.010 4 W - 检查实体NewLife.CommonEntity.RoleMenu的数据表架构，模式：CheckTableWhenFirstUse
10:29:10.015 4 W - 初始化NewLife.CommonEntity.RoleMenu数据
10:29:10.015 4 W - 如果某一个菜单对应的RoleMenu（角色菜单对应关系）为空或者只有一个，则授权第一个角色访问所有菜单！
10:29:10.044 4 W - 更新实体缓存（第1次）：NewLife.CommonEntity.RoleMenu 原因：第一次 RoleMenu<>.CheckNonePerssion(Int32 menuID)<-Role<,,>.InitData()
10:29:10.049 4 W - 完成更新缓存（第1次）：NewLife.CommonEntity.RoleMenu
10:29:10.065 4 W - 完成更新缓存（第1次）：NewLife.YWS.Entities.MyRole
10:29:13.435 9 W - 初始化Bioinfo.Entites.News数据
10:29:13.496 9 W - 初始化Bioinfo.Entites.Category数据
10:29:13.502 9 W - 更新实体缓存（第1次）：Bioinfo.Entites.Category 原因：第一次 Category.FindById(Int32 id)<-News.get_Category()
10:29:13.507 9 W - 完成更新缓存（第1次）：Bioinfo.Entites.Category

#Software: .
#ProcessID: 4652
#AppDomain: c5a66244-1-129931866823510058
#BaseDirectory: C:\DevelopMent\Bioinfo\BioinfoWebSite\
#Date: 2012-09-27
#Fields: Time ThreadID IsPoolThread ThreadName Message
10:31:23.022 4 W - NewLife.Core v3.8.2012.0803 Build 2012-09-25 12:03:50
10:31:23.046 4 W - 为NewLife.CommonEntity.IManageProvider配置注册YWSManageProvider，标识Identity=，优先级Priority=5！
10:31:24.440 8 W - NewLife.XCode v8.8.2012.0828 Build 2012-09-25 12:01:34
10:31:24.442 8 W - 一级缓存：关闭缓存
10:31:24.461 8 W - 更新实体缓存（第1次）：NewLife.YWS.Entities.Admin 原因：第一次 Administrator<>.FindByName(String name)<-.Login(String username,String password,Int32 hashTimes)
10:31:24.461 4 W - 更新实体缓存（第1次）：NewLife.CommonEntity.Menu 原因：第一次 Entity<>.FindWithCache(String name,Object value)<-Entity<>.EntityOperate.FindWithCache(String name,Object value)
10:31:24.662 4 W - 检查实体NewLife.CommonEntity.Menu的数据表架构，模式：CheckTableWhenFirstUse
10:31:24.930 4 W - 初始化NewLife.CommonEntity.Menu数据
10:31:25.003 8 W - DropDefault(LastLogin)
10:31:25.011 4 W - 开始检查连接[Common/MySql]的数据库架构……
10:31:25.043 8 W - 初始化NewLife.YWS.Entities.Admin数据
10:31:25.076 8 W - 完成更新缓存（第1次）：NewLife.YWS.Entities.Admin
10:31:25.124 4 W - [Common]的所有实体类（18个）：Sequence,GuidCategory,Administrator,Menu,Role,RoleMenu,Log,Area,User,Simple,SimpleTree,Setting,Statistics,UserProfile,Attachment,Category,MyRole,Admin
10:31:25.125 4 W - [Common]需要检查架构的实体类（2个）：MyRole,Admin
10:31:25.125 4 W - Common待检查表架构的实体个数：2
10:31:25.179 8 W - 清空实体缓存：NewLife.YWS.Entities.Admin 原因：修改数据后提交事务
10:31:25.204 8 W - 检查实体NewLife.CommonEntity.Log的数据表架构，模式：CheckTableWhenFirstUse
10:31:25.205 8 W - DropDefault(OccurTime)
10:31:25.205 8 W - AddDefault(OccurTime,)
10:31:25.205 8 W - 初始化NewLife.CommonEntity.Log数据
10:31:25.369 4 W - DropDefault(LastLogin)
10:31:25.403 4 W - 检查连接[Common/MySql]的数据库架构耗时00:00:00.3923093
10:31:25.410 4 W - 完成更新缓存（第1次）：NewLife.CommonEntity.Menu
10:31:25.418 4 W - 更新实体缓存（第2次）：NewLife.YWS.Entities.Admin 原因：60秒过期 Administrator<>.FindByName(String name)<-.Login(String username,String password,Int32 hashTimes)
10:31:25.421 4 W - 完成更新缓存（第2次）：NewLife.YWS.Entities.Admin
10:31:25.452 4 W - 清空实体缓存：NewLife.YWS.Entities.Admin 原因：修改数据后提交事务
10:31:25.482 4 W - 更新实体缓存（第1次）：NewLife.YWS.Entities.MyRole 原因：第一次 Role<>.FindByID(Int32 id)<-
10:31:25.482 4 W - 初始化NewLife.YWS.Entities.MyRole数据
10:31:25.495 4 W - 检查实体NewLife.CommonEntity.RoleMenu的数据表架构，模式：CheckTableWhenFirstUse
10:31:25.498 4 W - 初始化NewLife.CommonEntity.RoleMenu数据
10:31:25.499 4 W - 如果某一个菜单对应的RoleMenu（角色菜单对应关系）为空或者只有一个，则授权第一个角色访问所有菜单！
10:31:25.520 4 W - 更新实体缓存（第1次）：NewLife.CommonEntity.RoleMenu 原因：第一次 RoleMenu<>.CheckNonePerssion(Int32 menuID)<-Role<,,>.InitData()
10:31:25.525 4 W - 完成更新缓存（第1次）：NewLife.CommonEntity.RoleMenu
10:31:25.538 4 W - 完成更新缓存（第1次）：NewLife.YWS.Entities.MyRole
10:31:27.375 10 W - 初始化Bioinfo.Entites.News数据
10:31:27.438 10 W - 初始化Bioinfo.Entites.Category数据
10:31:27.443 10 W - 更新实体缓存（第1次）：Bioinfo.Entites.Category 原因：第一次 Category.FindById(Int32 id)<-News.get_Category()
10:31:27.447 10 W - 完成更新缓存（第1次）：Bioinfo.Entites.Category

#Software: .
#ProcessID: 5168
#AppDomain: c5a66244-1-129931867686179400
#BaseDirectory: C:\DevelopMent\Bioinfo\BioinfoWebSite\
#Date: 2012-09-27
#Fields: Time ThreadID IsPoolThread ThreadName Message
10:32:49.307 4 W - NewLife.Core v3.8.2012.0803 Build 2012-09-25 12:03:50
10:32:49.311 4 W - 为NewLife.CommonEntity.IManageProvider配置注册YWSManageProvider，标识Identity=，优先级Priority=5！
10:32:50.684 4 W - NewLife.XCode v8.8.2012.0828 Build 2012-09-25 12:01:34
10:32:50.686 4 W - 一级缓存：关闭缓存
10:32:50.702 4 W - 更新实体缓存（第1次）：NewLife.CommonEntity.Menu 原因：第一次 Entity<>.FindWithCache(String name,Object value)<-Entity<>.EntityOperate.FindWithCache(String name,Object value)
10:32:50.702 8 W - 更新实体缓存（第1次）：NewLife.YWS.Entities.Admin 原因：第一次 Administrator<>.FindByName(String name)<-.Login(String username,String password,Int32 hashTimes)
10:32:50.898 4 W - 检查实体NewLife.CommonEntity.Menu的数据表架构，模式：CheckTableWhenFirstUse
10:32:51.225 8 W - DropDefault(LastLogin)
10:32:51.227 4 W - 初始化NewLife.CommonEntity.Menu数据
10:32:51.268 8 W - 初始化NewLife.YWS.Entities.Admin数据
10:32:51.274 4 W - 开始检查连接[Common/MySql]的数据库架构……
10:32:51.315 8 W - 完成更新缓存（第1次）：NewLife.YWS.Entities.Admin
10:32:51.361 4 W - [Common]的所有实体类（18个）：Sequence,GuidCategory,Administrator,Menu,Role,RoleMenu,Log,Area,User,Simple,SimpleTree,Setting,Statistics,UserProfile,Attachment,Category,MyRole,Admin
10:32:51.361 4 W - [Common]需要检查架构的实体类（2个）：MyRole,Admin
10:32:51.362 4 W - Common待检查表架构的实体个数：2
10:32:51.383 8 W - 清空实体缓存：NewLife.YWS.Entities.Admin 原因：修改数据后提交事务
10:32:51.408 8 W - 检查实体NewLife.CommonEntity.Log的数据表架构，模式：CheckTableWhenFirstUse
10:32:51.409 8 W - DropDefault(OccurTime)
10:32:51.409 8 W - AddDefault(OccurTime,)
10:32:51.409 8 W - 初始化NewLife.CommonEntity.Log数据
10:32:51.549 4 W - DropDefault(LastLogin)
10:32:51.586 4 W - 检查连接[Common/MySql]的数据库架构耗时00:00:00.3113175
10:32:51.593 4 W - 完成更新缓存（第1次）：NewLife.CommonEntity.Menu
10:32:51.602 4 W - 更新实体缓存（第2次）：NewLife.YWS.Entities.Admin 原因：60秒过期 Administrator<>.FindByName(String name)<-.Login(String username,String password,Int32 hashTimes)
10:32:51.606 4 W - 完成更新缓存（第2次）：NewLife.YWS.Entities.Admin
10:32:51.641 4 W - 清空实体缓存：NewLife.YWS.Entities.Admin 原因：修改数据后提交事务
10:32:51.705 4 W - 更新实体缓存（第1次）：NewLife.YWS.Entities.MyRole 原因：第一次 Role<>.FindByID(Int32 id)<-
10:32:51.705 4 W - 初始化NewLife.YWS.Entities.MyRole数据
10:32:51.718 4 W - 检查实体NewLife.CommonEntity.RoleMenu的数据表架构，模式：CheckTableWhenFirstUse
10:32:51.721 4 W - 初始化NewLife.CommonEntity.RoleMenu数据
10:32:51.722 4 W - 如果某一个菜单对应的RoleMenu（角色菜单对应关系）为空或者只有一个，则授权第一个角色访问所有菜单！
10:32:51.743 4 W - 更新实体缓存（第1次）：NewLife.CommonEntity.RoleMenu 原因：第一次 RoleMenu<>.CheckNonePerssion(Int32 menuID)<-Role<,,>.InitData()
10:32:51.748 4 W - 完成更新缓存（第1次）：NewLife.CommonEntity.RoleMenu
10:32:51.761 4 W - 完成更新缓存（第1次）：NewLife.YWS.Entities.MyRole
10:32:55.027 8 W - 初始化Bioinfo.Entites.News数据
10:32:55.087 8 W - 初始化Bioinfo.Entites.Category数据
10:32:55.091 8 W - 更新实体缓存（第1次）：Bioinfo.Entites.Category 原因：第一次 Category.FindById(Int32 id)<-News.get_Category()
10:32:55.095 8 W - 完成更新缓存（第1次）：Bioinfo.Entites.Category
10:37:09.763 7 W - 更新实体缓存（第2次）：NewLife.CommonEntity.Menu 原因：60秒过期 Menu<>.GetCurrentMenu()<-.get_Current()
10:37:09.768 7 W - 完成更新缓存（第2次）：NewLife.CommonEntity.Menu

#Software: .
#ProcessID: 3620
#AppDomain: c5a66244-1-129931873158332389
#BaseDirectory: C:\DevelopMent\Bioinfo\BioinfoWebSite\
#Date: 2012-09-27
#Fields: Time ThreadID IsPoolThread ThreadName Message
10:41:56.477 4 W - NewLife.Core v3.8.2012.0803 Build 2012-09-25 12:03:50
10:41:56.481 4 W - 为NewLife.CommonEntity.IManageProvider配置注册YWSManageProvider，标识Identity=，优先级Priority=5！
10:41:57.883 4 W - NewLife.XCode v8.8.2012.0828 Build 2012-09-25 12:01:34
10:41:57.884 4 W - 一级缓存：关闭缓存
10:41:57.901 4 W - 更新实体缓存（第1次）：NewLife.YWS.Entities.Admin 原因：第一次 Administrator<>.FindByName(String name)<-.Login(String username,String password,Int32 hashTimes)
10:41:58.405 4 W - DropDefault(LastLogin)
10:41:58.450 4 W - 初始化NewLife.YWS.Entities.Admin数据
10:41:58.464 4 W - 开始检查连接[Common/MySql]的数据库架构……
10:41:58.548 4 W - [Common]的所有实体类（18个）：Sequence,GuidCategory,Administrator,Menu,Role,RoleMenu,Log,Area,User,Simple,SimpleTree,Setting,Statistics,UserProfile,Attachment,Category,MyRole,Admin
10:41:58.548 4 W - [Common]需要检查架构的实体类（2个）：MyRole,Admin
10:41:58.549 4 W - Common待检查表架构的实体个数：2
10:41:58.704 4 W - DropDefault(LastLogin)
10:41:58.745 4 W - 检查连接[Common/MySql]的数据库架构耗时00:00:00.2815699
10:41:58.768 4 W - 完成更新缓存（第1次）：NewLife.YWS.Entities.Admin
10:41:58.838 4 W - 清空实体缓存：NewLife.YWS.Entities.Admin 原因：修改数据后提交事务
10:41:58.863 4 W - 检查实体NewLife.CommonEntity.Log的数据表架构，模式：CheckTableWhenFirstUse
10:41:58.863 4 W - DropDefault(OccurTime)
10:41:58.863 4 W - AddDefault(OccurTime,)
10:41:58.864 4 W - 初始化NewLife.CommonEntity.Log数据
10:41:58.902 4 W - 更新实体缓存（第1次）：NewLife.YWS.Entities.MyRole 原因：第一次 Role<>.FindByID(Int32 id)<-
10:41:58.902 4 W - 初始化NewLife.YWS.Entities.MyRole数据
10:41:58.915 4 W - 检查实体NewLife.CommonEntity.RoleMenu的数据表架构，模式：CheckTableWhenFirstUse
10:41:58.918 4 W - 初始化NewLife.CommonEntity.RoleMenu数据
10:41:58.919 4 W - 如果某一个菜单对应的RoleMenu（角色菜单对应关系）为空或者只有一个，则授权第一个角色访问所有菜单！
10:41:58.932 4 W - 更新实体缓存（第1次）：NewLife.CommonEntity.Menu 原因：第一次 EntityTree<,>.FindAllByParent(EntityTree<,>.TKey parentKey)<-.FindChilds()
10:41:58.932 4 W - 检查实体NewLife.CommonEntity.Menu的数据表架构，模式：CheckTableWhenFirstUse
10:41:58.971 4 W - 初始化NewLife.CommonEntity.Menu数据
10:41:58.981 4 W - 完成更新缓存（第1次）：NewLife.CommonEntity.Menu
10:41:58.993 4 W - 更新实体缓存（第1次）：NewLife.CommonEntity.RoleMenu 原因：第一次 RoleMenu<>.CheckNonePerssion(Int32 menuID)<-Role<,,>.InitData()
10:41:58.998 4 W - 完成更新缓存（第1次）：NewLife.CommonEntity.RoleMenu
10:41:59.011 4 W - 完成更新缓存（第1次）：NewLife.YWS.Entities.MyRole
10:41:59.046 4 W - 检查实体NewLife.CommonEntity.Setting的数据表架构，模式：CheckTableWhenFirstUse
10:41:59.047 4 W - 初始化NewLife.CommonEntity.Setting数据
10:42:02.551 4 W - 初始化Bioinfo.Entites.News数据
10:42:02.612 4 W - 初始化Bioinfo.Entites.Category数据
10:42:02.617 4 W - 更新实体缓存（第1次）：Bioinfo.Entites.Category 原因：第一次 Category.FindById(Int32 id)<-News.get_Category()
10:42:02.622 4 W - 完成更新缓存（第1次）：Bioinfo.Entites.Category
10:55:06.885 2 N - 清空单对象缓存：NewLife.CommonEntity.Setting

#Software: .
#ProcessID: 5084
#AppDomain: c5a66244-1-129931881120962975
#BaseDirectory: C:\DevelopMent\Bioinfo\BioinfoWebSite\
#Date: 2012-09-27
#Fields: Time ThreadID IsPoolThread ThreadName Message
10:55:12.735 4 W - NewLife.Core v3.8.2012.0803 Build 2012-09-25 12:03:50
10:55:12.751 4 W - 为NewLife.CommonEntity.IManageProvider配置注册YWSManageProvider，标识Identity=，优先级Priority=5！
10:55:14.373 4 W - NewLife.XCode v8.8.2012.0828 Build 2012-09-25 12:01:34
10:55:14.373 4 W - 检查实体NewLife.CommonEntity.Setting的数据表架构，模式：CheckTableWhenFirstUse
10:55:14.498 4 W - 初始化NewLife.CommonEntity.Setting数据
10:55:14.514 4 W - 开始检查连接[Common/MySql]的数据库架构……
10:55:14.592 4 W - [Common]的所有实体类（18个）：Sequence,GuidCategory,Administrator,Menu,Role,RoleMenu,Log,Area,User,Simple,SimpleTree,Setting,Statistics,UserProfile,Attachment,Category,MyRole,Admin
10:55:14.592 4 W - [Common]需要检查架构的实体类（2个）：MyRole,Admin
10:55:14.592 4 W - Common待检查表架构的实体个数：2
10:55:14.639 9 Y - DropDefault(LastLogin)
10:55:14.779 4 W - DropDefault(LastLogin)
10:55:14.841 4 W - 检查连接[Common/MySql]的数据库架构耗时00:00:00.3343110
10:55:14.841 9 Y - 初始化NewLife.YWS.Entities.Admin数据
10:55:14.841 4 W - 一级缓存：关闭缓存
10:55:16.136 12 W - 更新实体缓存（第1次）：NewLife.YWS.Entities.Admin 原因：第一次 Administrator<>.FindByName(String name)<-.Login(String username,String password,Int32 hashTimes)
10:55:16.136 12 W - 完成更新缓存（第1次）：NewLife.YWS.Entities.Admin
10:55:16.152 12 W - 清空实体缓存：NewLife.YWS.Entities.Admin 原因：修改数据后提交事务
10:55:16.185 12 W - 检查实体NewLife.CommonEntity.Log的数据表架构，模式：CheckTableWhenFirstUse
10:55:16.255 12 W - DropDefault(OccurTime)
10:55:16.255 12 W - AddDefault(OccurTime,)
10:55:16.255 12 W - 初始化NewLife.CommonEntity.Log数据
10:55:16.312 9 W - 更新实体缓存（第1次）：NewLife.YWS.Entities.MyRole 原因：第一次 Role<>.FindByID(Int32 id)<-
10:55:16.312 9 W - 初始化NewLife.YWS.Entities.MyRole数据
10:55:16.328 9 W - 检查实体NewLife.CommonEntity.RoleMenu的数据表架构，模式：CheckTableWhenFirstUse
10:55:16.328 9 W - 初始化NewLife.CommonEntity.RoleMenu数据
10:55:16.328 9 W - 如果某一个菜单对应的RoleMenu（角色菜单对应关系）为空或者只有一个，则授权第一个角色访问所有菜单！
10:55:16.343 9 W - 更新实体缓存（第1次）：NewLife.CommonEntity.Menu 原因：第一次 EntityTree<,>.FindAllByParent(EntityTree<,>.TKey parentKey)<-.FindChilds()
10:55:16.343 9 W - 检查实体NewLife.CommonEntity.Menu的数据表架构，模式：CheckTableWhenFirstUse
10:55:16.375 9 W - 初始化NewLife.CommonEntity.Menu数据
10:55:16.390 9 W - 完成更新缓存（第1次）：NewLife.CommonEntity.Menu
10:55:16.406 9 W - 更新实体缓存（第1次）：NewLife.CommonEntity.RoleMenu 原因：第一次 RoleMenu<>.CheckNonePerssion(Int32 menuID)<-Role<,,>.InitData()
10:55:16.406 9 W - 完成更新缓存（第1次）：NewLife.CommonEntity.RoleMenu
10:55:16.421 9 W - 完成更新缓存（第1次）：NewLife.YWS.Entities.MyRole
10:55:19.399 4 W - 初始化Bioinfo.Entites.News数据
10:55:19.431 4 W - 初始化Bioinfo.Entites.Category数据
10:55:19.446 4 W - 更新实体缓存（第1次）：Bioinfo.Entites.Category 原因：第一次 Category.FindById(Int32 id)<-News.get_Category()
10:55:19.446 4 W - 完成更新缓存（第1次）：Bioinfo.Entites.Category
10:57:01.456 9 W - 更新实体缓存（第2次）：NewLife.YWS.Entities.Admin 原因：60秒过期 Administrator<>.FindByName(String name)<-.Login(String username,String password,Int32 hashTimes)
10:57:01.456 9 W - 完成更新缓存（第2次）：NewLife.YWS.Entities.Admin
10:57:01.487 9 W - 清空实体缓存：NewLife.YWS.Entities.Admin 原因：修改数据后提交事务
10:57:01.519 13 W - 更新实体缓存（第2次）：NewLife.YWS.Entities.MyRole 原因：60秒过期 Role<>.FindByID(Int32 id)<-
10:57:01.522 13 W - 完成更新缓存（第2次）：NewLife.YWS.Entities.MyRole
10:57:01.523 13 W - 更新实体缓存（第2次）：NewLife.CommonEntity.RoleMenu 原因：60秒过期 RoleMenu<>.FindAllByRoleID(Int32 roleID)<-
10:57:01.526 13 W - 完成更新缓存（第2次）：NewLife.CommonEntity.RoleMenu
10:57:01.528 13 W - 更新实体缓存（第2次）：NewLife.CommonEntity.Menu 原因：60秒过期 Menu<>.FindByID(Int32 id)<-
10:57:01.528 13 W - 完成更新缓存（第2次）：NewLife.CommonEntity.Menu
10:57:04.232 4 W - 更新实体缓存（第2次）：Bioinfo.Entites.Category 原因：60秒过期 Category.FindById(Int32 id)<-News.get_Category()
10:57:04.232 4 W - 完成更新缓存（第2次）：Bioinfo.Entites.Category
10:58:13.944 8 W - 更新实体缓存（第3次）：NewLife.YWS.Entities.Admin 原因：60秒过期 Administrator<>.FindByName(String name)<-.Login(String username,String password,Int32 hashTimes)
10:58:13.944 8 W - 完成更新缓存（第3次）：NewLife.YWS.Entities.Admin
10:58:13.975 8 W - 清空实体缓存：NewLife.YWS.Entities.Admin 原因：修改数据后提交事务
10:58:14.010 15 W - 更新实体缓存（第3次）：NewLife.YWS.Entities.MyRole 原因：60秒过期 Role<>.FindByID(Int32 id)<-
10:58:14.013 15 W - 完成更新缓存（第3次）：NewLife.YWS.Entities.MyRole
10:58:14.013 15 W - 更新实体缓存（第3次）：NewLife.CommonEntity.RoleMenu 原因：60秒过期 RoleMenu<>.FindAllByRoleID(Int32 roleID)<-
10:58:14.017 15 W - 完成更新缓存（第3次）：NewLife.CommonEntity.RoleMenu
10:58:14.017 15 W - 更新实体缓存（第3次）：NewLife.CommonEntity.Menu 原因：60秒过期 Menu<>.FindByID(Int32 id)<-
10:58:14.017 15 W - 完成更新缓存（第3次）：NewLife.CommonEntity.Menu
10:58:16.632 16 W - 更新实体缓存（第3次）：Bioinfo.Entites.Category 原因：60秒过期 Category.FindById(Int32 id)<-News.get_Category()
10:58:16.632 16 W - 完成更新缓存（第3次）：Bioinfo.Entites.Category
11:01:24.177 15 W - 更新实体缓存（第4次）：NewLife.YWS.Entities.Admin 原因：60秒过期 Administrator<>.FindByName(String name)<-.Login(String username,String password,Int32 hashTimes)
11:01:24.177 15 W - 完成更新缓存（第4次）：NewLife.YWS.Entities.Admin
11:01:24.208 15 W - 清空实体缓存：NewLife.YWS.Entities.Admin 原因：修改数据后提交事务
11:01:24.223 17 W - 更新实体缓存（第4次）：NewLife.YWS.Entities.MyRole 原因：60秒过期 Role<>.FindByID(Int32 id)<-
11:01:24.223 17 W - 完成更新缓存（第4次）：NewLife.YWS.Entities.MyRole
11:01:24.223 17 W - 更新实体缓存（第4次）：NewLife.CommonEntity.RoleMenu 原因：60秒过期 RoleMenu<>.FindAllByRoleID(Int32 roleID)<-
11:01:24.241 17 W - 完成更新缓存（第4次）：NewLife.CommonEntity.RoleMenu
11:01:24.242 17 W - 更新实体缓存（第4次）：NewLife.CommonEntity.Menu 原因：60秒过期 Menu<>.FindByID(Int32 id)<-
11:01:24.245 17 W - 完成更新缓存（第4次）：NewLife.CommonEntity.Menu
11:01:30.580 4 W - 更新实体缓存（第4次）：Bioinfo.Entites.Category 原因：60秒过期 Category.FindById(Int32 id)<-News.get_Category()
11:01:30.596 4 W - 完成更新缓存（第4次）：Bioinfo.Entites.Category
11:02:34.594 15 W - 更新实体缓存（第5次）：NewLife.YWS.Entities.Admin 原因：60秒过期 Administrator<>.FindByName(String name)<-.Login(String username,String password,Int32 hashTimes)
11:02:34.594 15 W - 完成更新缓存（第5次）：NewLife.YWS.Entities.Admin
11:02:34.625 15 W - 清空实体缓存：NewLife.YWS.Entities.Admin 原因：修改数据后提交事务
11:02:34.665 15 W - 更新实体缓存（第5次）：NewLife.YWS.Entities.MyRole 原因：60秒过期 Role<>.FindByID(Int32 id)<-
11:02:34.666 15 W - 完成更新缓存（第5次）：NewLife.YWS.Entities.MyRole
11:02:34.666 15 W - 更新实体缓存（第5次）：NewLife.CommonEntity.RoleMenu 原因：60秒过期 RoleMenu<>.FindAllByRoleID(Int32 roleID)<-
11:02:34.666 15 W - 完成更新缓存（第5次）：NewLife.CommonEntity.RoleMenu
11:02:34.666 15 W - 更新实体缓存（第5次）：NewLife.CommonEntity.Menu 原因：60秒过期 Menu<>.FindByID(Int32 id)<-
11:02:34.676 15 W - 完成更新缓存（第5次）：NewLife.CommonEntity.Menu
11:02:37.386 19 W - 更新实体缓存（第5次）：Bioinfo.Entites.Category 原因：60秒过期 Category.FindById(Int32 id)<-News.get_Category()
11:02:37.402 19 W - 完成更新缓存（第5次）：Bioinfo.Entites.Category
11:03:44.542 20 W - 更新实体缓存（第6次）：NewLife.YWS.Entities.Admin 原因：60秒过期 Administrator<>.FindByName(String name)<-.Login(String username,String password,Int32 hashTimes)
11:03:44.542 20 W - 完成更新缓存（第6次）：NewLife.YWS.Entities.Admin
11:03:44.573 20 W - 清空实体缓存：NewLife.YWS.Entities.Admin 原因：修改数据后提交事务
11:03:44.604 20 W - 更新实体缓存（第6次）：NewLife.YWS.Entities.MyRole 原因：60秒过期 Role<>.FindByID(Int32 id)<-
11:03:44.604 20 W - 完成更新缓存（第6次）：NewLife.YWS.Entities.MyRole
11:03:44.604 20 W - 更新实体缓存（第6次）：NewLife.CommonEntity.RoleMenu 原因：60秒过期 RoleMenu<>.FindAllByRoleID(Int32 roleID)<-
11:03:44.620 20 W - 完成更新缓存（第6次）：NewLife.CommonEntity.RoleMenu
11:03:44.621 20 W - 更新实体缓存（第6次）：NewLife.CommonEntity.Menu 原因：60秒过期 Menu<>.FindByID(Int32 id)<-
11:03:44.626 20 W - 完成更新缓存（第6次）：NewLife.CommonEntity.Menu
11:03:52.227 18 W - 更新实体缓存（第6次）：Bioinfo.Entites.Category 原因：60秒过期 Category.FindById(Int32 id)<-News.get_Category()
11:03:52.242 18 W - 完成更新缓存（第6次）：Bioinfo.Entites.Category
11:04:35.907 2 N - 清空单对象缓存：NewLife.CommonEntity.Setting

#Software: .
#ProcessID: 4304
#AppDomain: c5a66244-1-129931892992155644
#BaseDirectory: C:\DevelopMent\Bioinfo\BioinfoWebSite\
#Date: 2012-09-27
#Fields: Time ThreadID IsPoolThread ThreadName Message
11:14:59.886 4 W - NewLife.Core v3.8.2012.0803 Build 2012-09-25 12:03:50
11:14:59.886 4 W - 为NewLife.CommonEntity.IManageProvider配置注册YWSManageProvider，标识Identity=，优先级Priority=5！
11:15:01.602 8 W - NewLife.XCode v8.8.2012.0828 Build 2012-09-25 12:01:34
11:15:01.602 8 W - 检查实体NewLife.CommonEntity.Setting的数据表架构，模式：CheckTableWhenFirstUse
11:15:01.727 8 W - 初始化NewLife.CommonEntity.Setting数据
11:15:01.742 8 W - 开始检查连接[Common/MySql]的数据库架构……
11:15:01.820 8 W - [Common]的所有实体类（18个）：Sequence,GuidCategory,Administrator,Menu,Role,RoleMenu,Log,Area,User,Simple,SimpleTree,Setting,Statistics,UserProfile,Attachment,Category,MyRole,Admin
11:15:01.820 8 W - [Common]需要检查架构的实体类（2个）：MyRole,Admin
11:15:01.820 8 W - Common待检查表架构的实体个数：2
11:15:01.867 4 Y - DropDefault(LastLogin)
11:15:01.992 8 W - DropDefault(LastLogin)
11:15:02.070 8 W - 检查连接[Common/MySql]的数据库架构耗时00:00:00.3404587
11:15:02.070 4 Y - 初始化NewLife.YWS.Entities.Admin数据
11:15:02.085 8 W - 一级缓存：关闭缓存
11:15:06.051 8 W - 更新实体缓存（第1次）：NewLife.YWS.Entities.Admin 原因：第一次 Administrator<>.FindByName(String name)<-.Login(String username,String password,Int32 hashTimes)
11:15:06.051 8 W - 完成更新缓存（第1次）：NewLife.YWS.Entities.Admin
11:15:06.083 8 W - 清空实体缓存：NewLife.YWS.Entities.Admin 原因：修改数据后提交事务
11:15:06.108 8 W - 检查实体NewLife.CommonEntity.Log的数据表架构，模式：CheckTableWhenFirstUse
11:15:06.108 8 W - DropDefault(OccurTime)
11:15:06.108 8 W - AddDefault(OccurTime,)
11:15:06.108 8 W - 初始化NewLife.CommonEntity.Log数据
11:15:06.158 11 W - 更新实体缓存（第1次）：NewLife.YWS.Entities.MyRole 原因：第一次 Role<>.FindByID(Int32 id)<-
11:15:06.158 11 W - 初始化NewLife.YWS.Entities.MyRole数据
11:15:06.168 11 W - 检查实体NewLife.CommonEntity.RoleMenu的数据表架构，模式：CheckTableWhenFirstUse
11:15:06.229 11 W - 初始化NewLife.CommonEntity.RoleMenu数据
11:15:06.229 11 W - 如果某一个菜单对应的RoleMenu（角色菜单对应关系）为空或者只有一个，则授权第一个角色访问所有菜单！
11:15:06.245 11 W - 更新实体缓存（第1次）：NewLife.CommonEntity.Menu 原因：第一次 EntityTree<,>.FindAllByParent(EntityTree<,>.TKey parentKey)<-.FindChilds()
11:15:06.245 11 W - 检查实体NewLife.CommonEntity.Menu的数据表架构，模式：CheckTableWhenFirstUse
11:15:06.276 11 W - 初始化NewLife.CommonEntity.Menu数据
11:15:06.292 11 W - 完成更新缓存（第1次）：NewLife.CommonEntity.Menu
11:15:06.307 11 W - 更新实体缓存（第1次）：NewLife.CommonEntity.RoleMenu 原因：第一次 RoleMenu<>.CheckNonePerssion(Int32 menuID)<-Role<,,>.InitData()
11:15:06.307 11 W - 完成更新缓存（第1次）：NewLife.CommonEntity.RoleMenu
11:15:06.323 11 W - 完成更新缓存（第1次）：NewLife.YWS.Entities.MyRole
11:15:08.559 11 W - 初始化Bioinfo.Entites.News数据
11:15:08.599 11 W - 初始化Bioinfo.Entites.Category数据
11:15:08.599 11 W - 更新实体缓存（第1次）：Bioinfo.Entites.Category 原因：第一次 Category.FindById(Int32 id)<-News.get_Category()
11:15:08.615 11 W - 完成更新缓存（第1次）：Bioinfo.Entites.Category
11:17:20.742 11 W - 更新实体缓存（第2次）：NewLife.CommonEntity.Menu 原因：60秒过期 Menu<>.GetCurrentMenu()<-.get_Current()
11:17:20.757 11 W - 完成更新缓存（第2次）：NewLife.CommonEntity.Menu
11:21:09.798 2 N - 清空单对象缓存：NewLife.CommonEntity.Setting

#Software: .
#ProcessID: 1740
#AppDomain: c5a66244-1-129931896769921631
#BaseDirectory: C:\DevelopMent\Bioinfo\BioinfoWebSite\
#Date: 2012-09-27
#Fields: Time ThreadID IsPoolThread ThreadName Message
11:21:17.677 4 W - NewLife.Core v3.8.2012.0803 Build 2012-09-25 12:03:50
11:21:17.680 4 W - 为NewLife.CommonEntity.IManageProvider配置注册YWSManageProvider，标识Identity=，优先级Priority=5！
11:21:19.048 4 W - NewLife.XCode v8.8.2012.0828 Build 2012-09-25 12:01:34
11:21:19.050 4 W - 一级缓存：关闭缓存
11:21:19.067 4 W - 更新实体缓存（第1次）：NewLife.YWS.Entities.Admin 原因：第一次 Administrator<>.FindByName(String name)<-.Login(String username,String password,Int32 hashTimes)
11:21:19.545 4 W - DropDefault(LastLogin)
11:21:19.584 4 W - 初始化NewLife.YWS.Entities.Admin数据
11:21:19.598 4 W - 开始检查连接[Common/MySql]的数据库架构……
11:21:19.680 4 W - [Common]的所有实体类（18个）：Sequence,GuidCategory,Administrator,Menu,Role,RoleMenu,Log,Area,User,Simple,SimpleTree,Setting,Statistics,UserProfile,Attachment,Category,MyRole,Admin
11:21:19.680 4 W - [Common]需要检查架构的实体类（2个）：MyRole,Admin
11:21:19.681 4 W - Common待检查表架构的实体个数：2
11:21:19.836 4 W - DropDefault(LastLogin)
11:21:19.876 4 W - 检查连接[Common/MySql]的数据库架构耗时00:00:00.2781422
11:21:19.899 4 W - 完成更新缓存（第1次）：NewLife.YWS.Entities.Admin
11:21:19.961 4 W - 清空实体缓存：NewLife.YWS.Entities.Admin 原因：修改数据后提交事务
11:21:19.986 4 W - 检查实体NewLife.CommonEntity.Log的数据表架构，模式：CheckTableWhenFirstUse
11:21:19.987 4 W - DropDefault(OccurTime)
11:21:19.987 4 W - AddDefault(OccurTime,)
11:21:19.987 4 W - 初始化NewLife.CommonEntity.Log数据
11:21:20.033 4 W - 更新实体缓存（第1次）：NewLife.YWS.Entities.MyRole 原因：第一次 Role<>.FindByID(Int32 id)<-
11:21:20.034 4 W - 初始化NewLife.YWS.Entities.MyRole数据
11:21:20.046 4 W - 检查实体NewLife.CommonEntity.RoleMenu的数据表架构，模式：CheckTableWhenFirstUse
11:21:20.050 4 W - 初始化NewLife.CommonEntity.RoleMenu数据
11:21:20.051 4 W - 如果某一个菜单对应的RoleMenu（角色菜单对应关系）为空或者只有一个，则授权第一个角色访问所有菜单！
11:21:20.063 4 W - 更新实体缓存（第1次）：NewLife.CommonEntity.Menu 原因：第一次 EntityTree<,>.FindAllByParent(EntityTree<,>.TKey parentKey)<-.FindChilds()
11:21:20.063 4 W - 检查实体NewLife.CommonEntity.Menu的数据表架构，模式：CheckTableWhenFirstUse
11:21:20.096 4 W - 初始化NewLife.CommonEntity.Menu数据
11:21:20.106 4 W - 完成更新缓存（第1次）：NewLife.CommonEntity.Menu
11:21:20.118 4 W - 更新实体缓存（第1次）：NewLife.CommonEntity.RoleMenu 原因：第一次 RoleMenu<>.CheckNonePerssion(Int32 menuID)<-Role<,,>.InitData()
11:21:20.123 4 W - 完成更新缓存（第1次）：NewLife.CommonEntity.RoleMenu
11:21:20.139 4 W - 完成更新缓存（第1次）：NewLife.YWS.Entities.MyRole
11:21:20.175 4 W - 检查实体NewLife.CommonEntity.Setting的数据表架构，模式：CheckTableWhenFirstUse
11:21:20.176 4 W - 初始化NewLife.CommonEntity.Setting数据
11:21:23.324 8 W - 初始化Bioinfo.Entites.News数据
11:21:23.383 8 W - 初始化Bioinfo.Entites.Category数据
11:21:23.388 8 W - 更新实体缓存（第1次）：Bioinfo.Entites.Category 原因：第一次 Category.FindById(Int32 id)<-News.get_Category()
11:21:23.392 8 W - 完成更新缓存（第1次）：Bioinfo.Entites.Category
11:21:36.568 2 N - 清空单对象缓存：NewLife.CommonEntity.Setting
11:21:36.571 2 N - 错误的连接字符串：Server=192.168.1.47;Database=Bioinfodb2;Uid=root;Pwd=yrshabc123
11:21:36.573 2 N - XCode.Exceptions.XDbSessionException: Unable to connect to any of the specified MySQL hosts.[DB:Common/MySql] ---> MySql.Data.MySqlClient.MySqlException: Unable to connect to any of the specified MySQL hosts. ---> System.ApplicationException: 应用程序中的错误。
   在 System.Threading.ThreadPool.RegisterWaitForSingleObjectNative(WaitHandle waitHandle, Object state, UInt32 timeOutInterval, Boolean executeOnlyOnce, RegisteredWaitHandle registeredWaitHandle, StackCrawlMark& stackMark, Boolean compressStack)
   在 System.Threading.ThreadPool.RegisterWaitForSingleObject(WaitHandle waitObject, WaitOrTimerCallback callBack, Object state, UInt32 millisecondsTimeOutInterval, Boolean executeOnlyOnce, StackCrawlMark& stackMark, Boolean compressStack)
   在 System.Threading.ThreadPool.UnsafeRegisterWaitForSingleObject(WaitHandle waitObject, WaitOrTimerCallback callBack, Object state, Int32 millisecondsTimeOutInterval, Boolean executeOnlyOnce)
   在 System.Net.Sockets.Socket.SetAsyncEventSelect(AsyncEventBits blockEventBits)
   在 System.Net.Sockets.Socket.DoBeginConnect(EndPoint endPointSnapshot, SocketAddress socketAddress, LazyAsyncResult asyncResult)
   在 System.Net.Sockets.Socket.BeginConnect(EndPoint remoteEP, AsyncCallback callback, Object state)
   在 MySql.Data.Common.StreamCreator.CreateSocketStream(IPAddress ip, Boolean unix)
   在 MySql.Data.Common.StreamCreator.GetStream(UInt32 timeout)
   在 MySql.Data.MySqlClient.NativeDriver.Open()
   --- 内部异常堆栈跟踪的结尾 ---
   在 MySql.Data.MySqlClient.NativeDriver.Open()
   在 MySql.Data.MySqlClient.Driver.Open()
   在 MySql.Data.MySqlClient.Driver.Create(MySqlConnectionStringBuilder settings)
   在 MySql.Data.MySqlClient.MySqlPool.GetPooledConnection()
   在 MySql.Data.MySqlClient.MySqlPool.TryToGetDriver()
   在 MySql.Data.MySqlClient.MySqlPool.GetConnection()
   在 MySql.Data.MySqlClient.MySqlConnection.Open()
   在 XCode.DataAccessLayer.DbSession.Open()
   在 XCode.DataAccessLayer.DbSession.BeginTransaction()
   --- 内部异常堆栈跟踪的结尾 ---
   在 XCode.DataAccessLayer.DbSession.BeginTransaction()
   在 XCode.DataAccessLayer.DAL.BeginTransaction()
   在 XCode.Entity`1.Meta.BeginTrans()
   在 XCode.Entity`1.DoAction(Func`1 func, Nullable`1 isnew)
   在 XCode.Entity`1.Update()
   在 XCode.Cache.SingleEntityCache`2.<>c__DisplayClass1c.<Clear>b__1b()
   在 XCode.Cache.CacheBase`1.InvokeFill(Func callback)

#Software: .
#ProcessID: 2364
#AppDomain: c5a66244-1-129931901481604632
#BaseDirectory: C:\DevelopMent\Bioinfo\BioinfoWebSite\
#Date: 2012-09-27
#Fields: Time ThreadID IsPoolThread ThreadName Message
11:29:08.784 4 W - NewLife.Core v3.8.2012.0803 Build 2012-09-25 12:03:50
11:29:08.800 4 W - 为NewLife.CommonEntity.IManageProvider配置注册YWSManageProvider，标识Identity=，优先级Priority=5！
11:29:10.391 8 W - NewLife.XCode v8.8.2012.0828 Build 2012-09-25 12:01:34
11:29:10.391 8 W - 检查实体NewLife.CommonEntity.Setting的数据表架构，模式：CheckTableWhenFirstUse
11:29:10.516 8 W - 初始化NewLife.CommonEntity.Setting数据
11:29:10.516 8 W - 开始检查连接[Common/MySql]的数据库架构……
11:29:10.594 8 W - [Common]的所有实体类（18个）：Sequence,GuidCategory,Administrator,Menu,Role,RoleMenu,Log,Area,User,Simple,SimpleTree,Setting,Statistics,UserProfile,Attachment,Category,MyRole,Admin
11:29:10.594 8 W - [Common]需要检查架构的实体类（2个）：MyRole,Admin
11:29:10.594 8 W - Common待检查表架构的实体个数：2
11:29:10.656 4 Y - DropDefault(LastLogin)
11:29:10.796 8 W - DropDefault(LastLogin)
11:29:10.859 8 W - 检查连接[Common/MySql]的数据库架构耗时00:00:00.3407219
11:29:10.859 4 Y - 初始化NewLife.YWS.Entities.Admin数据
11:29:10.859 8 W - 一级缓存：关闭缓存
11:29:12.325 8 W - 更新实体缓存（第1次）：NewLife.YWS.Entities.Admin 原因：第一次 Administrator<>.FindByName(String name)<-.Login(String username,String password,Int32 hashTimes)
11:29:12.325 8 W - 完成更新缓存（第1次）：NewLife.YWS.Entities.Admin
11:29:12.356 8 W - 清空实体缓存：NewLife.YWS.Entities.Admin 原因：修改数据后提交事务
11:29:12.388 8 W - 检查实体NewLife.CommonEntity.Log的数据表架构，模式：CheckTableWhenFirstUse
11:29:12.388 8 W - DropDefault(OccurTime)
11:29:12.388 8 W - AddDefault(OccurTime,)
11:29:12.388 8 W - 初始化NewLife.CommonEntity.Log数据
11:29:12.439 4 W - 更新实体缓存（第1次）：NewLife.YWS.Entities.MyRole 原因：第一次 Role<>.FindByID(Int32 id)<-
11:29:12.439 4 W - 初始化NewLife.YWS.Entities.MyRole数据
11:29:12.459 4 W - 检查实体NewLife.CommonEntity.RoleMenu的数据表架构，模式：CheckTableWhenFirstUse
11:29:12.459 4 W - 初始化NewLife.CommonEntity.RoleMenu数据
11:29:12.459 4 W - 如果某一个菜单对应的RoleMenu（角色菜单对应关系）为空或者只有一个，则授权第一个角色访问所有菜单！
11:29:12.469 4 W - 更新实体缓存（第1次）：NewLife.CommonEntity.Menu 原因：第一次 EntityTree<,>.FindAllByParent(EntityTree<,>.TKey parentKey)<-.FindChilds()
11:29:12.469 4 W - 检查实体NewLife.CommonEntity.Menu的数据表架构，模式：CheckTableWhenFirstUse
11:29:12.509 4 W - 初始化NewLife.CommonEntity.Menu数据
11:29:12.519 4 W - 完成更新缓存（第1次）：NewLife.CommonEntity.Menu
11:29:12.534 4 W - 更新实体缓存（第1次）：NewLife.CommonEntity.RoleMenu 原因：第一次 RoleMenu<>.CheckNonePerssion(Int32 menuID)<-Role<,,>.InitData()
11:29:12.534 4 W - 完成更新缓存（第1次）：NewLife.CommonEntity.RoleMenu
11:29:12.550 4 W - 完成更新缓存（第1次）：NewLife.YWS.Entities.MyRole
11:29:15.333 4 W - 初始化Bioinfo.Entites.News数据
11:29:15.364 4 W - 初始化Bioinfo.Entites.Category数据
11:29:15.364 4 W - 更新实体缓存（第1次）：Bioinfo.Entites.Category 原因：第一次 Category.FindById(Int32 id)<-News.get_Category()
11:29:15.380 4 W - 完成更新缓存（第1次）：Bioinfo.Entites.Category
11:33:50.182 2 N - 清空单对象缓存：NewLife.CommonEntity.Setting
11:33:50.185 2 N - 错误的连接字符串：Server=192.168.1.47;Database=Bioinfodb2;Uid=root;Pwd=yrshabc123
11:33:50.187 2 N - XCode.Exceptions.XDbSessionException: Unable to connect to any of the specified MySQL hosts.[DB:Common/MySql] ---> MySql.Data.MySqlClient.MySqlException: Unable to connect to any of the specified MySQL hosts. ---> System.ApplicationException: 应用程序中的错误。
   在 System.Threading.ThreadPool.RegisterWaitForSingleObjectNative(WaitHandle waitHandle, Object state, UInt32 timeOutInterval, Boolean executeOnlyOnce, RegisteredWaitHandle registeredWaitHandle, StackCrawlMark& stackMark, Boolean compressStack)
   在 System.Threading.ThreadPool.RegisterWaitForSingleObject(WaitHandle waitObject, WaitOrTimerCallback callBack, Object state, UInt32 millisecondsTimeOutInterval, Boolean executeOnlyOnce, StackCrawlMark& stackMark, Boolean compressStack)
   在 System.Threading.ThreadPool.UnsafeRegisterWaitForSingleObject(WaitHandle waitObject, WaitOrTimerCallback callBack, Object state, Int32 millisecondsTimeOutInterval, Boolean executeOnlyOnce)
   在 System.Net.Sockets.Socket.SetAsyncEventSelect(AsyncEventBits blockEventBits)
   在 System.Net.Sockets.Socket.DoBeginConnect(EndPoint endPointSnapshot, SocketAddress socketAddress, LazyAsyncResult asyncResult)
   在 System.Net.Sockets.Socket.BeginConnect(EndPoint remoteEP, AsyncCallback callback, Object state)
   在 MySql.Data.Common.StreamCreator.CreateSocketStream(IPAddress ip, Boolean unix)
   在 MySql.Data.Common.StreamCreator.GetStream(UInt32 timeout)
   在 MySql.Data.MySqlClient.NativeDriver.Open()
   --- 内部异常堆栈跟踪的结尾 ---
   在 MySql.Data.MySqlClient.NativeDriver.Open()
   在 MySql.Data.MySqlClient.Driver.Open()
   在 MySql.Data.MySqlClient.Driver.Create(MySqlConnectionStringBuilder settings)
   在 MySql.Data.MySqlClient.MySqlPool.GetPooledConnection()
   在 MySql.Data.MySqlClient.MySqlPool.TryToGetDriver()
   在 MySql.Data.MySqlClient.MySqlPool.GetConnection()
   在 MySql.Data.MySqlClient.MySqlConnection.Open()
   在 XCode.DataAccessLayer.DbSession.Open()
   在 XCode.DataAccessLayer.DbSession.BeginTransaction()
   --- 内部异常堆栈跟踪的结尾 ---
   在 XCode.DataAccessLayer.DbSession.BeginTransaction()
   在 XCode.DataAccessLayer.DAL.BeginTransaction()
   在 XCode.Entity`1.Meta.BeginTrans()
   在 XCode.Entity`1.DoAction(Func`1 func, Nullable`1 isnew)
   在 XCode.Entity`1.Update()
   在 XCode.Cache.SingleEntityCache`2.<>c__DisplayClass1c.<Clear>b__1b()
   在 XCode.Cache.CacheBase`1.InvokeFill(Func callback)

#Software: .
#ProcessID: 976
#AppDomain: c5a66244-1-129931904412016701
#BaseDirectory: C:\DevelopMent\Bioinfo\BioinfoWebSite\
#Date: 2012-09-27
#Fields: Time ThreadID IsPoolThread ThreadName Message
11:34:01.852 4 W - NewLife.Core v3.8.2012.0803 Build 2012-09-25 12:03:50
11:34:01.856 4 W - 为NewLife.CommonEntity.IManageProvider配置注册YWSManageProvider，标识Identity=，优先级Priority=5！
11:34:03.297 4 W - NewLife.XCode v8.8.2012.0828 Build 2012-09-25 12:01:34
11:34:03.299 4 W - 一级缓存：关闭缓存
11:34:03.317 4 W - 更新实体缓存（第1次）：NewLife.YWS.Entities.Admin 原因：第一次 Administrator<>.FindByName(String name)<-.Login(String username,String password,Int32 hashTimes)
11:34:03.808 4 W - DropDefault(LastLogin)
11:34:03.855 4 W - 初始化NewLife.YWS.Entities.Admin数据
11:34:03.869 4 W - 开始检查连接[Common/MySql]的数据库架构……
11:34:03.952 4 W - [Common]的所有实体类（18个）：Sequence,GuidCategory,Administrator,Menu,Role,RoleMenu,Log,Area,User,Simple,SimpleTree,Setting,Statistics,UserProfile,Attachment,Category,MyRole,Admin
11:34:03.952 4 W - [Common]需要检查架构的实体类（2个）：MyRole,Admin
11:34:03.952 4 W - Common待检查表架构的实体个数：2
11:34:04.090 4 W - DropDefault(LastLogin)
11:34:04.133 4 W - 检查连接[Common/MySql]的数据库架构耗时00:00:00.2642721
11:34:04.157 4 W - 完成更新缓存（第1次）：NewLife.YWS.Entities.Admin
11:34:04.216 4 W - 清空实体缓存：NewLife.YWS.Entities.Admin 原因：修改数据后提交事务
11:34:04.240 4 W - 检查实体NewLife.CommonEntity.Log的数据表架构，模式：CheckTableWhenFirstUse
11:34:04.241 4 W - DropDefault(OccurTime)
11:34:04.241 4 W - AddDefault(OccurTime,)
11:34:04.241 4 W - 初始化NewLife.CommonEntity.Log数据
11:34:04.281 4 W - 更新实体缓存（第1次）：NewLife.YWS.Entities.MyRole 原因：第一次 Role<>.FindByID(Int32 id)<-
11:34:04.281 4 W - 初始化NewLife.YWS.Entities.MyRole数据
11:34:04.294 4 W - 检查实体NewLife.CommonEntity.RoleMenu的数据表架构，模式：CheckTableWhenFirstUse
11:34:04.297 4 W - 初始化NewLife.CommonEntity.RoleMenu数据
11:34:04.298 4 W - 如果某一个菜单对应的RoleMenu（角色菜单对应关系）为空或者只有一个，则授权第一个角色访问所有菜单！
11:34:04.311 4 W - 更新实体缓存（第1次）：NewLife.CommonEntity.Menu 原因：第一次 EntityTree<,>.FindAllByParent(EntityTree<,>.TKey parentKey)<-.FindChilds()
11:34:04.311 4 W - 检查实体NewLife.CommonEntity.Menu的数据表架构，模式：CheckTableWhenFirstUse
11:34:04.342 4 W - 初始化NewLife.CommonEntity.Menu数据
11:34:04.352 4 W - 完成更新缓存（第1次）：NewLife.CommonEntity.Menu
11:34:04.364 4 W - 更新实体缓存（第1次）：NewLife.CommonEntity.RoleMenu 原因：第一次 RoleMenu<>.CheckNonePerssion(Int32 menuID)<-Role<,,>.InitData()
11:34:04.368 4 W - 完成更新缓存（第1次）：NewLife.CommonEntity.RoleMenu
11:34:04.382 4 W - 完成更新缓存（第1次）：NewLife.YWS.Entities.MyRole
11:34:04.417 4 W - 检查实体NewLife.CommonEntity.Setting的数据表架构，模式：CheckTableWhenFirstUse
11:34:04.417 4 W - 初始化NewLife.CommonEntity.Setting数据
11:34:07.859 8 W - 初始化Bioinfo.Entites.News数据
11:34:07.920 8 W - 初始化Bioinfo.Entites.Category数据
11:34:07.925 8 W - 更新实体缓存（第1次）：Bioinfo.Entites.Category 原因：第一次 Category.FindById(Int32 id)<-News.get_Category()
11:34:07.929 8 W - 完成更新缓存（第1次）：Bioinfo.Entites.Category
11:36:06.570 2 N - 清空单对象缓存：NewLife.CommonEntity.Setting

#Software: .
#ProcessID: 5932
#AppDomain: c5a66244-1-129931905725011800
#BaseDirectory: C:\DevelopMent\Bioinfo\BioinfoWebSite\
#Date: 2012-09-27
#Fields: Time ThreadID IsPoolThread ThreadName Message
11:36:13.178 4 W - NewLife.Core v3.8.2012.0803 Build 2012-09-25 12:03:50
11:36:13.182 4 W - 为NewLife.CommonEntity.IManageProvider配置注册YWSManageProvider，标识Identity=，优先级Priority=5！
11:36:14.586 8 W - NewLife.XCode v8.8.2012.0828 Build 2012-09-25 12:01:34
11:36:14.588 8 W - 一级缓存：关闭缓存
11:36:14.619 8 W - 更新实体缓存（第1次）：NewLife.YWS.Entities.Admin 原因：第一次 Administrator<>.FindByName(String name)<-.Login(String username,String password,Int32 hashTimes)
11:36:14.623 4 W - 更新实体缓存（第1次）：NewLife.CommonEntity.Menu 原因：第一次 Entity<>.FindWithCache(String name,Object value)<-Entity<>.EntityOperate.FindWithCache(String name,Object value)
11:36:14.810 4 W - 检查实体NewLife.CommonEntity.Menu的数据表架构，模式：CheckTableWhenFirstUse
11:36:14.989 4 W - 初始化NewLife.CommonEntity.Menu数据
11:36:15.053 4 W - 开始检查连接[Common/MySql]的数据库架构……
11:36:15.134 4 W - [Common]的所有实体类（18个）：Sequence,GuidCategory,Administrator,Menu,Role,RoleMenu,Log,Area,User,Simple,SimpleTree,Setting,Statistics,UserProfile,Attachment,Category,MyRole,Admin
11:36:15.134 4 W - [Common]需要检查架构的实体类（2个）：MyRole,Admin
11:36:15.135 4 W - Common待检查表架构的实体个数：2
11:36:15.137 8 W - DropDefault(LastLogin)
11:36:15.172 8 W - 初始化NewLife.YWS.Entities.Admin数据
11:36:15.233 8 W - 完成更新缓存（第1次）：NewLife.YWS.Entities.Admin
11:36:15.294 4 W - DropDefault(LastLogin)
11:36:15.332 8 W - 清空实体缓存：NewLife.YWS.Entities.Admin 原因：修改数据后提交事务
11:36:15.345 4 W - 检查连接[Common/MySql]的数据库架构耗时00:00:00.2917578
11:36:15.351 4 W - 完成更新缓存（第1次）：NewLife.CommonEntity.Menu
11:36:15.357 8 W - 检查实体NewLife.CommonEntity.Log的数据表架构，模式：CheckTableWhenFirstUse
11:36:15.358 8 W - DropDefault(OccurTime)
11:36:15.358 8 W - AddDefault(OccurTime,)
11:36:15.358 8 W - 初始化NewLife.CommonEntity.Log数据
11:36:15.359 4 W - 更新实体缓存（第2次）：NewLife.YWS.Entities.Admin 原因：60秒过期 Administrator<>.FindByName(String name)<-.Login(String username,String password,Int32 hashTimes)
11:36:15.369 4 W - 完成更新缓存（第2次）：NewLife.YWS.Entities.Admin
11:36:15.412 4 W - 清空实体缓存：NewLife.YWS.Entities.Admin 原因：修改数据后提交事务
11:36:15.456 4 W - 更新实体缓存（第1次）：NewLife.YWS.Entities.MyRole 原因：第一次 Role<>.FindByID(Int32 id)<-
11:36:15.456 4 W - 初始化NewLife.YWS.Entities.MyRole数据
11:36:15.470 4 W - 检查实体NewLife.CommonEntity.RoleMenu的数据表架构，模式：CheckTableWhenFirstUse
11:36:15.480 4 W - 初始化NewLife.CommonEntity.RoleMenu数据
11:36:15.481 4 W - 如果某一个菜单对应的RoleMenu（角色菜单对应关系）为空或者只有一个，则授权第一个角色访问所有菜单！
11:36:15.506 4 W - 更新实体缓存（第1次）：NewLife.CommonEntity.RoleMenu 原因：第一次 RoleMenu<>.CheckNonePerssion(Int32 menuID)<-Role<,,>.InitData()
11:36:15.515 4 W - 完成更新缓存（第1次）：NewLife.CommonEntity.RoleMenu
11:36:15.532 4 W - 完成更新缓存（第1次）：NewLife.YWS.Entities.MyRole
11:36:18.289 4 W - 初始化Bioinfo.Entites.News数据
11:36:18.349 4 W - 初始化Bioinfo.Entites.Category数据
11:36:18.353 4 W - 更新实体缓存（第1次）：Bioinfo.Entites.Category 原因：第一次 Category.FindById(Int32 id)<-News.get_Category()
11:36:18.358 4 W - 完成更新缓存（第1次）：Bioinfo.Entites.Category
11:36:53.038 12 W - 检查实体NewLife.CommonEntity.Setting的数据表架构，模式：CheckTableWhenFirstUse
11:36:53.100 12 W - 初始化NewLife.CommonEntity.Setting数据
11:36:54.566 10 W - 更新实体缓存（第3次）：NewLife.YWS.Entities.Admin 原因：60秒过期 Administrator<>.FindByName(String name)<-.Login(String username,String password,Int32 hashTimes)
11:36:54.566 10 W - 完成更新缓存（第3次）：NewLife.YWS.Entities.Admin
11:36:54.598 10 W - 清空实体缓存：NewLife.YWS.Entities.Admin 原因：修改数据后提交事务
11:40:17.178 4 W - 更新实体缓存（第4次）：NewLife.YWS.Entities.Admin 原因：60秒过期 Administrator<>.FindByName(String name)<-.Login(String username,String password,Int32 hashTimes)
11:40:17.178 4 W - 完成更新缓存（第4次）：NewLife.YWS.Entities.Admin
11:40:17.209 4 W - 清空实体缓存：NewLife.YWS.Entities.Admin 原因：修改数据后提交事务
11:40:17.241 4 W - 更新实体缓存（第2次）：NewLife.YWS.Entities.MyRole 原因：60秒过期 Role<>.FindByID(Int32 id)<-
11:40:17.241 4 W - 完成更新缓存（第2次）：NewLife.YWS.Entities.MyRole
11:40:17.241 4 W - 更新实体缓存（第2次）：NewLife.CommonEntity.RoleMenu 原因：60秒过期 RoleMenu<>.FindAllByRoleID(Int32 roleID)<-
11:40:17.241 4 W - 完成更新缓存（第2次）：NewLife.CommonEntity.RoleMenu
11:40:17.241 4 W - 更新实体缓存（第2次）：NewLife.CommonEntity.Menu 原因：60秒过期 Menu<>.FindByID(Int32 id)<-
11:40:17.256 4 W - 完成更新缓存（第2次）：NewLife.CommonEntity.Menu
11:40:22.611 4 W - 更新实体缓存（第2次）：Bioinfo.Entites.Category 原因：60秒过期 Category.FindById(Int32 id)<-News.get_Category()
11:40:22.611 4 W - 完成更新缓存（第2次）：Bioinfo.Entites.Category
11:40:55.169 8 W - 更新实体缓存（第5次）：NewLife.YWS.Entities.Admin 原因：60秒过期 Administrator<>.FindByName(String name)<-.Login(String username,String password,Int32 hashTimes)
11:40:55.184 8 W - 完成更新缓存（第5次）：NewLife.YWS.Entities.Admin
11:40:55.200 8 W - 清空实体缓存：NewLife.YWS.Entities.Admin 原因：修改数据后提交事务
11:41:50.177 2 N - 清空单对象缓存：NewLife.CommonEntity.Setting

#Software: .
#ProcessID: 3856
#AppDomain: c5a66244-1-129931909143270554
#BaseDirectory: C:\DevelopMent\Bioinfo\BioinfoWebSite\
#Date: 2012-09-27
#Fields: Time ThreadID IsPoolThread ThreadName Message
11:41:54.997 4 W - NewLife.Core v3.8.2012.0803 Build 2012-09-25 12:03:50
11:41:54.997 4 W - 为NewLife.CommonEntity.IManageProvider配置注册YWSManageProvider，标识Identity=，优先级Priority=5！
11:41:56.620 4 W - NewLife.XCode v8.8.2012.0828 Build 2012-09-25 12:01:34
11:41:56.620 4 W - 检查实体NewLife.CommonEntity.Setting的数据表架构，模式：CheckTableWhenFirstUse
11:41:56.745 4 W - 初始化NewLife.CommonEntity.Setting数据
11:41:56.760 4 W - 开始检查连接[Common/MySql]的数据库架构……
11:41:56.838 4 W - [Common]的所有实体类（18个）：Sequence,GuidCategory,Administrator,Menu,Role,RoleMenu,Log,Area,User,Simple,SimpleTree,Setting,Statistics,UserProfile,Attachment,Category,MyRole,Admin
11:41:56.838 4 W - [Common]需要检查架构的实体类（2个）：MyRole,Admin
11:41:56.838 4 W - Common待检查表架构的实体个数：2
11:41:56.916 8 Y - DropDefault(LastLogin)
11:41:57.041 4 W - DropDefault(LastLogin)
11:41:57.103 4 W - 检查连接[Common/MySql]的数据库架构耗时00:00:00.3545795
11:41:57.103 8 Y - 初始化NewLife.YWS.Entities.Admin数据
11:41:57.119 4 W - 一级缓存：关闭缓存
11:41:58.336 8 W - 更新实体缓存（第1次）：NewLife.YWS.Entities.Admin 原因：第一次 Administrator<>.FindByName(String name)<-.Login(String username,String password,Int32 hashTimes)
11:41:58.351 8 W - 完成更新缓存（第1次）：NewLife.YWS.Entities.Admin
11:41:58.367 8 W - 清空实体缓存：NewLife.YWS.Entities.Admin 原因：修改数据后提交事务
11:41:58.403 8 W - 检查实体NewLife.CommonEntity.Log的数据表架构，模式：CheckTableWhenFirstUse
11:41:58.403 8 W - DropDefault(OccurTime)
11:41:58.403 8 W - AddDefault(OccurTime,)
11:41:58.403 8 W - 初始化NewLife.CommonEntity.Log数据
11:41:58.453 8 W - 更新实体缓存（第1次）：NewLife.YWS.Entities.MyRole 原因：第一次 Role<>.FindByID(Int32 id)<-
11:41:58.453 8 W - 初始化NewLife.YWS.Entities.MyRole数据
11:41:58.463 8 W - 检查实体NewLife.CommonEntity.RoleMenu的数据表架构，模式：CheckTableWhenFirstUse
11:41:58.463 8 W - 初始化NewLife.CommonEntity.RoleMenu数据
11:41:58.463 8 W - 如果某一个菜单对应的RoleMenu（角色菜单对应关系）为空或者只有一个，则授权第一个角色访问所有菜单！
11:41:58.483 8 W - 更新实体缓存（第1次）：NewLife.CommonEntity.Menu 原因：第一次 EntityTree<,>.FindAllByParent(EntityTree<,>.TKey parentKey)<-.FindChilds()
11:41:58.483 8 W - 检查实体NewLife.CommonEntity.Menu的数据表架构，模式：CheckTableWhenFirstUse
11:41:58.514 8 W - 初始化NewLife.CommonEntity.Menu数据
11:41:58.514 8 W - 完成更新缓存（第1次）：NewLife.CommonEntity.Menu
11:41:58.529 8 W - 更新实体缓存（第1次）：NewLife.CommonEntity.RoleMenu 原因：第一次 RoleMenu<>.CheckNonePerssion(Int32 menuID)<-Role<,,>.InitData()
11:41:58.529 8 W - 完成更新缓存（第1次）：NewLife.CommonEntity.RoleMenu
11:41:58.545 8 W - 完成更新缓存（第1次）：NewLife.YWS.Entities.MyRole
11:42:01.123 4 W - 初始化Bioinfo.Entites.News数据
11:42:01.154 4 W - 初始化Bioinfo.Entites.Category数据
11:42:01.154 4 W - 更新实体缓存（第1次）：Bioinfo.Entites.Category 原因：第一次 Category.FindById(Int32 id)<-News.get_Category()
11:42:01.170 4 W - 完成更新缓存（第1次）：Bioinfo.Entites.Category
11:43:04.383 2 N - 清空单对象缓存：NewLife.CommonEntity.Setting

#Software: .
#ProcessID: 4760
#AppDomain: c5a66244-1-129931917826414464
#BaseDirectory: C:\DevelopMent\Bioinfo\BioinfoWebSite\
#Date: 2012-09-27
#Fields: Time ThreadID IsPoolThread ThreadName Message
11:56:23.265 4 W - NewLife.Core v3.8.2012.0803 Build 2012-09-25 12:03:50
11:56:23.296 4 W - 为NewLife.CommonEntity.IManageProvider配置注册YWSManageProvider，标识Identity=，优先级Priority=5！
11:56:24.856 4 W - NewLife.XCode v8.8.2012.0828 Build 2012-09-25 12:01:34
11:56:24.856 4 W - 检查实体NewLife.CommonEntity.Setting的数据表架构，模式：CheckTableWhenFirstUse
11:56:24.981 4 W - 初始化NewLife.CommonEntity.Setting数据
11:56:24.997 4 W - 开始检查连接[Common/MySql]的数据库架构……
11:56:25.075 4 W - [Common]的所有实体类（18个）：Sequence,GuidCategory,Administrator,Menu,Role,RoleMenu,Log,Area,User,Simple,SimpleTree,Setting,Statistics,UserProfile,Attachment,Category,MyRole,Admin
11:56:25.075 4 W - [Common]需要检查架构的实体类（2个）：MyRole,Admin
11:56:25.075 4 W - Common待检查表架构的实体个数：2
11:56:25.121 8 Y - DropDefault(LastLogin)
11:56:25.246 4 W - DropDefault(LastLogin)
11:56:25.309 4 W - 检查连接[Common/MySql]的数据库架构耗时00:00:00.3200980
11:56:25.309 8 Y - 初始化NewLife.YWS.Entities.Admin数据
11:56:25.309 4 W - 一级缓存：关闭缓存
11:56:26.931 11 W - 更新实体缓存（第1次）：NewLife.YWS.Entities.Admin 原因：第一次 Administrator<>.FindByName(String name)<-.Login(String username,String password,Int32 hashTimes)
11:56:26.931 11 W - 完成更新缓存（第1次）：NewLife.YWS.Entities.Admin
11:56:26.962 11 W - 清空实体缓存：NewLife.YWS.Entities.Admin 原因：修改数据后提交事务
11:56:26.988 11 W - 检查实体NewLife.CommonEntity.Log的数据表架构，模式：CheckTableWhenFirstUse
11:56:27.048 11 W - DropDefault(OccurTime)
11:56:27.048 11 W - AddDefault(OccurTime,)
11:56:27.048 11 W - 初始化NewLife.CommonEntity.Log数据
11:56:27.099 4 W - 更新实体缓存（第1次）：NewLife.YWS.Entities.MyRole 原因：第一次 Role<>.FindByID(Int32 id)<-
11:56:27.099 4 W - 初始化NewLife.YWS.Entities.MyRole数据
11:56:27.115 4 W - 检查实体NewLife.CommonEntity.RoleMenu的数据表架构，模式：CheckTableWhenFirstUse
11:56:27.115 4 W - 初始化NewLife.CommonEntity.RoleMenu数据
11:56:27.115 4 W - 如果某一个菜单对应的RoleMenu（角色菜单对应关系）为空或者只有一个，则授权第一个角色访问所有菜单！
11:56:27.130 4 W - 更新实体缓存（第1次）：NewLife.CommonEntity.Menu 原因：第一次 EntityTree<,>.FindAllByParent(EntityTree<,>.TKey parentKey)<-.FindChilds()
11:56:27.130 4 W - 检查实体NewLife.CommonEntity.Menu的数据表架构，模式：CheckTableWhenFirstUse
11:56:27.161 4 W - 初始化NewLife.CommonEntity.Menu数据
11:56:27.177 4 W - 完成更新缓存（第1次）：NewLife.CommonEntity.Menu
11:56:27.193 4 W - 更新实体缓存（第1次）：NewLife.CommonEntity.RoleMenu 原因：第一次 RoleMenu<>.CheckNonePerssion(Int32 menuID)<-Role<,,>.InitData()
11:56:27.193 4 W - 完成更新缓存（第1次）：NewLife.CommonEntity.RoleMenu
11:56:27.208 4 W - 完成更新缓存（第1次）：NewLife.YWS.Entities.MyRole
11:56:31.039 11 W - 初始化Bioinfo.Entites.News数据
11:56:31.070 11 W - 初始化Bioinfo.Entites.Category数据
11:56:31.070 11 W - 更新实体缓存（第1次）：Bioinfo.Entites.Category 原因：第一次 Category.FindById(Int32 id)<-News.get_Category()
11:56:31.070 11 W - 完成更新缓存（第1次）：Bioinfo.Entites.Category
11:58:30.008 13 W - 更新实体缓存（第2次）：NewLife.YWS.Entities.Admin 原因：60秒过期 Administrator<>.FindByName(String name)<-.Login(String username,String password,Int32 hashTimes)
11:58:30.008 13 W - 完成更新缓存（第2次）：NewLife.YWS.Entities.Admin
11:58:30.040 13 W - 清空实体缓存：NewLife.YWS.Entities.Admin 原因：修改数据后提交事务
11:58:30.076 7 W - 更新实体缓存（第2次）：NewLife.YWS.Entities.MyRole 原因：60秒过期 Role<>.FindByID(Int32 id)<-
11:58:30.079 7 W - 完成更新缓存（第2次）：NewLife.YWS.Entities.MyRole
11:58:30.080 7 W - 更新实体缓存（第2次）：NewLife.CommonEntity.RoleMenu 原因：60秒过期 RoleMenu<>.FindAllByRoleID(Int32 roleID)<-
11:58:30.081 7 W - 完成更新缓存（第2次）：NewLife.CommonEntity.RoleMenu
11:58:30.081 7 W - 更新实体缓存（第2次）：NewLife.CommonEntity.Menu 原因：60秒过期 Menu<>.FindByID(Int32 id)<-
11:58:30.081 7 W - 完成更新缓存（第2次）：NewLife.CommonEntity.Menu
11:58:32.962 14 W - 更新实体缓存（第2次）：Bioinfo.Entites.Category 原因：60秒过期 Category.FindById(Int32 id)<-News.get_Category()
11:58:32.962 14 W - 完成更新缓存（第2次）：Bioinfo.Entites.Category
11:59:07.890 7 W - 初始化Bioinfo.Entites.Setting数据
11:59:17.664 14 W - 初始化Bioinfo.Entites.Messages数据
11:59:25.927 2 N - 清空单对象缓存：NewLife.CommonEntity.Setting

#Software: .
#ProcessID: 4896
#AppDomain: c5a66244-1-129931919863083065
#BaseDirectory: C:\DevelopMent\Bioinfo\BioinfoWebSite\
#Date: 2012-09-27
#Fields: Time ThreadID IsPoolThread ThreadName Message
11:59:46.932 4 W - NewLife.Core v3.8.2012.0803 Build 2012-09-25 12:03:50
11:59:46.947 4 W - 为NewLife.CommonEntity.IManageProvider配置注册YWSManageProvider，标识Identity=，优先级Priority=5！
11:59:48.539 4 W - NewLife.XCode v8.8.2012.0828 Build 2012-09-25 12:01:34
11:59:48.539 4 W - 检查实体NewLife.CommonEntity.Setting的数据表架构，模式：CheckTableWhenFirstUse
11:59:48.663 4 W - 初始化NewLife.CommonEntity.Setting数据
11:59:48.679 4 W - 开始检查连接[Common/MySql]的数据库架构……
11:59:48.757 4 W - [Common]的所有实体类（18个）：Sequence,GuidCategory,Administrator,Menu,Role,RoleMenu,Log,Area,User,Simple,SimpleTree,Setting,Statistics,UserProfile,Attachment,Category,MyRole,Admin
11:59:48.757 4 W - [Common]需要检查架构的实体类（2个）：MyRole,Admin
11:59:48.757 4 W - Common待检查表架构的实体个数：2
11:59:48.835 8 Y - DropDefault(LastLogin)
11:59:48.975 4 W - DropDefault(LastLogin)
11:59:49.038 4 W - 检查连接[Common/MySql]的数据库架构耗时00:00:00.3732798
11:59:49.038 8 Y - 初始化NewLife.YWS.Entities.Admin数据
11:59:49.053 4 W - 一级缓存：关闭缓存
11:59:51.066 8 W - 更新实体缓存（第1次）：NewLife.YWS.Entities.Admin 原因：第一次 Administrator<>.FindByName(String name)<-.Login(String username,String password,Int32 hashTimes)
11:59:51.066 8 W - 完成更新缓存（第1次）：NewLife.YWS.Entities.Admin
11:59:51.097 8 W - 清空实体缓存：NewLife.YWS.Entities.Admin 原因：修改数据后提交事务
11:59:51.137 8 W - 检查实体NewLife.CommonEntity.Log的数据表架构，模式：CheckTableWhenFirstUse
11:59:51.138 8 W - DropDefault(OccurTime)
11:59:51.139 8 W - AddDefault(OccurTime,)
11:59:51.139 8 W - 初始化NewLife.CommonEntity.Log数据
11:59:51.193 11 W - 更新实体缓存（第1次）：NewLife.YWS.Entities.MyRole 原因：第一次 Role<>.FindByID(Int32 id)<-
11:59:51.193 11 W - 初始化NewLife.YWS.Entities.MyRole数据
11:59:51.213 11 W - 检查实体NewLife.CommonEntity.RoleMenu的数据表架构，模式：CheckTableWhenFirstUse
11:59:51.275 11 W - 初始化NewLife.CommonEntity.RoleMenu数据
11:59:51.275 11 W - 如果某一个菜单对应的RoleMenu（角色菜单对应关系）为空或者只有一个，则授权第一个角色访问所有菜单！
11:59:51.291 11 W - 更新实体缓存（第1次）：NewLife.CommonEntity.Menu 原因：第一次 EntityTree<,>.FindAllByParent(EntityTree<,>.TKey parentKey)<-.FindChilds()
11:59:51.291 11 W - 检查实体NewLife.CommonEntity.Menu的数据表架构，模式：CheckTableWhenFirstUse
11:59:51.322 11 W - 初始化NewLife.CommonEntity.Menu数据
11:59:51.337 11 W - 完成更新缓存（第1次）：NewLife.CommonEntity.Menu
11:59:51.353 11 W - 更新实体缓存（第1次）：NewLife.CommonEntity.RoleMenu 原因：第一次 RoleMenu<>.CheckNonePerssion(Int32 menuID)<-Role<,,>.InitData()
11:59:51.353 11 W - 完成更新缓存（第1次）：NewLife.CommonEntity.RoleMenu
11:59:51.369 11 W - 完成更新缓存（第1次）：NewLife.YWS.Entities.MyRole
12:01:54.674 11 W - 更新实体缓存（第2次）：NewLife.CommonEntity.Menu 原因：60秒过期 Menu<>.GetCurrentMenu()<-.get_Current()
12:01:54.684 11 W - 完成更新缓存（第2次）：NewLife.CommonEntity.Menu
12:01:54.801 11 W - 初始化Bioinfo.Entites.News数据
12:01:54.832 11 W - 初始化Bioinfo.Entites.Category数据
12:01:54.832 11 W - 更新实体缓存（第1次）：Bioinfo.Entites.Category 原因：第一次 Category.FindById(Int32 id)<-News.get_Category()
12:01:54.832 11 W - 完成更新缓存（第1次）：Bioinfo.Entites.Category
12:02:25.115 10 W - 更新实体缓存（第2次）：NewLife.YWS.Entities.MyRole 原因：60秒过期 Role<>.FindByID(Int32 id)<-
12:02:25.118 10 W - 完成更新缓存（第2次）：NewLife.YWS.Entities.MyRole
12:02:33.049 11 W - 异步更新实体缓存（第1次）：NewLife.CommonEntity.Log 原因：600秒过期
12:02:33.066 13 Y - 完成更新缓存（第1次）：NewLife.CommonEntity.Log
12:04:05.233 2 N - 清空单对象缓存：NewLife.CommonEntity.Setting

#Software: .
#ProcessID: 5856
#AppDomain: c5a66244-1-129931925995883105
#BaseDirectory: C:\DevelopMent\Bioinfo\BioinfoWebSite\
#Date: 2012-09-27
#Fields: Time ThreadID IsPoolThread ThreadName Message
12:10:00.212 4 W - NewLife.Core v3.8.2012.0803 Build 2012-09-25 12:03:50
12:10:00.212 4 W - 为NewLife.CommonEntity.IManageProvider配置注册YWSManageProvider，标识Identity=，优先级Priority=5！
12:10:01.803 4 W - NewLife.XCode v8.8.2012.0828 Build 2012-09-25 12:01:34
12:10:01.803 4 W - 检查实体NewLife.CommonEntity.Setting的数据表架构，模式：CheckTableWhenFirstUse
12:10:01.928 4 W - 初始化NewLife.CommonEntity.Setting数据
12:10:01.943 4 W - 开始检查连接[Common/MySql]的数据库架构……
12:10:02.021 4 W - [Common]的所有实体类（18个）：Sequence,GuidCategory,Administrator,Menu,Role,RoleMenu,Log,Area,User,Simple,SimpleTree,Setting,Statistics,UserProfile,Attachment,Category,MyRole,Admin
12:10:02.021 4 W - [Common]需要检查架构的实体类（2个）：MyRole,Admin
12:10:02.021 4 W - Common待检查表架构的实体个数：2
12:10:02.068 8 Y - DropDefault(LastLogin)
12:10:02.209 4 W - DropDefault(LastLogin)
12:10:02.271 4 W - 检查连接[Common/MySql]的数据库架构耗时00:00:00.3314837
12:10:02.271 8 Y - 初始化NewLife.YWS.Entities.Admin数据
12:10:02.271 4 W - 一级缓存：关闭缓存
12:10:04.065 11 W - 更新实体缓存（第1次）：NewLife.YWS.Entities.Admin 原因：第一次 Administrator<>.FindByName(String name)<-.Login(String username,String password,Int32 hashTimes)
12:10:04.081 11 W - 完成更新缓存（第1次）：NewLife.YWS.Entities.Admin
12:10:04.096 11 W - 清空实体缓存：NewLife.YWS.Entities.Admin 原因：修改数据后提交事务
12:10:04.132 11 W - 检查实体NewLife.CommonEntity.Log的数据表架构，模式：CheckTableWhenFirstUse
12:10:04.202 11 W - DropDefault(OccurTime)
12:10:04.202 11 W - AddDefault(OccurTime,)
12:10:04.202 11 W - 初始化NewLife.CommonEntity.Log数据
12:10:04.237 8 W - 更新实体缓存（第1次）：NewLife.YWS.Entities.MyRole 原因：第一次 Role<>.FindByID(Int32 id)<-
12:10:04.237 8 W - 初始化NewLife.YWS.Entities.MyRole数据
12:10:04.253 8 W - 检查实体NewLife.CommonEntity.RoleMenu的数据表架构，模式：CheckTableWhenFirstUse
12:10:04.253 8 W - 初始化NewLife.CommonEntity.RoleMenu数据
12:10:04.253 8 W - 如果某一个菜单对应的RoleMenu（角色菜单对应关系）为空或者只有一个，则授权第一个角色访问所有菜单！
12:10:04.269 8 W - 更新实体缓存（第1次）：NewLife.CommonEntity.Menu 原因：第一次 EntityTree<,>.FindAllByParent(EntityTree<,>.TKey parentKey)<-.FindChilds()
12:10:04.269 8 W - 检查实体NewLife.CommonEntity.Menu的数据表架构，模式：CheckTableWhenFirstUse
12:10:04.315 8 W - 初始化NewLife.CommonEntity.Menu数据
12:10:04.315 8 W - 完成更新缓存（第1次）：NewLife.CommonEntity.Menu
12:10:04.331 8 W - 更新实体缓存（第1次）：NewLife.CommonEntity.RoleMenu 原因：第一次 RoleMenu<>.CheckNonePerssion(Int32 menuID)<-Role<,,>.InitData()
12:10:04.331 8 W - 完成更新缓存（第1次）：NewLife.CommonEntity.RoleMenu
12:10:04.347 8 W - 完成更新缓存（第1次）：NewLife.YWS.Entities.MyRole
12:10:07.090 11 W - 初始化Bioinfo.Entites.News数据
12:10:07.120 11 W - 初始化Bioinfo.Entites.Category数据
12:10:07.130 11 W - 更新实体缓存（第1次）：Bioinfo.Entites.Category 原因：第一次 Category.FindById(Int32 id)<-News.get_Category()
12:10:07.130 11 W - 完成更新缓存（第1次）：Bioinfo.Entites.Category
12:10:19.399 12 W - 异步更新实体缓存（第1次）：NewLife.CommonEntity.Log 原因：600秒过期
12:10:19.415 4 Y - 完成更新缓存（第1次）：NewLife.CommonEntity.Log
12:23:04.156 2 N - 清空单对象缓存：NewLife.CommonEntity.Setting

#Software: .
#ProcessID: 5188
#AppDomain: c5a66244-1-129931936981308449
#BaseDirectory: C:\DevelopMent\Bioinfo\BioinfoWebSite\
#Date: 2012-09-27
#Fields: Time ThreadID IsPoolThread ThreadName Message
12:28:20.928 4 W - NewLife.Core v3.8.2012.0803 Build 2012-09-25 12:03:50
12:28:20.932 4 W - 为NewLife.CommonEntity.IManageProvider配置注册YWSManageProvider，标识Identity=，优先级Priority=5！
12:28:21.911 4 W - NewLife.XCode v8.8.2012.0828 Build 2012-09-25 12:01:34
12:28:21.914 4 W - 一级缓存：关闭缓存
12:28:21.952 4 W - 更新实体缓存（第1次）：NewLife.YWS.Entities.Admin 原因：第一次 Administrator<>.FindByName(String name)<-.Login(String username,String password,Int32 hashTimes)
12:28:22.439 4 W - DropDefault(LastLogin)
12:28:22.475 4 W - 初始化NewLife.YWS.Entities.Admin数据
12:28:22.489 4 W - 开始检查连接[Common/MySql]的数据库架构……
12:28:22.581 4 W - [Common]的所有实体类（22个）：Category,News,Messages,Setting,Sequence,GuidCategory,Administrator,Menu,Role,RoleMenu,Log,Area,User,Simple,SimpleTree,Setting,Statistics,UserProfile,Attachment,Category,MyRole,Admin
12:28:22.581 4 W - [Common]需要检查架构的实体类（6个）：Category,News,Messages,Setting,MyRole,Admin
12:28:22.582 4 W - Common待检查表架构的实体个数：6
12:28:22.732 4 W - DropDefault(LastLogin)
12:28:22.765 4 W - 检查连接[Common/MySql]的数据库架构耗时00:00:00.2758739
12:28:22.790 4 W - 完成更新缓存（第1次）：NewLife.YWS.Entities.Admin
12:28:22.848 4 W - 清空实体缓存：NewLife.YWS.Entities.Admin 原因：修改数据后提交事务
12:28:22.873 4 W - 检查实体NewLife.CommonEntity.Log的数据表架构，模式：CheckTableWhenFirstUse
12:28:22.874 4 W - DropDefault(OccurTime)
12:28:22.874 4 W - AddDefault(OccurTime,)
12:28:22.874 4 W - 初始化NewLife.CommonEntity.Log数据
12:28:22.921 4 W - 更新实体缓存（第1次）：NewLife.YWS.Entities.MyRole 原因：第一次 Role<>.FindByID(Int32 id)<-
12:28:22.921 4 W - 初始化NewLife.YWS.Entities.MyRole数据
12:28:22.934 4 W - 检查实体NewLife.CommonEntity.RoleMenu的数据表架构，模式：CheckTableWhenFirstUse
12:28:22.937 4 W - 初始化NewLife.CommonEntity.RoleMenu数据
12:28:22.938 4 W - 如果某一个菜单对应的RoleMenu（角色菜单对应关系）为空或者只有一个，则授权第一个角色访问所有菜单！
12:28:22.952 4 W - 更新实体缓存（第1次）：NewLife.CommonEntity.Menu 原因：第一次 EntityTree<,>.FindAllByParent(EntityTree<,>.TKey parentKey)<-.FindChilds()
12:28:22.953 4 W - 检查实体NewLife.CommonEntity.Menu的数据表架构，模式：CheckTableWhenFirstUse
12:28:22.991 4 W - 初始化NewLife.CommonEntity.Menu数据
12:28:23.000 4 W - 完成更新缓存（第1次）：NewLife.CommonEntity.Menu
12:28:23.013 4 W - 更新实体缓存（第1次）：NewLife.CommonEntity.RoleMenu 原因：第一次 RoleMenu<>.CheckNonePerssion(Int32 menuID)<-Role<,,>.InitData()
12:28:23.019 4 W - 完成更新缓存（第1次）：NewLife.CommonEntity.RoleMenu
12:28:23.032 4 W - 完成更新缓存（第1次）：NewLife.YWS.Entities.MyRole
12:28:23.069 4 W - 检查实体NewLife.CommonEntity.Setting的数据表架构，模式：CheckTableWhenFirstUse
12:28:23.070 4 W - 初始化NewLife.CommonEntity.Setting数据
12:28:26.535 4 W - 初始化Bioinfo.Entites.News数据
12:28:26.591 4 W - 初始化Bioinfo.Entites.Category数据
12:28:26.598 4 W - 更新实体缓存（第1次）：Bioinfo.Entites.Category 原因：第一次 Category.FindById(Int32 id)<-News.get_Category()
12:28:26.602 4 W - 完成更新缓存（第1次）：Bioinfo.Entites.Category
12:29:35.120 4 W - 更新实体缓存（第2次）：NewLife.CommonEntity.Menu 原因：60秒过期 Menu<>.GetCurrentMenu()<-.get_Current()
12:29:35.124 4 W - 完成更新缓存（第2次）：NewLife.CommonEntity.Menu
12:30:38.971 2 N - 清空单对象缓存：NewLife.CommonEntity.Setting

#Software: .
#ProcessID: 5156
#AppDomain: c5a66244-1-129931938618655929
#BaseDirectory: C:\DevelopMent\Bioinfo\BioinfoWebSite\
#Date: 2012-09-27
#Fields: Time ThreadID IsPoolThread ThreadName Message
12:31:02.645 4 W - NewLife.Core v3.8.2012.0803 Build 2012-09-25 12:03:50
12:31:02.676 4 W - 为NewLife.CommonEntity.IManageProvider配置注册YWSManageProvider，标识Identity=，优先级Priority=5！
12:31:04.299 4 W - NewLife.XCode v8.8.2012.0828 Build 2012-09-25 12:01:34
12:31:04.299 4 W - 检查实体NewLife.CommonEntity.Setting的数据表架构，模式：CheckTableWhenFirstUse
12:31:04.439 4 W - 初始化NewLife.CommonEntity.Setting数据
12:31:04.439 4 W - 开始检查连接[Common/MySql]的数据库架构……
12:31:04.533 4 W - [Common]的所有实体类（18个）：Sequence,GuidCategory,Administrator,Menu,Role,RoleMenu,Log,Area,User,Simple,SimpleTree,Setting,Statistics,UserProfile,Attachment,Category,MyRole,Admin
12:31:04.533 4 W - [Common]需要检查架构的实体类（2个）：MyRole,Admin
12:31:04.533 4 W - Common待检查表架构的实体个数：2
12:31:04.595 8 Y - DropDefault(LastLogin)
12:31:04.767 4 W - DropDefault(LastLogin)
12:31:04.829 4 W - 检查连接[Common/MySql]的数据库架构耗时00:00:00.3930880
12:31:04.829 8 Y - 初始化NewLife.YWS.Entities.Admin数据
12:31:04.829 4 W - 一级缓存：关闭缓存
12:31:06.264 4 W - 更新实体缓存（第1次）：NewLife.YWS.Entities.Admin 原因：第一次 Administrator<>.FindByName(String name)<-.Login(String username,String password,Int32 hashTimes)
12:31:06.280 4 W - 完成更新缓存（第1次）：NewLife.YWS.Entities.Admin
12:31:06.296 4 W - 清空实体缓存：NewLife.YWS.Entities.Admin 原因：修改数据后提交事务
12:31:06.331 4 W - 检查实体NewLife.CommonEntity.Log的数据表架构，模式：CheckTableWhenFirstUse
12:31:06.332 4 W - DropDefault(OccurTime)
12:31:06.332 4 W - AddDefault(OccurTime,)
12:31:06.332 4 W - 初始化NewLife.CommonEntity.Log数据
12:31:06.377 4 W - 更新实体缓存（第1次）：NewLife.YWS.Entities.MyRole 原因：第一次 Role<>.FindByID(Int32 id)<-
12:31:06.387 4 W - 初始化NewLife.YWS.Entities.MyRole数据
12:31:06.397 4 W - 检查实体NewLife.CommonEntity.RoleMenu的数据表架构，模式：CheckTableWhenFirstUse
12:31:06.397 4 W - 初始化NewLife.CommonEntity.RoleMenu数据
12:31:06.397 4 W - 如果某一个菜单对应的RoleMenu（角色菜单对应关系）为空或者只有一个，则授权第一个角色访问所有菜单！
12:31:06.407 4 W - 更新实体缓存（第1次）：NewLife.CommonEntity.Menu 原因：第一次 EntityTree<,>.FindAllByParent(EntityTree<,>.TKey parentKey)<-.FindChilds()
12:31:06.417 4 W - 检查实体NewLife.CommonEntity.Menu的数据表架构，模式：CheckTableWhenFirstUse
12:31:06.464 4 W - 初始化NewLife.CommonEntity.Menu数据
12:31:06.464 4 W - 完成更新缓存（第1次）：NewLife.CommonEntity.Menu
12:31:06.479 4 W - 更新实体缓存（第1次）：NewLife.CommonEntity.RoleMenu 原因：第一次 RoleMenu<>.CheckNonePerssion(Int32 menuID)<-Role<,,>.InitData()
12:31:06.479 4 W - 完成更新缓存（第1次）：NewLife.CommonEntity.RoleMenu
12:31:06.495 4 W - 完成更新缓存（第1次）：NewLife.YWS.Entities.MyRole
12:31:08.510 8 W - 初始化Bioinfo.Entites.News数据
12:31:08.560 8 W - 初始化Bioinfo.Entites.Category数据
12:31:08.560 8 W - 更新实体缓存（第1次）：Bioinfo.Entites.Category 原因：第一次 Category.FindById(Int32 id)<-News.get_Category()
12:31:08.560 8 W - 完成更新缓存（第1次）：Bioinfo.Entites.Category
12:32:43.102 2 N - 清空单对象缓存：NewLife.CommonEntity.Setting
12:32:43.102 2 N - 错误的连接字符串：Server=192.168.1.47;Database=Bioinfodb2;Uid=root;Pwd=yrshabc123
12:32:43.102 2 N - XCode.Exceptions.XDbSessionException: Unable to connect to any of the specified MySQL hosts.[DB:Common/MySql] ---> MySql.Data.MySqlClient.MySqlException: Unable to connect to any of the specified MySQL hosts. ---> System.ApplicationException: 应用程序中的错误。
   在 System.Threading.ThreadPool.RegisterWaitForSingleObjectNative(WaitHandle waitHandle, Object state, UInt32 timeOutInterval, Boolean executeOnlyOnce, RegisteredWaitHandle registeredWaitHandle, StackCrawlMark& stackMark, Boolean compressStack)
   在 System.Threading.ThreadPool.RegisterWaitForSingleObject(WaitHandle waitObject, WaitOrTimerCallback callBack, Object state, UInt32 millisecondsTimeOutInterval, Boolean executeOnlyOnce, StackCrawlMark& stackMark, Boolean compressStack)
   在 System.Threading.ThreadPool.UnsafeRegisterWaitForSingleObject(WaitHandle waitObject, WaitOrTimerCallback callBack, Object state, Int32 millisecondsTimeOutInterval, Boolean executeOnlyOnce)
   在 System.Net.Sockets.Socket.SetAsyncEventSelect(AsyncEventBits blockEventBits)
   在 System.Net.Sockets.Socket.DoBeginConnect(EndPoint endPointSnapshot, SocketAddress socketAddress, LazyAsyncResult asyncResult)
   在 System.Net.Sockets.Socket.BeginConnect(EndPoint remoteEP, AsyncCallback callback, Object state)
   在 MySql.Data.Common.StreamCreator.CreateSocketStream(IPAddress ip, Boolean unix)
   在 MySql.Data.Common.StreamCreator.GetStream(UInt32 timeout)
   在 MySql.Data.MySqlClient.NativeDriver.Open()
   --- 内部异常堆栈跟踪的结尾 ---
   在 MySql.Data.MySqlClient.NativeDriver.Open()
   在 MySql.Data.MySqlClient.Driver.Open()
   在 MySql.Data.MySqlClient.Driver.Create(MySqlConnectionStringBuilder settings)
   在 MySql.Data.MySqlClient.MySqlPool.GetPooledConnection()
   在 MySql.Data.MySqlClient.MySqlPool.TryToGetDriver()
   在 MySql.Data.MySqlClient.MySqlPool.GetConnection()
   在 MySql.Data.MySqlClient.MySqlConnection.Open()
   在 XCode.DataAccessLayer.DbSession.Open()
   在 XCode.DataAccessLayer.DbSession.BeginTransaction()
   --- 内部异常堆栈跟踪的结尾 ---
   在 XCode.DataAccessLayer.DbSession.BeginTransaction()
   在 XCode.DataAccessLayer.DAL.BeginTransaction()
   在 XCode.Entity`1.Meta.BeginTrans()
   在 XCode.Entity`1.DoAction(Func`1 func, Nullable`1 isnew)
   在 XCode.Entity`1.Update()
   在 XCode.Cache.SingleEntityCache`2.<>c__DisplayClass1c.<Clear>b__1b()
   在 XCode.Cache.CacheBase`1.InvokeFill(Func callback)

#Software: .
#ProcessID: 4808
#AppDomain: c5a66244-1-129931939741164098
#BaseDirectory: C:\DevelopMent\Bioinfo\BioinfoWebSite\
#Date: 2012-09-27
#Fields: Time ThreadID IsPoolThread ThreadName Message
12:32:54.740 4 W - NewLife.Core v3.8.2012.0803 Build 2012-09-25 12:03:50
12:32:54.771 4 W - 为NewLife.CommonEntity.IManageProvider配置注册YWSManageProvider，标识Identity=，优先级Priority=5！
12:32:56.394 4 W - NewLife.XCode v8.8.2012.0828 Build 2012-09-25 12:01:34
12:32:56.394 4 W - 检查实体NewLife.CommonEntity.Setting的数据表架构，模式：CheckTableWhenFirstUse
12:32:56.518 4 W - 初始化NewLife.CommonEntity.Setting数据
12:32:56.534 4 W - 开始检查连接[Common/MySql]的数据库架构……
12:32:56.612 4 W - [Common]的所有实体类（18个）：Sequence,GuidCategory,Administrator,Menu,Role,RoleMenu,Log,Area,User,Simple,SimpleTree,Setting,Statistics,UserProfile,Attachment,Category,MyRole,Admin
12:32:56.612 4 W - [Common]需要检查架构的实体类（2个）：MyRole,Admin
12:32:56.612 4 W - Common待检查表架构的实体个数：2
12:32:56.674 8 Y - DropDefault(LastLogin)
12:32:56.846 4 W - DropDefault(LastLogin)
12:32:56.908 4 W - 检查连接[Common/MySql]的数据库架构耗时00:00:00.3829903
12:32:56.908 8 Y - 初始化NewLife.YWS.Entities.Admin数据
12:32:56.908 4 W - 一级缓存：关闭缓存
12:32:58.593 8 W - 更新实体缓存（第1次）：NewLife.YWS.Entities.Admin 原因：第一次 Administrator<>.FindByName(String name)<-.Login(String username,String password,Int32 hashTimes)
12:32:58.593 8 W - 完成更新缓存（第1次）：NewLife.YWS.Entities.Admin
12:32:58.637 8 W - 清空实体缓存：NewLife.YWS.Entities.Admin 原因：修改数据后提交事务
12:32:58.652 8 W - 检查实体NewLife.CommonEntity.Log的数据表架构，模式：CheckTableWhenFirstUse
12:32:58.652 8 W - DropDefault(OccurTime)
12:32:58.652 8 W - AddDefault(OccurTime,)
12:32:58.652 8 W - 初始化NewLife.CommonEntity.Log数据
12:32:58.722 8 W - 更新实体缓存（第1次）：NewLife.YWS.Entities.MyRole 原因：第一次 Role<>.FindByID(Int32 id)<-
12:32:58.722 8 W - 初始化NewLife.YWS.Entities.MyRole数据
12:32:58.732 8 W - 检查实体NewLife.CommonEntity.RoleMenu的数据表架构，模式：CheckTableWhenFirstUse
12:32:58.732 8 W - 初始化NewLife.CommonEntity.RoleMenu数据
12:32:58.732 8 W - 如果某一个菜单对应的RoleMenu（角色菜单对应关系）为空或者只有一个，则授权第一个角色访问所有菜单！
12:32:58.742 8 W - 更新实体缓存（第1次）：NewLife.CommonEntity.Menu 原因：第一次 EntityTree<,>.FindAllByParent(EntityTree<,>.TKey parentKey)<-.FindChilds()
12:32:58.742 8 W - 检查实体NewLife.CommonEntity.Menu的数据表架构，模式：CheckTableWhenFirstUse
12:32:58.774 8 W - 初始化NewLife.CommonEntity.Menu数据
12:32:58.789 8 W - 完成更新缓存（第1次）：NewLife.CommonEntity.Menu
12:32:58.789 8 W - 更新实体缓存（第1次）：NewLife.CommonEntity.RoleMenu 原因：第一次 RoleMenu<>.CheckNonePerssion(Int32 menuID)<-Role<,,>.InitData()
12:32:58.805 8 W - 完成更新缓存（第1次）：NewLife.CommonEntity.RoleMenu
12:32:58.820 8 W - 完成更新缓存（第1次）：NewLife.YWS.Entities.MyRole
12:33:02.162 11 W - 初始化Bioinfo.Entites.News数据
12:33:02.193 11 W - 初始化Bioinfo.Entites.Category数据
12:33:02.193 11 W - 更新实体缓存（第1次）：Bioinfo.Entites.Category 原因：第一次 Category.FindById(Int32 id)<-News.get_Category()
12:33:02.193 11 W - 完成更新缓存（第1次）：Bioinfo.Entites.Category
12:34:07.808 4 W - 更新实体缓存（第2次）：NewLife.YWS.Entities.Admin 原因：60秒过期 Administrator<>.FindByName(String name)<-.Login(String username,String password,Int32 hashTimes)
12:34:07.808 4 W - 完成更新缓存（第2次）：NewLife.YWS.Entities.Admin
12:34:07.840 4 W - 清空实体缓存：NewLife.YWS.Entities.Admin 原因：修改数据后提交事务
12:34:07.877 7 W - 更新实体缓存（第2次）：NewLife.YWS.Entities.MyRole 原因：60秒过期 Role<>.FindByID(Int32 id)<-
12:34:07.880 7 W - 完成更新缓存（第2次）：NewLife.YWS.Entities.MyRole
12:34:07.881 7 W - 更新实体缓存（第2次）：NewLife.CommonEntity.RoleMenu 原因：60秒过期 RoleMenu<>.FindAllByRoleID(Int32 roleID)<-
12:34:07.881 7 W - 完成更新缓存（第2次）：NewLife.CommonEntity.RoleMenu
12:34:07.881 7 W - 更新实体缓存（第2次）：NewLife.CommonEntity.Menu 原因：60秒过期 Menu<>.FindByID(Int32 id)<-
12:34:07.891 7 W - 完成更新缓存（第2次）：NewLife.CommonEntity.Menu
12:34:14.130 8 W - 更新实体缓存（第2次）：Bioinfo.Entites.Category 原因：60秒过期 Category.FindById(Int32 id)<-News.get_Category()
12:34:14.130 8 W - 完成更新缓存（第2次）：Bioinfo.Entites.Category
12:40:12.009 12 W - 更新实体缓存（第3次）：NewLife.CommonEntity.Menu 原因：60秒过期 Menu<>.GetCurrentMenu()<-.get_Current()
12:40:12.026 12 W - 完成更新缓存（第3次）：NewLife.CommonEntity.Menu
12:40:12.586 8 W - 更新实体缓存（第3次）：NewLife.YWS.Entities.MyRole 原因：60秒过期 Role<>.FindByID(Int32 id)<-
12:40:12.588 8 W - 完成更新缓存（第3次）：NewLife.YWS.Entities.MyRole
12:42:30.391 13 W - 更新实体缓存（第4次）：NewLife.CommonEntity.Menu 原因：60秒过期 Menu<>.GetCurrentMenu()<-.get_Current()
12:42:30.396 13 W - 完成更新缓存（第4次）：NewLife.CommonEntity.Menu
12:42:30.402 13 W - 更新实体缓存（第4次）：NewLife.YWS.Entities.MyRole 原因：60秒过期 Entity<>.FindAllWithCache()<-RuntimeMethodHandle._InvokeMethodFast(IRuntimeMethodInfo method,Object target,Object[] arguments,SignatureStruct& sig,MethodAttributes methodAttributes,RuntimeType typeOwner)
12:42:30.405 13 W - 完成更新缓存（第4次）：NewLife.YWS.Entities.MyRole
12:44:40.841 2 N - 清空单对象缓存：NewLife.CommonEntity.Setting

#Software: .
#ProcessID: 3388
#AppDomain: c5a66244-1-129931946874085906
#BaseDirectory: C:\DevelopMent\Bioinfo\BioinfoWebSite\
#Date: 2012-09-27
#Fields: Time ThreadID IsPoolThread ThreadName Message
12:44:48.101 4 W - NewLife.Core v3.8.2012.0803 Build 2012-09-25 12:03:50
12:44:48.105 4 W - 为NewLife.CommonEntity.IManageProvider配置注册YWSManageProvider，标识Identity=，优先级Priority=5！
12:44:49.753 8 W - NewLife.XCode v8.8.2012.0828 Build 2012-09-25 12:01:34
12:44:49.753 8 W - 检查实体NewLife.CommonEntity.Setting的数据表架构，模式：CheckTableWhenFirstUse
12:44:49.881 8 W - 初始化NewLife.CommonEntity.Setting数据
12:44:49.887 8 W - 开始检查连接[Common/MySql]的数据库架构……
12:44:49.966 8 W - [Common]的所有实体类（18个）：Sequence,GuidCategory,Administrator,Menu,Role,RoleMenu,Log,Area,User,Simple,SimpleTree,Setting,Statistics,UserProfile,Attachment,Category,MyRole,Admin
12:44:49.966 8 W - [Common]需要检查架构的实体类（2个）：MyRole,Admin
12:44:49.967 8 W - Common待检查表架构的实体个数：2
12:44:50.054 4 Y - DropDefault(LastLogin)
12:44:50.211 8 W - DropDefault(LastLogin)
12:44:50.277 8 W - 检查连接[Common/MySql]的数据库架构耗时00:00:00.3895757
12:44:50.277 4 Y - 初始化NewLife.YWS.Entities.Admin数据
12:44:50.279 8 W - 一级缓存：关闭缓存
12:44:58.508 4 W - 更新实体缓存（第1次）：NewLife.YWS.Entities.Admin 原因：第一次 Administrator<>.FindByName(String name)<-.Login(String username,String password,Int32 hashTimes)
12:44:58.513 4 W - 完成更新缓存（第1次）：NewLife.YWS.Entities.Admin
12:44:58.545 4 W - 清空实体缓存：NewLife.YWS.Entities.Admin 原因：修改数据后提交事务
12:44:58.570 4 W - 检查实体NewLife.CommonEntity.Log的数据表架构，模式：CheckTableWhenFirstUse
12:44:58.571 4 W - DropDefault(OccurTime)
12:44:58.571 4 W - AddDefault(OccurTime,)
12:44:58.571 4 W - 初始化NewLife.CommonEntity.Log数据
12:44:58.631 8 W - 更新实体缓存（第1次）：NewLife.YWS.Entities.MyRole 原因：第一次 Role<>.FindByID(Int32 id)<-
12:44:58.631 8 W - 初始化NewLife.YWS.Entities.MyRole数据
12:44:58.645 8 W - 检查实体NewLife.CommonEntity.RoleMenu的数据表架构，模式：CheckTableWhenFirstUse
12:44:58.648 8 W - 初始化NewLife.CommonEntity.RoleMenu数据
12:44:58.648 8 W - 如果某一个菜单对应的RoleMenu（角色菜单对应关系）为空或者只有一个，则授权第一个角色访问所有菜单！
12:44:58.661 8 W - 更新实体缓存（第1次）：NewLife.CommonEntity.Menu 原因：第一次 EntityTree<,>.FindAllByParent(EntityTree<,>.TKey parentKey)<-.FindChilds()
12:44:58.661 8 W - 检查实体NewLife.CommonEntity.Menu的数据表架构，模式：CheckTableWhenFirstUse
12:44:58.686 8 W - 初始化NewLife.CommonEntity.Menu数据
12:44:58.696 8 W - 完成更新缓存（第1次）：NewLife.CommonEntity.Menu
12:44:58.709 8 W - 更新实体缓存（第1次）：NewLife.CommonEntity.RoleMenu 原因：第一次 RoleMenu<>.CheckNonePerssion(Int32 menuID)<-Role<,,>.InitData()
12:44:58.713 8 W - 完成更新缓存（第1次）：NewLife.CommonEntity.RoleMenu
12:44:58.727 8 W - 完成更新缓存（第1次）：NewLife.YWS.Entities.MyRole
12:45:07.096 4 W - 初始化Bioinfo.Entites.News数据
12:45:07.127 4 W - 初始化Bioinfo.Entites.Category数据
12:45:07.143 4 W - 更新实体缓存（第1次）：Bioinfo.Entites.Category 原因：第一次 Category.FindById(Int32 id)<-News.get_Category()
12:45:07.143 4 W - 完成更新缓存（第1次）：Bioinfo.Entites.Category
12:52:37.802 12 W - 更新实体缓存（第2次）：NewLife.CommonEntity.Menu 原因：60秒过期 Menu<>.GetCurrentMenu()<-.get_Current()
12:52:37.817 12 W - 完成更新缓存（第2次）：NewLife.CommonEntity.Menu
12:54:53.960 4 W - 更新实体缓存（第3次）：NewLife.CommonEntity.Menu 原因：60秒过期 Menu<>.GetCurrentMenu()<-.get_Current()
12:54:53.964 4 W - 完成更新缓存（第3次）：NewLife.CommonEntity.Menu
13:04:12.997 2 N - 清空单对象缓存：NewLife.CommonEntity.Setting

#Software: .
#ProcessID: 4688
#AppDomain: c5a66244-1-129931958584156645
#BaseDirectory: C:\DevelopMent\Bioinfo\BioinfoWebSite\
#Date: 2012-09-27
#Fields: Time ThreadID IsPoolThread ThreadName Message
13:04:19.109 4 W - NewLife.Core v3.8.2012.0803 Build 2012-09-25 12:03:50
13:04:19.114 4 W - 为NewLife.CommonEntity.IManageProvider配置注册YWSManageProvider，标识Identity=，优先级Priority=5！
13:04:20.657 4 W - NewLife.XCode v8.8.2012.0828 Build 2012-09-25 12:01:34
13:04:20.659 4 W - 一级缓存：关闭缓存
13:04:20.675 4 W - 更新实体缓存（第1次）：NewLife.YWS.Entities.Admin 原因：第一次 Administrator<>.FindByName(String name)<-.Login(String username,String password,Int32 hashTimes)
13:04:21.203 4 W - DropDefault(LastLogin)
13:04:21.241 4 W - 初始化NewLife.YWS.Entities.Admin数据
13:04:21.265 4 W - 开始检查连接[Common/MySql]的数据库架构……
13:04:21.380 4 W - [Common]的所有实体类（18个）：Sequence,GuidCategory,Administrator,Menu,Role,RoleMenu,Log,Area,User,Simple,SimpleTree,Setting,Statistics,UserProfile,Attachment,Category,MyRole,Admin
13:04:21.380 4 W - [Common]需要检查架构的实体类（2个）：MyRole,Admin
13:04:21.381 4 W - Common待检查表架构的实体个数：2
13:04:21.535 4 W - DropDefault(LastLogin)
13:04:21.578 4 W - 检查连接[Common/MySql]的数据库架构耗时00:00:00.3123267
13:04:21.602 4 W - 完成更新缓存（第1次）：NewLife.YWS.Entities.Admin
13:04:21.658 4 W - 清空实体缓存：NewLife.YWS.Entities.Admin 原因：修改数据后提交事务
13:04:21.684 4 W - 检查实体NewLife.CommonEntity.Log的数据表架构，模式：CheckTableWhenFirstUse
13:04:21.685 4 W - DropDefault(OccurTime)
13:04:21.685 4 W - AddDefault(OccurTime,)
13:04:21.685 4 W - 初始化NewLife.CommonEntity.Log数据
13:04:21.726 4 W - 更新实体缓存（第1次）：NewLife.YWS.Entities.MyRole 原因：第一次 Role<>.FindByID(Int32 id)<-
13:04:21.726 4 W - 初始化NewLife.YWS.Entities.MyRole数据
13:04:21.739 4 W - 检查实体NewLife.CommonEntity.RoleMenu的数据表架构，模式：CheckTableWhenFirstUse
13:04:21.742 4 W - 初始化NewLife.CommonEntity.RoleMenu数据
13:04:21.743 4 W - 如果某一个菜单对应的RoleMenu（角色菜单对应关系）为空或者只有一个，则授权第一个角色访问所有菜单！
13:04:21.756 4 W - 更新实体缓存（第1次）：NewLife.CommonEntity.Menu 原因：第一次 EntityTree<,>.FindAllByParent(EntityTree<,>.TKey parentKey)<-.FindChilds()
13:04:21.756 4 W - 检查实体NewLife.CommonEntity.Menu的数据表架构，模式：CheckTableWhenFirstUse
13:04:21.799 4 W - 初始化NewLife.CommonEntity.Menu数据
13:04:21.809 4 W - 完成更新缓存（第1次）：NewLife.CommonEntity.Menu
13:04:21.821 4 W - 更新实体缓存（第1次）：NewLife.CommonEntity.RoleMenu 原因：第一次 RoleMenu<>.CheckNonePerssion(Int32 menuID)<-Role<,,>.InitData()
13:04:21.826 4 W - 完成更新缓存（第1次）：NewLife.CommonEntity.RoleMenu
13:04:21.840 4 W - 完成更新缓存（第1次）：NewLife.YWS.Entities.MyRole
13:04:21.877 4 W - 检查实体NewLife.CommonEntity.Setting的数据表架构，模式：CheckTableWhenFirstUse
13:04:21.878 4 W - 初始化NewLife.CommonEntity.Setting数据
13:04:25.107 8 W - 初始化Bioinfo.Entites.News数据
13:04:25.169 8 W - 初始化Bioinfo.Entites.Category数据
13:04:25.173 8 W - 更新实体缓存（第1次）：Bioinfo.Entites.Category 原因：第一次 Category.FindById(Int32 id)<-News.get_Category()
13:04:25.178 8 W - 完成更新缓存（第1次）：Bioinfo.Entites.Category
13:05:02.759 2 N - 清空单对象缓存：NewLife.CommonEntity.Setting
13:05:02.774 2 N - 错误的连接字符串：Server=192.168.1.47;Database=Bioinfodb2;Uid=root;Pwd=yrshabc123
13:05:02.774 2 N - XCode.Exceptions.XDbSessionException: Unable to connect to any of the specified MySQL hosts.[DB:Common/MySql] ---> MySql.Data.MySqlClient.MySqlException: Unable to connect to any of the specified MySQL hosts. ---> System.ApplicationException: 应用程序中的错误。
   在 System.Threading.ThreadPool.RegisterWaitForSingleObjectNative(WaitHandle waitHandle, Object state, UInt32 timeOutInterval, Boolean executeOnlyOnce, RegisteredWaitHandle registeredWaitHandle, StackCrawlMark& stackMark, Boolean compressStack)
   在 System.Threading.ThreadPool.RegisterWaitForSingleObject(WaitHandle waitObject, WaitOrTimerCallback callBack, Object state, UInt32 millisecondsTimeOutInterval, Boolean executeOnlyOnce, StackCrawlMark& stackMark, Boolean compressStack)
   在 System.Threading.ThreadPool.UnsafeRegisterWaitForSingleObject(WaitHandle waitObject, WaitOrTimerCallback callBack, Object state, Int32 millisecondsTimeOutInterval, Boolean executeOnlyOnce)
   在 System.Net.Sockets.Socket.SetAsyncEventSelect(AsyncEventBits blockEventBits)
   在 System.Net.Sockets.Socket.DoBeginConnect(EndPoint endPointSnapshot, SocketAddress socketAddress, LazyAsyncResult asyncResult)
   在 System.Net.Sockets.Socket.BeginConnect(EndPoint remoteEP, AsyncCallback callback, Object state)
   在 MySql.Data.Common.StreamCreator.CreateSocketStream(IPAddress ip, Boolean unix)
   在 MySql.Data.Common.StreamCreator.GetStream(UInt32 timeout)
   在 MySql.Data.MySqlClient.NativeDriver.Open()
   --- 内部异常堆栈跟踪的结尾 ---
   在 MySql.Data.MySqlClient.NativeDriver.Open()
   在 MySql.Data.MySqlClient.Driver.Open()
   在 MySql.Data.MySqlClient.Driver.Create(MySqlConnectionStringBuilder settings)
   在 MySql.Data.MySqlClient.MySqlPool.GetPooledConnection()
   在 MySql.Data.MySqlClient.MySqlPool.TryToGetDriver()
   在 MySql.Data.MySqlClient.MySqlPool.GetConnection()
   在 MySql.Data.MySqlClient.MySqlConnection.Open()
   在 XCode.DataAccessLayer.DbSession.Open()
   在 XCode.DataAccessLayer.DbSession.BeginTransaction()
   --- 内部异常堆栈跟踪的结尾 ---
   在 XCode.DataAccessLayer.DbSession.BeginTransaction()
   在 XCode.DataAccessLayer.DAL.BeginTransaction()
   在 XCode.Entity`1.Meta.BeginTrans()
   在 XCode.Entity`1.DoAction(Func`1 func, Nullable`1 isnew)
   在 XCode.Entity`1.Update()
   在 XCode.Cache.SingleEntityCache`2.<>c__DisplayClass1c.<Clear>b__1b()
   在 XCode.Cache.CacheBase`1.InvokeFill(Func callback)

#Software: .
#ProcessID: 5460
#AppDomain: c5a66244-1-129931959101067575
#BaseDirectory: C:\DevelopMent\Bioinfo\BioinfoWebSite\
#Date: 2012-09-27
#Fields: Time ThreadID IsPoolThread ThreadName Message
13:05:10.839 4 W - NewLife.Core v3.8.2012.0803 Build 2012-09-25 12:03:50
13:05:10.839 4 W - 为NewLife.CommonEntity.IManageProvider配置注册YWSManageProvider，标识Identity=，优先级Priority=5！
13:05:12.540 4 W - NewLife.XCode v8.8.2012.0828 Build 2012-09-25 12:01:34
13:05:12.540 4 W - 检查实体NewLife.CommonEntity.Setting的数据表架构，模式：CheckTableWhenFirstUse
13:05:12.680 4 W - 初始化NewLife.CommonEntity.Setting数据
13:05:12.680 4 W - 开始检查连接[Common/MySql]的数据库架构……
13:05:12.758 4 W - [Common]的所有实体类（18个）：Sequence,GuidCategory,Administrator,Menu,Role,RoleMenu,Log,Area,User,Simple,SimpleTree,Setting,Statistics,UserProfile,Attachment,Category,MyRole,Admin
13:05:12.758 4 W - [Common]需要检查架构的实体类（2个）：MyRole,Admin
13:05:12.758 4 W - Common待检查表架构的实体个数：2
13:05:12.836 9 Y - DropDefault(LastLogin)
13:05:12.977 4 W - DropDefault(LastLogin)
13:05:13.039 4 W - 检查连接[Common/MySql]的数据库架构耗时00:00:00.3595117
13:05:13.039 9 Y - 初始化NewLife.YWS.Entities.Admin数据
13:05:13.039 4 W - 一级缓存：关闭缓存
13:05:14.755 4 W - 更新实体缓存（第1次）：NewLife.YWS.Entities.Admin 原因：第一次 Administrator<>.FindByName(String name)<-.Login(String username,String password,Int32 hashTimes)
13:05:14.771 4 W - 完成更新缓存（第1次）：NewLife.YWS.Entities.Admin
13:05:14.827 4 W - 清空实体缓存：NewLife.YWS.Entities.Admin 原因：修改数据后提交事务
13:05:14.847 4 W - 检查实体NewLife.CommonEntity.Log的数据表架构，模式：CheckTableWhenFirstUse
13:05:14.847 4 W - DropDefault(OccurTime)
13:05:14.847 4 W - AddDefault(OccurTime,)
13:05:14.847 4 W - 初始化NewLife.CommonEntity.Log数据
13:05:14.907 4 W - 更新实体缓存（第1次）：NewLife.YWS.Entities.MyRole 原因：第一次 Role<>.FindByID(Int32 id)<-
13:05:14.907 4 W - 初始化NewLife.YWS.Entities.MyRole数据
13:05:14.923 4 W - 检查实体NewLife.CommonEntity.RoleMenu的数据表架构，模式：CheckTableWhenFirstUse
13:05:14.923 4 W - 初始化NewLife.CommonEntity.RoleMenu数据
13:05:14.923 4 W - 如果某一个菜单对应的RoleMenu（角色菜单对应关系）为空或者只有一个，则授权第一个角色访问所有菜单！
13:05:14.939 4 W - 更新实体缓存（第1次）：NewLife.CommonEntity.Menu 原因：第一次 EntityTree<,>.FindAllByParent(EntityTree<,>.TKey parentKey)<-.FindChilds()
13:05:14.939 4 W - 检查实体NewLife.CommonEntity.Menu的数据表架构，模式：CheckTableWhenFirstUse
13:05:14.970 4 W - 初始化NewLife.CommonEntity.Menu数据
13:05:14.985 4 W - 完成更新缓存（第1次）：NewLife.CommonEntity.Menu
13:05:15.001 4 W - 更新实体缓存（第1次）：NewLife.CommonEntity.RoleMenu 原因：第一次 RoleMenu<>.CheckNonePerssion(Int32 menuID)<-Role<,,>.InitData()
13:05:15.001 4 W - 完成更新缓存（第1次）：NewLife.CommonEntity.RoleMenu
13:05:15.017 4 W - 完成更新缓存（第1次）：NewLife.YWS.Entities.MyRole
13:05:17.681 12 W - 初始化Bioinfo.Entites.News数据
13:05:17.713 12 W - 初始化Bioinfo.Entites.Category数据
13:05:17.728 12 W - 更新实体缓存（第1次）：Bioinfo.Entites.Category 原因：第一次 Category.FindById(Int32 id)<-News.get_Category()
13:05:17.728 12 W - 完成更新缓存（第1次）：Bioinfo.Entites.Category
13:06:15.139 9 W - 更新实体缓存（第2次）：NewLife.CommonEntity.Menu 原因：60秒过期 Menu<>.GetCurrentMenu()<-.get_Current()
13:06:15.139 9 W - 完成更新缓存（第2次）：NewLife.CommonEntity.Menu
13:07:10.614 2 N - 清空单对象缓存：NewLife.CommonEntity.Setting

#Software: .
#ProcessID: 1916
#AppDomain: c5a66244-1-129931960359960514
#BaseDirectory: C:\DevelopMent\Bioinfo\BioinfoWebSite\
#Date: 2012-09-27
#Fields: Time ThreadID IsPoolThread ThreadName Message
13:07:16.682 4 W - NewLife.Core v3.8.2012.0803 Build 2012-09-25 12:03:50
13:07:16.682 4 W - 为NewLife.CommonEntity.IManageProvider配置注册YWSManageProvider，标识Identity=，优先级Priority=5！
13:07:18.414 4 W - NewLife.XCode v8.8.2012.0828 Build 2012-09-25 12:01:34
13:07:18.414 4 W - 检查实体NewLife.CommonEntity.Setting的数据表架构，模式：CheckTableWhenFirstUse
13:07:18.538 4 W - 初始化NewLife.CommonEntity.Setting数据
13:07:18.554 4 W - 开始检查连接[Common/MySql]的数据库架构……
13:07:18.632 4 W - [Common]的所有实体类（18个）：Sequence,GuidCategory,Administrator,Menu,Role,RoleMenu,Log,Area,User,Simple,SimpleTree,Setting,Statistics,UserProfile,Attachment,Category,MyRole,Admin
13:07:18.632 4 W - [Common]需要检查架构的实体类（2个）：MyRole,Admin
13:07:18.632 4 W - Common待检查表架构的实体个数：2
13:07:18.726 9 Y - DropDefault(LastLogin)
13:07:18.882 4 W - DropDefault(LastLogin)
13:07:18.960 4 W - 检查连接[Common/MySql]的数据库架构耗时00:00:00.4088926
13:07:18.960 9 Y - 初始化NewLife.YWS.Entities.Admin数据
13:07:18.960 4 W - 一级缓存：关闭缓存
13:07:22.298 9 W - 更新实体缓存（第1次）：NewLife.YWS.Entities.Admin 原因：第一次 Administrator<>.FindByName(String name)<-.Login(String username,String password,Int32 hashTimes)
13:07:22.298 9 W - 完成更新缓存（第1次）：NewLife.YWS.Entities.Admin
13:07:22.329 9 W - 清空实体缓存：NewLife.YWS.Entities.Admin 原因：修改数据后提交事务
13:07:22.355 9 W - 检查实体NewLife.CommonEntity.Log的数据表架构，模式：CheckTableWhenFirstUse
13:07:22.355 9 W - DropDefault(OccurTime)
13:07:22.355 9 W - AddDefault(OccurTime,)
13:07:22.355 9 W - 初始化NewLife.CommonEntity.Log数据
13:07:22.405 4 W - 更新实体缓存（第1次）：NewLife.YWS.Entities.MyRole 原因：第一次 Role<>.FindByID(Int32 id)<-
13:07:22.405 4 W - 初始化NewLife.YWS.Entities.MyRole数据
13:07:22.415 4 W - 检查实体NewLife.CommonEntity.RoleMenu的数据表架构，模式：CheckTableWhenFirstUse
13:07:22.425 4 W - 初始化NewLife.CommonEntity.RoleMenu数据
13:07:22.425 4 W - 如果某一个菜单对应的RoleMenu（角色菜单对应关系）为空或者只有一个，则授权第一个角色访问所有菜单！
13:07:22.435 4 W - 更新实体缓存（第1次）：NewLife.CommonEntity.Menu 原因：第一次 EntityTree<,>.FindAllByParent(EntityTree<,>.TKey parentKey)<-.FindChilds()
13:07:22.435 4 W - 检查实体NewLife.CommonEntity.Menu的数据表架构，模式：CheckTableWhenFirstUse
13:07:22.482 4 W - 初始化NewLife.CommonEntity.Menu数据
13:07:22.482 4 W - 完成更新缓存（第1次）：NewLife.CommonEntity.Menu
13:07:22.497 4 W - 更新实体缓存（第1次）：NewLife.CommonEntity.RoleMenu 原因：第一次 RoleMenu<>.CheckNonePerssion(Int32 menuID)<-Role<,,>.InitData()
13:07:22.513 4 W - 完成更新缓存（第1次）：NewLife.CommonEntity.RoleMenu
13:07:22.513 4 W - 完成更新缓存（第1次）：NewLife.YWS.Entities.MyRole
13:07:26.791 12 W - 初始化Bioinfo.Entites.News数据
13:07:26.838 12 W - 初始化Bioinfo.Entites.Category数据
13:07:26.838 12 W - 更新实体缓存（第1次）：Bioinfo.Entites.Category 原因：第一次 Category.FindById(Int32 id)<-News.get_Category()
13:07:26.838 12 W - 完成更新缓存（第1次）：Bioinfo.Entites.Category
13:09:09.515 2 N - 清空单对象缓存：NewLife.CommonEntity.Setting

#Software: .
#ProcessID: 4900
#AppDomain: c5a66244-1-129931961534574411
#BaseDirectory: C:\DevelopMent\Bioinfo\BioinfoWebSite\
#Date: 2012-09-27
#Fields: Time ThreadID IsPoolThread ThreadName Message
13:09:14.125 4 W - NewLife.Core v3.8.2012.0803 Build 2012-09-25 12:03:50
13:09:14.129 4 W - 为NewLife.CommonEntity.IManageProvider配置注册YWSManageProvider，标识Identity=，优先级Priority=5！
13:09:15.602 4 W - NewLife.XCode v8.8.2012.0828 Build 2012-09-25 12:01:34
13:09:15.604 4 W - 一级缓存：关闭缓存
13:09:15.620 4 W - 更新实体缓存（第1次）：NewLife.YWS.Entities.Admin 原因：第一次 Administrator<>.FindByName(String name)<-.Login(String username,String password,Int32 hashTimes)
13:09:16.109 4 W - DropDefault(LastLogin)
13:09:16.146 4 W - 初始化NewLife.YWS.Entities.Admin数据
13:09:16.160 4 W - 开始检查连接[Common/MySql]的数据库架构……
13:09:16.246 4 W - [Common]的所有实体类（18个）：Sequence,GuidCategory,Administrator,Menu,Role,RoleMenu,Log,Area,User,Simple,SimpleTree,Setting,Statistics,UserProfile,Attachment,Category,MyRole,Admin
13:09:16.246 4 W - [Common]需要检查架构的实体类（2个）：MyRole,Admin
13:09:16.246 4 W - Common待检查表架构的实体个数：2
13:09:16.408 4 W - DropDefault(LastLogin)
13:09:16.442 4 W - 检查连接[Common/MySql]的数据库架构耗时00:00:00.2813386
13:09:16.466 4 W - 完成更新缓存（第1次）：NewLife.YWS.Entities.Admin
13:09:16.525 4 W - 清空实体缓存：NewLife.YWS.Entities.Admin 原因：修改数据后提交事务
13:09:16.550 4 W - 检查实体NewLife.CommonEntity.Log的数据表架构，模式：CheckTableWhenFirstUse
13:09:16.551 4 W - DropDefault(OccurTime)
13:09:16.551 4 W - AddDefault(OccurTime,)
13:09:16.551 4 W - 初始化NewLife.CommonEntity.Log数据
13:09:16.595 4 W - 更新实体缓存（第1次）：NewLife.YWS.Entities.MyRole 原因：第一次 Role<>.FindByID(Int32 id)<-
13:09:16.596 4 W - 初始化NewLife.YWS.Entities.MyRole数据
13:09:16.609 4 W - 检查实体NewLife.CommonEntity.RoleMenu的数据表架构，模式：CheckTableWhenFirstUse
13:09:16.612 4 W - 初始化NewLife.CommonEntity.RoleMenu数据
13:09:16.613 4 W - 如果某一个菜单对应的RoleMenu（角色菜单对应关系）为空或者只有一个，则授权第一个角色访问所有菜单！
13:09:16.625 4 W - 更新实体缓存（第1次）：NewLife.CommonEntity.Menu 原因：第一次 EntityTree<,>.FindAllByParent(EntityTree<,>.TKey parentKey)<-.FindChilds()
13:09:16.626 4 W - 检查实体NewLife.CommonEntity.Menu的数据表架构，模式：CheckTableWhenFirstUse
13:09:16.672 4 W - 初始化NewLife.CommonEntity.Menu数据
13:09:16.682 4 W - 完成更新缓存（第1次）：NewLife.CommonEntity.Menu
13:09:16.694 4 W - 更新实体缓存（第1次）：NewLife.CommonEntity.RoleMenu 原因：第一次 RoleMenu<>.CheckNonePerssion(Int32 menuID)<-Role<,,>.InitData()
13:09:16.699 4 W - 完成更新缓存（第1次）：NewLife.CommonEntity.RoleMenu
13:09:16.712 4 W - 完成更新缓存（第1次）：NewLife.YWS.Entities.MyRole
13:09:16.748 4 W - 检查实体NewLife.CommonEntity.Setting的数据表架构，模式：CheckTableWhenFirstUse
13:09:16.749 4 W - 初始化NewLife.CommonEntity.Setting数据
13:09:21.062 8 W - 初始化Bioinfo.Entites.News数据
13:09:21.125 8 W - 初始化Bioinfo.Entites.Category数据
13:09:21.130 8 W - 更新实体缓存（第1次）：Bioinfo.Entites.Category 原因：第一次 Category.FindById(Int32 id)<-News.get_Category()
13:09:21.134 8 W - 完成更新缓存（第1次）：Bioinfo.Entites.Category
13:12:29.329 2 N - 清空单对象缓存：NewLife.CommonEntity.Setting

#Software: .
#ProcessID: 968
#AppDomain: c5a66244-1-129931964894452431
#BaseDirectory: C:\DevelopMent\Bioinfo\BioinfoWebSite\
#Date: 2012-09-27
#Fields: Time ThreadID IsPoolThread ThreadName Message
13:14:50.303 4 W - NewLife.Core v3.8.2012.0803 Build 2012-09-25 12:03:50
13:14:50.303 4 W - 为NewLife.CommonEntity.IManageProvider配置注册YWSManageProvider，标识Identity=，优先级Priority=5！
13:14:52.175 4 W - NewLife.XCode v8.8.2012.0828 Build 2012-09-25 12:01:34
13:14:52.175 4 W - 检查实体NewLife.CommonEntity.Setting的数据表架构，模式：CheckTableWhenFirstUse
13:14:52.331 4 W - 初始化NewLife.CommonEntity.Setting数据
13:14:52.331 4 W - 开始检查连接[Common/MySql]的数据库架构……
13:14:52.424 4 W - [Common]的所有实体类（18个）：Sequence,GuidCategory,Administrator,Menu,Role,RoleMenu,Log,Area,User,Simple,SimpleTree,Setting,Statistics,UserProfile,Attachment,Category,MyRole,Admin
13:14:52.424 4 W - [Common]需要检查架构的实体类（2个）：MyRole,Admin
13:14:52.424 4 W - Common待检查表架构的实体个数：2
13:14:52.487 8 Y - DropDefault(LastLogin)
13:14:52.643 4 W - DropDefault(LastLogin)
13:14:52.705 4 W - 检查连接[Common/MySql]的数据库架构耗时00:00:00.3641504
13:14:52.705 8 Y - 初始化NewLife.YWS.Entities.Admin数据
13:14:52.705 4 W - 一级缓存：关闭缓存
13:14:54.468 4 W - 更新实体缓存（第1次）：NewLife.YWS.Entities.Admin 原因：第一次 Administrator<>.FindByName(String name)<-.Login(String username,String password,Int32 hashTimes)
13:14:54.484 4 W - 完成更新缓存（第1次）：NewLife.YWS.Entities.Admin
13:14:54.515 4 W - 清空实体缓存：NewLife.YWS.Entities.Admin 原因：修改数据后提交事务
13:14:54.548 4 W - 检查实体NewLife.CommonEntity.Log的数据表架构，模式：CheckTableWhenFirstUse
13:14:54.549 4 W - DropDefault(OccurTime)
13:14:54.549 4 W - AddDefault(OccurTime,)
13:14:54.549 4 W - 初始化NewLife.CommonEntity.Log数据
13:14:54.596 4 W - 更新实体缓存（第1次）：NewLife.YWS.Entities.MyRole 原因：第一次 Role<>.FindByID(Int32 id)<-
13:14:54.596 4 W - 初始化NewLife.YWS.Entities.MyRole数据
13:14:54.616 4 W - 检查实体NewLife.CommonEntity.RoleMenu的数据表架构，模式：CheckTableWhenFirstUse
13:14:54.616 4 W - 初始化NewLife.CommonEntity.RoleMenu数据
13:14:54.616 4 W - 如果某一个菜单对应的RoleMenu（角色菜单对应关系）为空或者只有一个，则授权第一个角色访问所有菜单！
13:14:54.636 4 W - 更新实体缓存（第1次）：NewLife.CommonEntity.Menu 原因：第一次 EntityTree<,>.FindAllByParent(EntityTree<,>.TKey parentKey)<-.FindChilds()
13:14:54.636 4 W - 检查实体NewLife.CommonEntity.Menu的数据表架构，模式：CheckTableWhenFirstUse
13:14:54.677 4 W - 初始化NewLife.CommonEntity.Menu数据
13:14:54.677 4 W - 完成更新缓存（第1次）：NewLife.CommonEntity.Menu
13:14:54.693 4 W - 更新实体缓存（第1次）：NewLife.CommonEntity.RoleMenu 原因：第一次 RoleMenu<>.CheckNonePerssion(Int32 menuID)<-Role<,,>.InitData()
13:14:54.693 4 W - 完成更新缓存（第1次）：NewLife.CommonEntity.RoleMenu
13:14:54.708 4 W - 完成更新缓存（第1次）：NewLife.YWS.Entities.MyRole
13:14:57.595 4 W - 初始化Bioinfo.Entites.News数据
13:14:57.626 4 W - 初始化Bioinfo.Entites.Category数据
13:14:57.626 4 W - 更新实体缓存（第1次）：Bioinfo.Entites.Category 原因：第一次 Category.FindById(Int32 id)<-News.get_Category()
13:14:57.642 4 W - 完成更新缓存（第1次）：Bioinfo.Entites.Category
13:17:18.112 2 N - 清空单对象缓存：NewLife.CommonEntity.Setting

#Software: .
#ProcessID: 3500
#AppDomain: c5a66244-1-129931969030180900
#BaseDirectory: C:\DevelopMent\Bioinfo\BioinfoWebSite\
#Date: 2012-09-27
#Fields: Time ThreadID IsPoolThread ThreadName Message
13:21:45.841 4 W - NewLife.Core v3.8.2012.0803 Build 2012-09-25 12:03:50
13:21:45.841 4 W - 为NewLife.CommonEntity.IManageProvider配置注册YWSManageProvider，标识Identity=，优先级Priority=5！
13:21:47.198 4 W - NewLife.XCode v8.8.2012.0828 Build 2012-09-25 12:01:34
13:21:47.198 4 W - 检查实体NewLife.CommonEntity.Setting的数据表架构，模式：CheckTableWhenFirstUse
13:21:47.214 8 Y - 创建表：Admin(管理员)
13:21:47.214 4 W - 创建表：Setting(设置)
13:21:47.649 4 W - 初始化NewLife.CommonEntity.Setting数据
13:21:47.659 4 W - 开始检查连接[Common/MySql]的数据库架构……
13:21:47.757 4 W - [Common]的所有实体类（22个）：Category,News,Messages,Setting,Sequence,GuidCategory,Administrator,Menu,Role,RoleMenu,Log,Area,User,Simple,SimpleTree,Setting,Statistics,UserProfile,Attachment,Category,MyRole,Admin
13:21:47.757 4 W - [Common]需要检查架构的实体类（6个）：Category,News,Messages,Setting,MyRole,Admin
13:21:47.758 4 W - Common待检查表架构的实体个数：6
13:21:47.901 8 Y - 初始化NewLife.YWS.Entities.Admin数据
13:21:47.911 8 Y - 开始初始化Admin管理员数据……
13:21:47.921 8 Y - 一级缓存：关闭缓存
13:21:47.991 8 Y - 完成初始化Admin管理员数据！
13:21:47.991 4 W - 创建表：Role(角色)
13:21:48.211 4 W - 创建表：Admin(管理员)
13:21:48.251 4 W - 修改表CreateIndex失败！Duplicate key name 'IX_Administrator_Name'[SQL:Create Unique Index IX_Administrator_Name On Admin (Name)][DB:Common/MySql]
13:21:48.251 4 W - 修改表CreateIndex失败！Duplicate key name 'IX_Administrator_RoleID'[SQL:Create Index IX_Administrator_RoleID On Admin (RoleID)][DB:Common/MySql]
13:21:48.261 4 W - 检查连接[Common/MySql]的数据库架构耗时00:00:00.5934920
13:21:49.594 11 W - 更新实体缓存（第1次）：NewLife.YWS.Entities.Admin 原因：60秒过期 Administrator<>.FindByName(String name)<-.Login(String username,String password,Int32 hashTimes)
13:21:49.610 11 W - 完成更新缓存（第1次）：NewLife.YWS.Entities.Admin
13:21:49.643 11 W - 清空实体缓存：NewLife.YWS.Entities.Admin 原因：修改数据后提交事务
13:21:49.673 11 W - 检查实体NewLife.CommonEntity.Log的数据表架构，模式：CheckTableWhenFirstUse
13:21:49.683 11 W - 创建表：Log(日志)
13:21:49.889 11 W - 初始化NewLife.CommonEntity.Log数据
13:21:49.936 8 W - 更新实体缓存（第1次）：NewLife.YWS.Entities.MyRole 原因：第一次 Role<>.FindByID(Int32 id)<-
13:21:49.936 8 W - 初始化NewLife.YWS.Entities.MyRole数据
13:21:49.951 8 W - 开始初始化MyRole角色数据……
13:21:50.014 8 W - 完成初始化MyRole角色数据！
13:21:50.014 8 W - 检查实体NewLife.CommonEntity.RoleMenu的数据表架构，模式：CheckTableWhenFirstUse
13:21:50.014 8 W - 创建表：RoleMenu(角色和菜单)
13:21:50.466 8 W - 初始化NewLife.CommonEntity.RoleMenu数据
13:21:50.466 8 W - 检查实体NewLife.CommonEntity.Menu的数据表架构，模式：CheckTableWhenFirstUse
13:21:50.466 8 W - 创建表：Menu(菜单)
13:21:50.825 8 W - 初始化NewLife.CommonEntity.Menu数据
13:21:50.825 8 W - 开始初始化Menu菜单数据……
13:21:50.840 8 W - 更新实体缓存（第1次）：NewLife.CommonEntity.Menu 原因：第一次 Menu<>.FindByName(String name)<-.FindForName(String name)
13:21:50.840 8 W - 完成更新缓存（第1次）：NewLife.CommonEntity.Menu
13:21:50.981 8 W - 完成初始化Menu菜单数据！
13:21:50.981 8 W - 开始初始化RoleMenu授权数据……
13:21:50.981 8 W - 更新实体缓存（第2次）：NewLife.YWS.Entities.MyRole 原因：60秒过期 Role<,,>.InitData()<-Entity<>.Meta.WaitForInitData(Int32 millisecondsTimeout)
13:21:50.996 8 W - 完成更新缓存（第2次）：NewLife.YWS.Entities.MyRole
13:21:50.996 8 W - 更新实体缓存（第1次）：NewLife.CommonEntity.RoleMenu 原因：第一次 RoleMenu<>.FindAllByRoleID(Int32 roleID)<-.GrantAll(Int32 roleID,List<Int32> menuIDs)
13:21:50.996 8 W - 完成更新缓存（第1次）：NewLife.CommonEntity.RoleMenu
13:21:51.090 8 W - 完成初始化RoleMenu授权数据！
13:21:51.090 8 W - 完成更新缓存（第2次）：NewLife.YWS.Entities.MyRole
13:21:51.090 8 W - 更新实体缓存（第2次）：NewLife.CommonEntity.Menu 原因：60秒过期 Menu<>.FindByID(Int32 id)<-
13:21:51.106 8 W - 完成更新缓存（第2次）：NewLife.CommonEntity.Menu
13:21:51.152 8 W - 清空实体缓存：NewLife.CommonEntity.Menu 原因：修改数据后提交事务
13:21:51.184 8 W - 更新实体缓存（第3次）：NewLife.CommonEntity.Menu 原因：60秒过期 EntityTree<,>.Valid(Boolean isNew)<-Entity<>.DoAction(Func<Int32> func,Nullable<Boolean> isnew)
13:21:51.184 8 W - 完成更新缓存（第3次）：NewLife.CommonEntity.Menu
13:21:51.230 8 W - 清空实体缓存：NewLife.CommonEntity.Menu 原因：修改数据后提交事务
13:21:51.246 8 W - 更新实体缓存（第4次）：NewLife.CommonEntity.Menu 原因：60秒过期 EntityTree<,>.Valid(Boolean isNew)<-Entity<>.DoAction(Func<Int32> func,Nullable<Boolean> isnew)
13:21:51.246 8 W - 完成更新缓存（第4次）：NewLife.CommonEntity.Menu
13:21:51.277 8 W - 清空实体缓存：NewLife.CommonEntity.Menu 原因：修改数据后提交事务
13:21:51.293 8 W - 更新实体缓存（第5次）：NewLife.CommonEntity.Menu 原因：60秒过期 EntityTree<,>.Valid(Boolean isNew)<-Entity<>.DoAction(Func<Int32> func,Nullable<Boolean> isnew)
13:21:51.293 8 W - 完成更新缓存（第5次）：NewLife.CommonEntity.Menu
13:21:51.324 8 W - 清空实体缓存：NewLife.CommonEntity.Menu 原因：修改数据后提交事务
13:21:51.355 8 W - 更新实体缓存（第6次）：NewLife.CommonEntity.Menu 原因：60秒过期 Entity<>.OnUpdate()<-.DoAction(Func<Int32> func,Nullable<Boolean> isnew)
13:21:51.355 8 W - 完成更新缓存（第6次）：NewLife.CommonEntity.Menu
13:21:51.386 8 W - 清空实体缓存：NewLife.CommonEntity.Menu 原因：修改数据后提交事务
13:21:51.890 11 W - 更新实体缓存（第2次）：NewLife.YWS.Entities.Admin 原因：60秒过期 Administrator<>.FindByName(String name)<-.Login(String username,String password,Int32 hashTimes)
13:21:51.890 11 W - 完成更新缓存（第2次）：NewLife.YWS.Entities.Admin
13:21:51.936 11 W - 清空实体缓存：NewLife.YWS.Entities.Admin 原因：修改数据后提交事务
13:21:51.983 4 W - 更新实体缓存（第7次）：NewLife.CommonEntity.Menu 原因：60秒过期 Menu<>.FindByID(Int32 id)<-
13:21:51.983 4 W - 完成更新缓存（第7次）：NewLife.CommonEntity.Menu
13:21:53.184 8 W - 清空实体缓存：NewLife.CommonEntity.Menu 原因：修改数据后提交事务
13:21:53.216 8 W - 更新实体缓存（第8次）：NewLife.CommonEntity.Menu 原因：60秒过期 EntityTree<,>.Valid(Boolean isNew)<-Entity<>.DoAction(Func<Int32> func,Nullable<Boolean> isnew)
13:21:53.216 8 W - 完成更新缓存（第8次）：NewLife.CommonEntity.Menu
13:21:53.231 8 W - 清空实体缓存：NewLife.CommonEntity.Menu 原因：修改数据后提交事务
13:21:53.262 8 W - 更新实体缓存（第9次）：NewLife.CommonEntity.Menu 原因：60秒过期 EntityTree<,>.Valid(Boolean isNew)<-Entity<>.DoAction(Func<Int32> func,Nullable<Boolean> isnew)
13:21:53.262 8 W - 完成更新缓存（第9次）：NewLife.CommonEntity.Menu
13:21:53.294 8 W - 清空实体缓存：NewLife.CommonEntity.Menu 原因：修改数据后提交事务
13:21:55.057 11 W - 更新实体缓存（第10次）：NewLife.CommonEntity.Menu 原因：60秒过期 Entity<>.FindWithCache(String name,Object value)<-Entity<>.EntityOperate.FindWithCache(String name,Object value)
13:21:55.057 11 W - 完成更新缓存（第10次）：NewLife.CommonEntity.Menu
13:22:05.616 12 W - 初始化Bioinfo.Entites.News数据
13:22:55.506 8 W - 更新实体缓存（第11次）：NewLife.CommonEntity.Menu 原因：60秒过期 Menu<>.GetCurrentMenu()<-.get_Current()
13:22:55.522 8 W - 完成更新缓存（第11次）：NewLife.CommonEntity.Menu
13:22:55.538 8 W - 更新实体缓存（第3次）：NewLife.YWS.Entities.MyRole 原因：60秒过期 Role<>.FindByID(Int32 id)<-
13:22:55.538 8 W - 完成更新缓存（第3次）：NewLife.YWS.Entities.MyRole
13:22:56.911 8 W - 异步更新实体缓存（第1次）：NewLife.CommonEntity.Log 原因：600秒过期
13:22:56.926 7 Y - 完成更新缓存（第1次）：NewLife.CommonEntity.Log
13:32:59.692 15 W - 实体缓存<Menu>总次数591，一级命中580（98.14%）
13:32:59.694 15 W - 更新实体缓存（第12次）：NewLife.CommonEntity.Menu 原因：60秒过期 EntityTree<,>.FindAllByParent(EntityTree<,>.TKey parentKey)<-.FindChilds()
13:32:59.709 15 W - 完成更新缓存（第12次）：NewLife.CommonEntity.Menu
13:33:05.857 19 W - 更新实体缓存（第1次）：Bioinfo.Entites.News 原因：第一次 Entity<>.FindAllWithCache()<-RuntimeMethodHandle._InvokeMethodFast(IRuntimeMethodInfo method,Object target,Object[] arguments,SignatureStruct& sig,MethodAttributes methodAttributes,RuntimeType typeOwner)
13:33:05.861 19 W - 完成更新缓存（第1次）：Bioinfo.Entites.News
13:35:48.496 19 W - 更新实体缓存（第13次）：NewLife.CommonEntity.Menu 原因：60秒过期 Menu<>.GetCurrentMenu()<-.get_Current()
13:35:48.501 19 W - 完成更新缓存（第13次）：NewLife.CommonEntity.Menu
13:35:48.505 19 W - 更新实体缓存（第2次）：Bioinfo.Entites.News 原因：60秒过期 Entity<>.FindAllWithCache()<-RuntimeMethodHandle._InvokeMethodFast(IRuntimeMethodInfo method,Object target,Object[] arguments,SignatureStruct& sig,MethodAttributes methodAttributes,RuntimeType typeOwner)
13:35:48.508 19 W - 完成更新缓存（第2次）：Bioinfo.Entites.News
13:37:42.104 2 N - 清空单对象缓存：NewLife.CommonEntity.Setting
13:37:42.108 2 N - 错误的连接字符串：Server=192.168.1.47;Database=Bioinfodb2;Uid=root;Pwd=yrshabc123
13:37:42.109 2 N - XCode.Exceptions.XDbSessionException: Unable to connect to any of the specified MySQL hosts.[DB:Common/MySql] ---> MySql.Data.MySqlClient.MySqlException: Unable to connect to any of the specified MySQL hosts. ---> System.ApplicationException: 应用程序中的错误。
   在 System.Threading.ThreadPool.RegisterWaitForSingleObjectNative(WaitHandle waitHandle, Object state, UInt32 timeOutInterval, Boolean executeOnlyOnce, RegisteredWaitHandle registeredWaitHandle, StackCrawlMark& stackMark, Boolean compressStack)
   在 System.Threading.ThreadPool.RegisterWaitForSingleObject(WaitHandle waitObject, WaitOrTimerCallback callBack, Object state, UInt32 millisecondsTimeOutInterval, Boolean executeOnlyOnce, StackCrawlMark& stackMark, Boolean compressStack)
   在 System.Threading.ThreadPool.UnsafeRegisterWaitForSingleObject(WaitHandle waitObject, WaitOrTimerCallback callBack, Object state, Int32 millisecondsTimeOutInterval, Boolean executeOnlyOnce)
   在 System.Net.Sockets.Socket.SetAsyncEventSelect(AsyncEventBits blockEventBits)
   在 System.Net.Sockets.Socket.DoBeginConnect(EndPoint endPointSnapshot, SocketAddress socketAddress, LazyAsyncResult asyncResult)
   在 System.Net.Sockets.Socket.BeginConnect(EndPoint remoteEP, AsyncCallback callback, Object state)
   在 MySql.Data.Common.StreamCreator.CreateSocketStream(IPAddress ip, Boolean unix)
   在 MySql.Data.Common.StreamCreator.GetStream(UInt32 timeout)
   在 MySql.Data.MySqlClient.NativeDriver.Open()
   --- 内部异常堆栈跟踪的结尾 ---
   在 MySql.Data.MySqlClient.NativeDriver.Open()
   在 MySql.Data.MySqlClient.Driver.Open()
   在 MySql.Data.MySqlClient.Driver.Create(MySqlConnectionStringBuilder settings)
   在 MySql.Data.MySqlClient.MySqlPool.GetPooledConnection()
   在 MySql.Data.MySqlClient.MySqlPool.TryToGetDriver()
   在 MySql.Data.MySqlClient.MySqlPool.GetConnection()
   在 MySql.Data.MySqlClient.MySqlConnection.Open()
   在 XCode.DataAccessLayer.DbSession.Open()
   在 XCode.DataAccessLayer.DbSession.BeginTransaction()
   --- 内部异常堆栈跟踪的结尾 ---
   在 XCode.DataAccessLayer.DbSession.BeginTransaction()
   在 XCode.DataAccessLayer.DAL.BeginTransaction()
   在 XCode.Entity`1.Meta.BeginTrans()
   在 XCode.Entity`1.DoAction(Func`1 func, Nullable`1 isnew)
   在 XCode.Entity`1.Update()
   在 XCode.Cache.SingleEntityCache`2.<>c__DisplayClass1c.<Clear>b__1b()
   在 XCode.Cache.CacheBase`1.InvokeFill(Func callback)

#Software: .
#ProcessID: 5044
#AppDomain: c5a66244-1-129931978693886752
#BaseDirectory: C:\DevelopMent\Bioinfo\BioinfoWebSite\
#Date: 2012-09-27
#Fields: Time ThreadID IsPoolThread ThreadName Message
13:37:50.193 4 W - NewLife.Core v3.8.2012.0803 Build 2012-09-25 12:03:50
13:37:50.197 4 W - 为NewLife.CommonEntity.IManageProvider配置注册YWSManageProvider，标识Identity=，优先级Priority=5！
13:37:52.069 9 W - NewLife.XCode v8.8.2012.0828 Build 2012-09-25 12:01:34
13:37:52.069 9 W - 检查实体NewLife.CommonEntity.Setting的数据表架构，模式：CheckTableWhenFirstUse
13:37:52.208 9 W - 初始化NewLife.CommonEntity.Setting数据
13:37:52.214 9 W - 开始检查连接[Common/MySql]的数据库架构……
13:37:52.311 9 W - [Common]的所有实体类（18个）：Sequence,GuidCategory,Administrator,Menu,Role,RoleMenu,Log,Area,User,Simple,SimpleTree,Setting,Statistics,UserProfile,Attachment,Category,MyRole,Admin
13:37:52.311 9 W - [Common]需要检查架构的实体类（2个）：MyRole,Admin
13:37:52.311 9 W - Common待检查表架构的实体个数：2
13:37:52.474 9 W - DropDefault(LastLogin)
13:37:52.614 4 Y - DropDefault(LastLogin)
13:37:52.643 9 W - 检查连接[Common/MySql]的数据库架构耗时00:00:00.4286894
13:37:52.645 9 W - 一级缓存：关闭缓存
13:37:52.676 4 Y - 修改表CreateIndex失败！Duplicate key name 'IX_Administrator_Name'[SQL:Create Unique Index IX_Administrator_Name On Admin (Name)][DB:Common/MySql]
13:37:52.679 4 Y - 修改表CreateIndex失败！Duplicate key name 'IX_Administrator_RoleID'[SQL:Create Index IX_Administrator_RoleID On Admin (RoleID)][DB:Common/MySql]
13:37:52.684 4 Y - 初始化NewLife.YWS.Entities.Admin数据
13:37:54.652 9 W - 更新实体缓存（第1次）：NewLife.YWS.Entities.Admin 原因：第一次 Administrator<>.FindByName(String name)<-.Login(String username,String password,Int32 hashTimes)
13:37:54.657 9 W - 完成更新缓存（第1次）：NewLife.YWS.Entities.Admin
13:37:54.692 9 W - 清空实体缓存：NewLife.YWS.Entities.Admin 原因：修改数据后提交事务
13:37:54.718 9 W - 检查实体NewLife.CommonEntity.Log的数据表架构，模式：CheckTableWhenFirstUse
13:37:54.719 9 W - DropDefault(OccurTime)
13:37:54.719 9 W - AddDefault(OccurTime,)
13:37:54.719 9 W - 初始化NewLife.CommonEntity.Log数据
13:37:54.771 9 W - 更新实体缓存（第1次）：NewLife.YWS.Entities.MyRole 原因：第一次 Role<>.FindByID(Int32 id)<-
13:37:54.771 9 W - 初始化NewLife.YWS.Entities.MyRole数据
13:37:54.785 9 W - 检查实体NewLife.CommonEntity.RoleMenu的数据表架构，模式：CheckTableWhenFirstUse
13:37:54.788 9 W - 初始化NewLife.CommonEntity.RoleMenu数据
13:37:54.788 9 W - 如果某一个菜单对应的RoleMenu（角色菜单对应关系）为空或者只有一个，则授权第一个角色访问所有菜单！
13:37:54.802 9 W - 更新实体缓存（第1次）：NewLife.CommonEntity.Menu 原因：第一次 EntityTree<,>.FindAllByParent(EntityTree<,>.TKey parentKey)<-.FindChilds()
13:37:54.803 9 W - 检查实体NewLife.CommonEntity.Menu的数据表架构，模式：CheckTableWhenFirstUse
13:37:54.833 9 W - 初始化NewLife.CommonEntity.Menu数据
13:37:54.842 9 W - 完成更新缓存（第1次）：NewLife.CommonEntity.Menu
13:37:54.855 9 W - 更新实体缓存（第1次）：NewLife.CommonEntity.RoleMenu 原因：第一次 RoleMenu<>.CheckNonePerssion(Int32 menuID)<-Role<,,>.InitData()
13:37:54.860 9 W - 完成更新缓存（第1次）：NewLife.CommonEntity.RoleMenu
13:37:54.874 9 W - 完成更新缓存（第1次）：NewLife.YWS.Entities.MyRole
13:38:01.605 4 W - 初始化Bioinfo.Entites.News数据
13:38:03.305 4 W - 更新实体缓存（第1次）：Bioinfo.Entites.News 原因：第一次 Entity<>.FindAllWithCache()<-RuntimeMethodHandle._InvokeMethodFast(IRuntimeMethodInfo method,Object target,Object[] arguments,SignatureStruct& sig,MethodAttributes methodAttributes,RuntimeType typeOwner)
13:38:03.305 4 W - 完成更新缓存（第1次）：Bioinfo.Entites.News
13:38:12.681 2 N - 清空单对象缓存：NewLife.CommonEntity.Setting
13:38:12.681 2 N - 错误的连接字符串：Server=192.168.1.47;Database=Bioinfodb2;Uid=root;Pwd=yrshabc123
13:38:12.681 2 N - XCode.Exceptions.XDbSessionException: Unable to connect to any of the specified MySQL hosts.[DB:Common/MySql] ---> MySql.Data.MySqlClient.MySqlException: Unable to connect to any of the specified MySQL hosts. ---> System.ApplicationException: 应用程序中的错误。
   在 System.Threading.ThreadPool.RegisterWaitForSingleObjectNative(WaitHandle waitHandle, Object state, UInt32 timeOutInterval, Boolean executeOnlyOnce, RegisteredWaitHandle registeredWaitHandle, StackCrawlMark& stackMark, Boolean compressStack)
   在 System.Threading.ThreadPool.RegisterWaitForSingleObject(WaitHandle waitObject, WaitOrTimerCallback callBack, Object state, UInt32 millisecondsTimeOutInterval, Boolean executeOnlyOnce, StackCrawlMark& stackMark, Boolean compressStack)
   在 System.Threading.ThreadPool.UnsafeRegisterWaitForSingleObject(WaitHandle waitObject, WaitOrTimerCallback callBack, Object state, Int32 millisecondsTimeOutInterval, Boolean executeOnlyOnce)
   在 System.Net.Sockets.Socket.SetAsyncEventSelect(AsyncEventBits blockEventBits)
   在 System.Net.Sockets.Socket.DoBeginConnect(EndPoint endPointSnapshot, SocketAddress socketAddress, LazyAsyncResult asyncResult)
   在 System.Net.Sockets.Socket.BeginConnect(EndPoint remoteEP, AsyncCallback callback, Object state)
   在 MySql.Data.Common.StreamCreator.CreateSocketStream(IPAddress ip, Boolean unix)
   在 MySql.Data.Common.StreamCreator.GetStream(UInt32 timeout)
   在 MySql.Data.MySqlClient.NativeDriver.Open()
   --- 内部异常堆栈跟踪的结尾 ---
   在 MySql.Data.MySqlClient.NativeDriver.Open()
   在 MySql.Data.MySqlClient.Driver.Open()
   在 MySql.Data.MySqlClient.Driver.Create(MySqlConnectionStringBuilder settings)
   在 MySql.Data.MySqlClient.MySqlPool.GetPooledConnection()
   在 MySql.Data.MySqlClient.MySqlPool.TryToGetDriver()
   在 MySql.Data.MySqlClient.MySqlPool.GetConnection()
   在 MySql.Data.MySqlClient.MySqlConnection.Open()
   在 XCode.DataAccessLayer.DbSession.Open()
   在 XCode.DataAccessLayer.DbSession.BeginTransaction()
   --- 内部异常堆栈跟踪的结尾 ---
   在 XCode.DataAccessLayer.DbSession.BeginTransaction()
   在 XCode.DataAccessLayer.DAL.BeginTransaction()
   在 XCode.Entity`1.Meta.BeginTrans()
   在 XCode.Entity`1.DoAction(Func`1 func, Nullable`1 isnew)
   在 XCode.Entity`1.Update()
   在 XCode.Cache.SingleEntityCache`2.<>c__DisplayClass1c.<Clear>b__1b()
   在 XCode.Cache.CacheBase`1.InvokeFill(Func callback)

#Software: .
#ProcessID: 2136
#AppDomain: c5a66244-1-129931979075876651
#BaseDirectory: C:\DevelopMent\Bioinfo\BioinfoWebSite\
#Date: 2012-09-27
#Fields: Time ThreadID IsPoolThread ThreadName Message
13:38:28.274 4 W - NewLife.Core v3.8.2012.0803 Build 2012-09-25 12:03:50
13:38:28.274 4 W - 为NewLife.CommonEntity.IManageProvider配置注册YWSManageProvider，标识Identity=，优先级Priority=5！
13:38:30.021 4 W - NewLife.XCode v8.8.2012.0828 Build 2012-09-25 12:01:34
13:38:30.021 4 W - 检查实体NewLife.CommonEntity.Setting的数据表架构，模式：CheckTableWhenFirstUse
13:38:30.161 4 W - 初始化NewLife.CommonEntity.Setting数据
13:38:30.177 4 W - 开始检查连接[Common/MySql]的数据库架构……
13:38:30.255 4 W - [Common]的所有实体类（18个）：Sequence,GuidCategory,Administrator,Menu,Role,RoleMenu,Log,Area,User,Simple,SimpleTree,Setting,Statistics,UserProfile,Attachment,Category,MyRole,Admin
13:38:30.255 4 W - [Common]需要检查架构的实体类（2个）：MyRole,Admin
13:38:30.255 4 W - Common待检查表架构的实体个数：2
13:38:30.333 8 Y - DropDefault(LastLogin)
13:38:30.489 4 W - DropDefault(LastLogin)
13:38:30.551 4 W - 检查连接[Common/MySql]的数据库架构耗时00:00:00.3818556
13:38:30.551 8 Y - 初始化NewLife.YWS.Entities.Admin数据
13:38:30.551 4 W - 一级缓存：关闭缓存
13:38:33.531 4 W - 更新实体缓存（第1次）：NewLife.YWS.Entities.Admin 原因：第一次 Administrator<>.FindByName(String name)<-.Login(String username,String password,Int32 hashTimes)
13:38:33.546 4 W - 完成更新缓存（第1次）：NewLife.YWS.Entities.Admin
13:38:33.578 4 W - 清空实体缓存：NewLife.YWS.Entities.Admin 原因：修改数据后提交事务
13:38:33.619 4 W - 检查实体NewLife.CommonEntity.Log的数据表架构，模式：CheckTableWhenFirstUse
13:38:33.620 4 W - DropDefault(OccurTime)
13:38:33.620 4 W - AddDefault(OccurTime,)
13:38:33.620 4 W - 初始化NewLife.CommonEntity.Log数据
13:38:33.673 4 W - 更新实体缓存（第1次）：NewLife.YWS.Entities.MyRole 原因：第一次 Role<>.FindByID(Int32 id)<-
13:38:33.673 4 W - 初始化NewLife.YWS.Entities.MyRole数据
13:38:33.683 4 W - 检查实体NewLife.CommonEntity.RoleMenu的数据表架构，模式：CheckTableWhenFirstUse
13:38:33.683 4 W - 初始化NewLife.CommonEntity.RoleMenu数据
13:38:33.683 4 W - 如果某一个菜单对应的RoleMenu（角色菜单对应关系）为空或者只有一个，则授权第一个角色访问所有菜单！
13:38:33.699 4 W - 更新实体缓存（第1次）：NewLife.CommonEntity.Menu 原因：第一次 EntityTree<,>.FindAllByParent(EntityTree<,>.TKey parentKey)<-.FindChilds()
13:38:33.699 4 W - 检查实体NewLife.CommonEntity.Menu的数据表架构，模式：CheckTableWhenFirstUse
13:38:33.730 4 W - 初始化NewLife.CommonEntity.Menu数据
13:38:33.746 4 W - 完成更新缓存（第1次）：NewLife.CommonEntity.Menu
13:38:33.761 4 W - 更新实体缓存（第1次）：NewLife.CommonEntity.RoleMenu 原因：第一次 RoleMenu<>.CheckNonePerssion(Int32 menuID)<-Role<,,>.InitData()
13:38:33.761 4 W - 完成更新缓存（第1次）：NewLife.CommonEntity.RoleMenu
13:38:33.777 4 W - 完成更新缓存（第1次）：NewLife.YWS.Entities.MyRole
13:38:37.820 4 W - 初始化Bioinfo.Entites.News数据
13:38:39.864 4 W - 更新实体缓存（第1次）：Bioinfo.Entites.News 原因：第一次 Entity<>.FindAllWithCache()<-RuntimeMethodHandle._InvokeMethodFast(IRuntimeMethodInfo method,Object target,Object[] arguments,SignatureStruct& sig,MethodAttributes methodAttributes,RuntimeType typeOwner)
13:38:39.880 4 W - 完成更新缓存（第1次）：Bioinfo.Entites.News
13:47:25.238 2 N - 清空单对象缓存：NewLife.CommonEntity.Setting

#Software: .
#ProcessID: 3832
#AppDomain: c5a66244-1-129931988366796714
#BaseDirectory: C:\DevelopMent\Bioinfo\BioinfoWebSite\
#Date: 2012-09-27
#Fields: Time ThreadID IsPoolThread ThreadName Message
13:53:57.412 4 W - NewLife.Core v3.8.2012.0803 Build 2012-09-25 12:03:50
13:53:57.428 4 W - 为NewLife.CommonEntity.IManageProvider配置注册YWSManageProvider，标识Identity=，优先级Priority=5！
13:53:59.316 8 W - NewLife.XCode v8.8.2012.0828 Build 2012-09-25 12:01:34
13:53:59.316 8 W - 检查实体NewLife.CommonEntity.Setting的数据表架构，模式：CheckTableWhenFirstUse
13:53:59.472 8 W - 初始化NewLife.CommonEntity.Setting数据
13:53:59.472 8 W - 开始检查连接[Common/MySql]的数据库架构……
13:53:59.565 8 W - [Common]的所有实体类（18个）：Sequence,GuidCategory,Administrator,Menu,Role,RoleMenu,Log,Area,User,Simple,SimpleTree,Setting,Statistics,UserProfile,Attachment,Category,MyRole,Admin
13:53:59.565 8 W - [Common]需要检查架构的实体类（2个）：MyRole,Admin
13:53:59.565 8 W - Common待检查表架构的实体个数：2
13:53:59.643 4 Y - DropDefault(LastLogin)
13:53:59.799 8 W - DropDefault(LastLogin)
13:53:59.862 8 W - 检查连接[Common/MySql]的数据库架构耗时00:00:00.3908613
13:53:59.862 4 Y - 初始化NewLife.YWS.Entities.Admin数据
13:53:59.877 8 W - 一级缓存：关闭缓存
13:54:15.765 8 W - 更新实体缓存（第1次）：NewLife.YWS.Entities.Admin 原因：第一次 Administrator<>.FindByName(String name)<-.Login(String username,String password,Int32 hashTimes)
13:54:15.780 8 W - 完成更新缓存（第1次）：NewLife.YWS.Entities.Admin
13:54:15.812 8 W - 清空实体缓存：NewLife.YWS.Entities.Admin 原因：修改数据后提交事务
13:54:15.848 8 W - 检查实体NewLife.CommonEntity.Log的数据表架构，模式：CheckTableWhenFirstUse
13:54:15.917 8 W - DropDefault(OccurTime)
13:54:15.917 8 W - AddDefault(OccurTime,)
13:54:15.917 8 W - 初始化NewLife.CommonEntity.Log数据
13:54:15.980 8 W - 更新实体缓存（第1次）：NewLife.YWS.Entities.MyRole 原因：第一次 Role<>.FindByID(Int32 id)<-
13:54:15.980 8 W - 初始化NewLife.YWS.Entities.MyRole数据
13:54:15.995 8 W - 检查实体NewLife.CommonEntity.RoleMenu的数据表架构，模式：CheckTableWhenFirstUse
13:54:15.995 8 W - 初始化NewLife.CommonEntity.RoleMenu数据
13:54:15.995 8 W - 如果某一个菜单对应的RoleMenu（角色菜单对应关系）为空或者只有一个，则授权第一个角色访问所有菜单！
13:54:16.011 8 W - 更新实体缓存（第1次）：NewLife.CommonEntity.Menu 原因：第一次 EntityTree<,>.FindAllByParent(EntityTree<,>.TKey parentKey)<-.FindChilds()
13:54:16.011 8 W - 检查实体NewLife.CommonEntity.Menu的数据表架构，模式：CheckTableWhenFirstUse
13:54:16.042 8 W - 初始化NewLife.CommonEntity.Menu数据
13:54:16.042 8 W - 完成更新缓存（第1次）：NewLife.CommonEntity.Menu
13:54:16.058 8 W - 更新实体缓存（第1次）：NewLife.CommonEntity.RoleMenu 原因：第一次 RoleMenu<>.CheckNonePerssion(Int32 menuID)<-Role<,,>.InitData()
13:54:16.058 8 W - 完成更新缓存（第1次）：NewLife.CommonEntity.RoleMenu
13:54:16.073 8 W - 完成更新缓存（第1次）：NewLife.YWS.Entities.MyRole
13:56:54.730 2 N - 清空单对象缓存：NewLife.CommonEntity.Setting

#Software: .
#ProcessID: 4576
#AppDomain: c5a66244-1-129931990206199479
#BaseDirectory: C:\DevelopMent\Bioinfo\BioinfoWebSite\
#Date: 2012-09-27
#Fields: Time ThreadID IsPoolThread ThreadName Message
13:57:01.399 4 W - NewLife.Core v3.8.2012.0803 Build 2012-09-25 12:03:50
13:57:01.399 4 W - 为NewLife.CommonEntity.IManageProvider配置注册YWSManageProvider，标识Identity=，优先级Priority=5！
13:57:03.147 4 W - NewLife.XCode v8.8.2012.0828 Build 2012-09-25 12:01:34
13:57:03.147 4 W - 检查实体NewLife.CommonEntity.Setting的数据表架构，模式：CheckTableWhenFirstUse
13:57:03.287 4 W - 初始化NewLife.CommonEntity.Setting数据
13:57:03.287 4 W - 开始检查连接[Common/MySql]的数据库架构……
13:57:03.381 4 W - [Common]的所有实体类（18个）：Sequence,GuidCategory,Administrator,Menu,Role,RoleMenu,Log,Area,User,Simple,SimpleTree,Setting,Statistics,UserProfile,Attachment,Category,MyRole,Admin
13:57:03.381 4 W - [Common]需要检查架构的实体类（2个）：MyRole,Admin
13:57:03.381 4 W - Common待检查表架构的实体个数：2
13:57:03.459 8 Y - DropDefault(LastLogin)
13:57:03.615 4 W - DropDefault(LastLogin)
13:57:03.677 4 W - 检查连接[Common/MySql]的数据库架构耗时00:00:00.3853739
13:57:03.677 8 Y - 初始化NewLife.YWS.Entities.Admin数据
13:57:03.677 4 W - 一级缓存：关闭缓存
13:57:05.284 4 W - 更新实体缓存（第1次）：NewLife.YWS.Entities.Admin 原因：第一次 Administrator<>.FindByName(String name)<-.Login(String username,String password,Int32 hashTimes)
13:57:05.299 4 W - 完成更新缓存（第1次）：NewLife.YWS.Entities.Admin
13:57:05.331 4 W - 清空实体缓存：NewLife.YWS.Entities.Admin 原因：修改数据后提交事务
13:57:05.376 4 W - 检查实体NewLife.CommonEntity.Log的数据表架构，模式：CheckTableWhenFirstUse
13:57:05.376 4 W - DropDefault(OccurTime)
13:57:05.376 4 W - AddDefault(OccurTime,)
13:57:05.376 4 W - 初始化NewLife.CommonEntity.Log数据
13:57:05.436 4 W - 更新实体缓存（第1次）：NewLife.YWS.Entities.MyRole 原因：第一次 Role<>.FindByID(Int32 id)<-
13:57:05.436 4 W - 初始化NewLife.YWS.Entities.MyRole数据
13:57:05.446 4 W - 检查实体NewLife.CommonEntity.RoleMenu的数据表架构，模式：CheckTableWhenFirstUse
13:57:05.446 4 W - 初始化NewLife.CommonEntity.RoleMenu数据
13:57:05.446 4 W - 如果某一个菜单对应的RoleMenu（角色菜单对应关系）为空或者只有一个，则授权第一个角色访问所有菜单！
13:57:05.456 4 W - 更新实体缓存（第1次）：NewLife.CommonEntity.Menu 原因：第一次 EntityTree<,>.FindAllByParent(EntityTree<,>.TKey parentKey)<-.FindChilds()
13:57:05.456 4 W - 检查实体NewLife.CommonEntity.Menu的数据表架构，模式：CheckTableWhenFirstUse
13:57:05.503 4 W - 初始化NewLife.CommonEntity.Menu数据
13:57:05.519 4 W - 完成更新缓存（第1次）：NewLife.CommonEntity.Menu
13:57:05.519 4 W - 更新实体缓存（第1次）：NewLife.CommonEntity.RoleMenu 原因：第一次 RoleMenu<>.CheckNonePerssion(Int32 menuID)<-Role<,,>.InitData()
13:57:05.534 4 W - 完成更新缓存（第1次）：NewLife.CommonEntity.RoleMenu
13:57:05.550 4 W - 完成更新缓存（第1次）：NewLife.YWS.Entities.MyRole
13:57:55.522 2 N - 清空单对象缓存：NewLife.CommonEntity.Setting
13:57:55.522 2 N - 错误的连接字符串：Server=192.168.1.47;Database=Bioinfodb2;Uid=root;Pwd=yrshabc123
13:57:55.538 2 N - XCode.Exceptions.XDbSessionException: Unable to connect to any of the specified MySQL hosts.[DB:Common/MySql] ---> MySql.Data.MySqlClient.MySqlException: Unable to connect to any of the specified MySQL hosts. ---> System.ApplicationException: 应用程序中的错误。
   在 System.Threading.ThreadPool.RegisterWaitForSingleObjectNative(WaitHandle waitHandle, Object state, UInt32 timeOutInterval, Boolean executeOnlyOnce, RegisteredWaitHandle registeredWaitHandle, StackCrawlMark& stackMark, Boolean compressStack)
   在 System.Threading.ThreadPool.RegisterWaitForSingleObject(WaitHandle waitObject, WaitOrTimerCallback callBack, Object state, UInt32 millisecondsTimeOutInterval, Boolean executeOnlyOnce, StackCrawlMark& stackMark, Boolean compressStack)
   在 System.Threading.ThreadPool.UnsafeRegisterWaitForSingleObject(WaitHandle waitObject, WaitOrTimerCallback callBack, Object state, Int32 millisecondsTimeOutInterval, Boolean executeOnlyOnce)
   在 System.Net.Sockets.Socket.SetAsyncEventSelect(AsyncEventBits blockEventBits)
   在 System.Net.Sockets.Socket.DoBeginConnect(EndPoint endPointSnapshot, SocketAddress socketAddress, LazyAsyncResult asyncResult)
   在 System.Net.Sockets.Socket.BeginConnect(EndPoint remoteEP, AsyncCallback callback, Object state)
   在 MySql.Data.Common.StreamCreator.CreateSocketStream(IPAddress ip, Boolean unix)
   在 MySql.Data.Common.StreamCreator.GetStream(UInt32 timeout)
   在 MySql.Data.MySqlClient.NativeDriver.Open()
   --- 内部异常堆栈跟踪的结尾 ---
   在 MySql.Data.MySqlClient.NativeDriver.Open()
   在 MySql.Data.MySqlClient.Driver.Open()
   在 MySql.Data.MySqlClient.Driver.Create(MySqlConnectionStringBuilder settings)
   在 MySql.Data.MySqlClient.MySqlPool.GetPooledConnection()
   在 MySql.Data.MySqlClient.MySqlPool.TryToGetDriver()
   在 MySql.Data.MySqlClient.MySqlPool.GetConnection()
   在 MySql.Data.MySqlClient.MySqlConnection.Open()
   在 XCode.DataAccessLayer.DbSession.Open()
   在 XCode.DataAccessLayer.DbSession.BeginTransaction()
   --- 内部异常堆栈跟踪的结尾 ---
   在 XCode.DataAccessLayer.DbSession.BeginTransaction()
   在 XCode.DataAccessLayer.DAL.BeginTransaction()
   在 XCode.Entity`1.Meta.BeginTrans()
   在 XCode.Entity`1.DoAction(Func`1 func, Nullable`1 isnew)
   在 XCode.Entity`1.Update()
   在 XCode.Cache.SingleEntityCache`2.<>c__DisplayClass1c.<Clear>b__1b()
   在 XCode.Cache.CacheBase`1.InvokeFill(Func callback)

#Software: .
#ProcessID: 964
#AppDomain: c5a66244-1-129931993095672987
#BaseDirectory: C:\DevelopMent\Bioinfo\BioinfoWebSite\
#Date: 2012-09-27
#Fields: Time ThreadID IsPoolThread ThreadName Message
14:01:50.253 4 W - NewLife.Core v3.8.2012.0803 Build 2012-09-25 12:03:50
14:01:50.269 4 W - 为NewLife.CommonEntity.IManageProvider配置注册YWSManageProvider，标识Identity=，优先级Priority=5！
14:01:52.047 4 W - NewLife.XCode v8.8.2012.0828 Build 2012-09-25 12:01:34
14:01:52.047 4 W - 检查实体NewLife.CommonEntity.Setting的数据表架构，模式：CheckTableWhenFirstUse
14:01:52.188 4 W - 初始化NewLife.CommonEntity.Setting数据
14:01:52.188 4 W - 开始检查连接[Common/MySql]的数据库架构……
14:01:52.281 4 W - [Common]的所有实体类（18个）：Sequence,GuidCategory,Administrator,Menu,Role,RoleMenu,Log,Area,User,Simple,SimpleTree,Setting,Statistics,UserProfile,Attachment,Category,MyRole,Admin
14:01:52.281 4 W - [Common]需要检查架构的实体类（2个）：MyRole,Admin
14:01:52.281 4 W - Common待检查表架构的实体个数：2
14:01:52.344 9 Y - DropDefault(LastLogin)
14:01:52.484 4 W - DropDefault(LastLogin)
14:01:52.562 4 W - 检查连接[Common/MySql]的数据库架构耗时00:00:00.3624039
14:01:52.562 9 Y - 初始化NewLife.YWS.Entities.Admin数据
14:01:52.562 4 W - 一级缓存：关闭缓存
14:01:56.400 9 W - 更新实体缓存（第1次）：NewLife.YWS.Entities.Admin 原因：第一次 Administrator<>.FindByName(String name)<-.Login(String username,String password,Int32 hashTimes)
14:01:56.400 9 W - 完成更新缓存（第1次）：NewLife.YWS.Entities.Admin
14:01:56.447 9 W - 清空实体缓存：NewLife.YWS.Entities.Admin 原因：修改数据后提交事务
14:01:56.466 9 W - 检查实体NewLife.CommonEntity.Log的数据表架构，模式：CheckTableWhenFirstUse
14:01:56.476 9 W - DropDefault(OccurTime)
14:01:56.476 9 W - AddDefault(OccurTime,)
14:01:56.476 9 W - 初始化NewLife.CommonEntity.Log数据
14:01:56.546 9 W - 更新实体缓存（第1次）：NewLife.YWS.Entities.MyRole 原因：第一次 Role<>.FindByID(Int32 id)<-
14:01:56.546 9 W - 初始化NewLife.YWS.Entities.MyRole数据
14:01:56.562 9 W - 检查实体NewLife.CommonEntity.RoleMenu的数据表架构，模式：CheckTableWhenFirstUse
14:01:56.562 9 W - 初始化NewLife.CommonEntity.RoleMenu数据
14:01:56.562 9 W - 如果某一个菜单对应的RoleMenu（角色菜单对应关系）为空或者只有一个，则授权第一个角色访问所有菜单！
14:01:56.578 9 W - 更新实体缓存（第1次）：NewLife.CommonEntity.Menu 原因：第一次 EntityTree<,>.FindAllByParent(EntityTree<,>.TKey parentKey)<-.FindChilds()
14:01:56.578 9 W - 检查实体NewLife.CommonEntity.Menu的数据表架构，模式：CheckTableWhenFirstUse
14:01:56.609 9 W - 初始化NewLife.CommonEntity.Menu数据
14:01:56.609 9 W - 完成更新缓存（第1次）：NewLife.CommonEntity.Menu
14:01:56.624 9 W - 更新实体缓存（第1次）：NewLife.CommonEntity.RoleMenu 原因：第一次 RoleMenu<>.CheckNonePerssion(Int32 menuID)<-Role<,,>.InitData()
14:01:56.624 9 W - 完成更新缓存（第1次）：NewLife.CommonEntity.RoleMenu
14:01:56.640 9 W - 完成更新缓存（第1次）：NewLife.YWS.Entities.MyRole
14:02:01.314 12 W - 初始化Bioinfo.Entites.News数据
14:02:02.936 12 W - 更新实体缓存（第1次）：Bioinfo.Entites.News 原因：第一次 Entity<>.FindAllWithCache()<-RuntimeMethodHandle._InvokeMethodFast(IRuntimeMethodInfo method,Object target,Object[] arguments,SignatureStruct& sig,MethodAttributes methodAttributes,RuntimeType typeOwner)
14:02:02.936 12 W - 完成更新缓存（第1次）：Bioinfo.Entites.News
14:18:30.741 2 N - 清空单对象缓存：NewLife.CommonEntity.Setting

#Software: .
#ProcessID: 3856
#AppDomain: c5a66244-1-129932006358297065
#BaseDirectory: C:\DevelopMent\Bioinfo\BioinfoWebSite\
#Date: 2012-09-27
#Fields: Time ThreadID IsPoolThread ThreadName Message
14:23:58.943 4 W - NewLife.Core v3.8.2012.0803 Build 2012-09-25 12:03:50
14:23:58.951 4 W - 为NewLife.CommonEntity.IManageProvider配置注册YWSManageProvider，标识Identity=，优先级Priority=5！
14:24:00.024 4 W - NewLife.XCode v8.8.2012.0828 Build 2012-09-25 12:01:34
14:24:00.026 4 W - 一级缓存：关闭缓存
14:24:00.065 4 W - 更新实体缓存（第1次）：NewLife.YWS.Entities.Admin 原因：第一次 Administrator<>.FindByName(String name)<-.Login(String username,String password,Int32 hashTimes)
14:24:00.625 4 W - DropDefault(LastLogin)
14:24:00.678 4 W - 初始化NewLife.YWS.Entities.Admin数据
14:24:00.694 4 W - 开始检查连接[Common/MySql]的数据库架构……
14:24:00.778 4 W - [Common]的所有实体类（22个）：Category,News,Messages,Setting,Sequence,GuidCategory,Administrator,Menu,Role,RoleMenu,Log,Area,User,Simple,SimpleTree,Setting,Statistics,UserProfile,Attachment,Category,MyRole,Admin
14:24:00.778 4 W - [Common]需要检查架构的实体类（6个）：Category,News,Messages,Setting,MyRole,Admin
14:24:00.778 4 W - Common待检查表架构的实体个数：6
14:24:00.940 4 W - DropDefault(LastLogin)
14:24:00.976 4 W - 检查连接[Common/MySql]的数据库架构耗时00:00:00.2804678
14:24:01.003 4 W - 完成更新缓存（第1次）：NewLife.YWS.Entities.Admin
14:24:01.064 4 W - 清空实体缓存：NewLife.YWS.Entities.Admin 原因：修改数据后提交事务
14:24:01.091 4 W - 检查实体NewLife.CommonEntity.Log的数据表架构，模式：CheckTableWhenFirstUse
14:24:01.092 4 W - DropDefault(OccurTime)
14:24:01.092 4 W - AddDefault(OccurTime,)
14:24:01.092 4 W - 初始化NewLife.CommonEntity.Log数据
14:24:01.143 4 W - 更新实体缓存（第1次）：NewLife.YWS.Entities.MyRole 原因：第一次 Role<>.FindByID(Int32 id)<-
14:24:01.144 4 W - 初始化NewLife.YWS.Entities.MyRole数据
14:24:01.157 4 W - 检查实体NewLife.CommonEntity.RoleMenu的数据表架构，模式：CheckTableWhenFirstUse
14:24:01.160 4 W - 初始化NewLife.CommonEntity.RoleMenu数据
14:24:01.161 4 W - 如果某一个菜单对应的RoleMenu（角色菜单对应关系）为空或者只有一个，则授权第一个角色访问所有菜单！
14:24:01.173 4 W - 更新实体缓存（第1次）：NewLife.CommonEntity.Menu 原因：第一次 EntityTree<,>.FindAllByParent(EntityTree<,>.TKey parentKey)<-.FindChilds()
14:24:01.174 4 W - 检查实体NewLife.CommonEntity.Menu的数据表架构，模式：CheckTableWhenFirstUse
14:24:01.206 4 W - 初始化NewLife.CommonEntity.Menu数据
14:24:01.216 4 W - 完成更新缓存（第1次）：NewLife.CommonEntity.Menu
14:24:01.229 4 W - 更新实体缓存（第1次）：NewLife.CommonEntity.RoleMenu 原因：第一次 RoleMenu<>.CheckNonePerssion(Int32 menuID)<-Role<,,>.InitData()
14:24:01.234 4 W - 完成更新缓存（第1次）：NewLife.CommonEntity.RoleMenu
14:24:01.248 4 W - 完成更新缓存（第1次）：NewLife.YWS.Entities.MyRole
14:24:01.288 4 W - 检查实体NewLife.CommonEntity.Setting的数据表架构，模式：CheckTableWhenFirstUse
14:24:01.289 4 W - 初始化NewLife.CommonEntity.Setting数据
14:24:35.002 4 W - 初始化Bioinfo.Entites.News数据
14:25:00.235 2 N - 清空单对象缓存：NewLife.CommonEntity.Setting
14:25:00.251 2 N - 错误的连接字符串：Server=192.168.1.47;Database=Bioinfodb2;Uid=root;Pwd=yrshabc123
14:25:00.251 2 N - XCode.Exceptions.XDbSessionException: Unable to connect to any of the specified MySQL hosts.[DB:Common/MySql] ---> MySql.Data.MySqlClient.MySqlException: Unable to connect to any of the specified MySQL hosts. ---> System.ApplicationException: 应用程序中的错误。
   在 System.Threading.ThreadPool.RegisterWaitForSingleObjectNative(WaitHandle waitHandle, Object state, UInt32 timeOutInterval, Boolean executeOnlyOnce, RegisteredWaitHandle registeredWaitHandle, StackCrawlMark& stackMark, Boolean compressStack)
   在 System.Threading.ThreadPool.RegisterWaitForSingleObject(WaitHandle waitObject, WaitOrTimerCallback callBack, Object state, UInt32 millisecondsTimeOutInterval, Boolean executeOnlyOnce, StackCrawlMark& stackMark, Boolean compressStack)
   在 System.Threading.ThreadPool.UnsafeRegisterWaitForSingleObject(WaitHandle waitObject, WaitOrTimerCallback callBack, Object state, Int32 millisecondsTimeOutInterval, Boolean executeOnlyOnce)
   在 System.Net.Sockets.Socket.SetAsyncEventSelect(AsyncEventBits blockEventBits)
   在 System.Net.Sockets.Socket.DoBeginConnect(EndPoint endPointSnapshot, SocketAddress socketAddress, LazyAsyncResult asyncResult)
   在 System.Net.Sockets.Socket.BeginConnect(EndPoint remoteEP, AsyncCallback callback, Object state)
   在 MySql.Data.Common.StreamCreator.CreateSocketStream(IPAddress ip, Boolean unix)
   在 MySql.Data.Common.StreamCreator.GetStream(UInt32 timeout)
   在 MySql.Data.MySqlClient.NativeDriver.Open()
   --- 内部异常堆栈跟踪的结尾 ---
   在 MySql.Data.MySqlClient.NativeDriver.Open()
   在 MySql.Data.MySqlClient.Driver.Open()
   在 MySql.Data.MySqlClient.Driver.Create(MySqlConnectionStringBuilder settings)
   在 MySql.Data.MySqlClient.MySqlPool.GetPooledConnection()
   在 MySql.Data.MySqlClient.MySqlPool.TryToGetDriver()
   在 MySql.Data.MySqlClient.MySqlPool.GetConnection()
   在 MySql.Data.MySqlClient.MySqlConnection.Open()
   在 XCode.DataAccessLayer.DbSession.Open()
   在 XCode.DataAccessLayer.DbSession.BeginTransaction()
   --- 内部异常堆栈跟踪的结尾 ---
   在 XCode.DataAccessLayer.DbSession.BeginTransaction()
   在 XCode.DataAccessLayer.DAL.BeginTransaction()
   在 XCode.Entity`1.Meta.BeginTrans()
   在 XCode.Entity`1.DoAction(Func`1 func, Nullable`1 isnew)
   在 XCode.Entity`1.Update()
   在 XCode.Cache.SingleEntityCache`2.<>c__DisplayClass1c.<Clear>b__1b()
   在 XCode.Cache.CacheBase`1.InvokeFill(Func callback)

#Software: .
#ProcessID: 4008
#AppDomain: c5a66244-1-129932007062144797
#BaseDirectory: C:\DevelopMent\Bioinfo\BioinfoWebSite\
#Date: 2012-09-27
#Fields: Time ThreadID IsPoolThread ThreadName Message
14:25:07.056 4 W - NewLife.Core v3.8.2012.0803 Build 2012-09-25 12:03:50
14:25:07.056 4 W - 为NewLife.CommonEntity.IManageProvider配置注册YWSManageProvider，标识Identity=，优先级Priority=5！
14:25:08.897 9 W - NewLife.XCode v8.8.2012.0828 Build 2012-09-25 12:01:34
14:25:08.897 9 W - 检查实体NewLife.CommonEntity.Setting的数据表架构，模式：CheckTableWhenFirstUse
14:25:09.053 9 W - 初始化NewLife.CommonEntity.Setting数据
14:25:09.069 9 W - 开始检查连接[Common/MySql]的数据库架构……
14:25:09.147 9 W - [Common]的所有实体类（18个）：Sequence,GuidCategory,Administrator,Menu,Role,RoleMenu,Log,Area,User,Simple,SimpleTree,Setting,Statistics,UserProfile,Attachment,Category,MyRole,Admin
14:25:09.147 9 W - [Common]需要检查架构的实体类（2个）：MyRole,Admin
14:25:09.147 9 W - Common待检查表架构的实体个数：2
14:25:09.225 4 Y - DropDefault(LastLogin)
14:25:09.381 9 W - DropDefault(LastLogin)
14:25:09.474 9 W - 检查连接[Common/MySql]的数据库架构耗时00:00:00.4049241
14:25:09.474 4 Y - 初始化NewLife.YWS.Entities.Admin数据
14:25:09.474 9 W - 一级缓存：关闭缓存
14:25:26.851 4 W - 更新实体缓存（第1次）：NewLife.YWS.Entities.Admin 原因：第一次 Administrator<>.FindByName(String name)<-.Login(String username,String password,Int32 hashTimes)
14:25:26.859 4 W - 完成更新缓存（第1次）：NewLife.YWS.Entities.Admin
14:25:26.886 4 W - 清空实体缓存：NewLife.YWS.Entities.Admin 原因：修改数据后提交事务
14:25:26.916 4 W - 检查实体NewLife.CommonEntity.Log的数据表架构，模式：CheckTableWhenFirstUse
14:25:26.976 4 W - DropDefault(OccurTime)
14:25:26.976 4 W - AddDefault(OccurTime,)
14:25:26.976 4 W - 初始化NewLife.CommonEntity.Log数据
14:25:27.054 9 W - 更新实体缓存（第1次）：NewLife.YWS.Entities.MyRole 原因：第一次 Role<>.FindByID(Int32 id)<-
14:25:27.054 9 W - 初始化NewLife.YWS.Entities.MyRole数据
14:25:27.070 9 W - 检查实体NewLife.CommonEntity.RoleMenu的数据表架构，模式：CheckTableWhenFirstUse
14:25:27.132 9 W - 初始化NewLife.CommonEntity.RoleMenu数据
14:25:27.132 9 W - 如果某一个菜单对应的RoleMenu（角色菜单对应关系）为空或者只有一个，则授权第一个角色访问所有菜单！
14:25:27.148 9 W - 更新实体缓存（第1次）：NewLife.CommonEntity.Menu 原因：第一次 EntityTree<,>.FindAllByParent(EntityTree<,>.TKey parentKey)<-.FindChilds()
14:25:27.148 9 W - 检查实体NewLife.CommonEntity.Menu的数据表架构，模式：CheckTableWhenFirstUse
14:25:27.210 9 W - 初始化NewLife.CommonEntity.Menu数据
14:25:27.210 9 W - 完成更新缓存（第1次）：NewLife.CommonEntity.Menu
14:25:27.226 9 W - 更新实体缓存（第1次）：NewLife.CommonEntity.RoleMenu 原因：第一次 RoleMenu<>.CheckNonePerssion(Int32 menuID)<-Role<,,>.InitData()
14:25:27.226 9 W - 完成更新缓存（第1次）：NewLife.CommonEntity.RoleMenu
14:25:27.241 9 W - 完成更新缓存（第1次）：NewLife.YWS.Entities.MyRole
14:26:06.319 12 W - 初始化Bioinfo.Entites.News数据
14:28:49.169 2 N - 清空单对象缓存：NewLife.CommonEntity.Setting

#Software: .
#ProcessID: 2764
#AppDomain: c5a66244-1-129932009358307414
#BaseDirectory: C:\DevelopMent\Bioinfo\BioinfoWebSite\
#Date: 2012-09-27
#Fields: Time ThreadID IsPoolThread ThreadName Message
14:28:56.595 4 W - NewLife.Core v3.8.2012.0803 Build 2012-09-25 12:03:50
14:28:56.595 4 W - 为NewLife.CommonEntity.IManageProvider配置注册YWSManageProvider，标识Identity=，优先级Priority=5！
14:28:58.295 4 W - NewLife.XCode v8.8.2012.0828 Build 2012-09-25 12:01:34
14:28:58.295 4 W - 检查实体NewLife.CommonEntity.Setting的数据表架构，模式：CheckTableWhenFirstUse
14:28:58.420 4 W - 初始化NewLife.CommonEntity.Setting数据
14:28:58.420 4 W - 开始检查连接[Common/MySql]的数据库架构……
14:28:58.513 4 W - [Common]的所有实体类（18个）：Sequence,GuidCategory,Administrator,Menu,Role,RoleMenu,Log,Area,User,Simple,SimpleTree,Setting,Statistics,UserProfile,Attachment,Category,MyRole,Admin
14:28:58.513 4 W - [Common]需要检查架构的实体类（2个）：MyRole,Admin
14:28:58.513 4 W - Common待检查表架构的实体个数：2
14:28:58.576 8 Y - DropDefault(LastLogin)
14:28:58.732 4 W - DropDefault(LastLogin)
14:28:58.794 4 W - 检查连接[Common/MySql]的数据库架构耗时00:00:00.3703251
14:28:58.794 8 Y - 初始化NewLife.YWS.Entities.Admin数据
14:28:58.794 4 W - 一级缓存：关闭缓存
14:29:00.245 8 W - 更新实体缓存（第1次）：NewLife.YWS.Entities.Admin 原因：第一次 Administrator<>.FindByName(String name)<-.Login(String username,String password,Int32 hashTimes)
14:29:00.261 8 W - 完成更新缓存（第1次）：NewLife.YWS.Entities.Admin
14:29:00.292 8 W - 清空实体缓存：NewLife.YWS.Entities.Admin 原因：修改数据后提交事务
14:29:00.317 8 W - 检查实体NewLife.CommonEntity.Log的数据表架构，模式：CheckTableWhenFirstUse
14:29:00.317 8 W - DropDefault(OccurTime)
14:29:00.317 8 W - AddDefault(OccurTime,)
14:29:00.317 8 W - 初始化NewLife.CommonEntity.Log数据
14:29:00.377 11 W - 更新实体缓存（第1次）：NewLife.YWS.Entities.MyRole 原因：第一次 Role<>.FindByID(Int32 id)<-
14:29:00.377 11 W - 初始化NewLife.YWS.Entities.MyRole数据
14:29:00.387 11 W - 检查实体NewLife.CommonEntity.RoleMenu的数据表架构，模式：CheckTableWhenFirstUse
14:29:00.444 11 W - 初始化NewLife.CommonEntity.RoleMenu数据
14:29:00.444 11 W - 如果某一个菜单对应的RoleMenu（角色菜单对应关系）为空或者只有一个，则授权第一个角色访问所有菜单！
14:29:00.460 11 W - 更新实体缓存（第1次）：NewLife.CommonEntity.Menu 原因：第一次 EntityTree<,>.FindAllByParent(EntityTree<,>.TKey parentKey)<-.FindChilds()
14:29:00.460 11 W - 检查实体NewLife.CommonEntity.Menu的数据表架构，模式：CheckTableWhenFirstUse
14:29:00.507 11 W - 初始化NewLife.CommonEntity.Menu数据
14:29:00.507 11 W - 完成更新缓存（第1次）：NewLife.CommonEntity.Menu
14:29:00.522 11 W - 更新实体缓存（第1次）：NewLife.CommonEntity.RoleMenu 原因：第一次 RoleMenu<>.CheckNonePerssion(Int32 menuID)<-Role<,,>.InitData()
14:29:00.538 11 W - 完成更新缓存（第1次）：NewLife.CommonEntity.RoleMenu
14:29:00.538 11 W - 完成更新缓存（第1次）：NewLife.YWS.Entities.MyRole
14:29:05.414 8 W - 初始化Bioinfo.Entites.News数据
14:29:19.719 2 N - 清空单对象缓存：NewLife.CommonEntity.Setting
14:29:19.719 2 N - 错误的连接字符串：Server=192.168.1.47;Database=Bioinfodb2;Uid=root;Pwd=yrshabc123
14:29:19.719 2 N - XCode.Exceptions.XDbSessionException: Unable to connect to any of the specified MySQL hosts.[DB:Common/MySql] ---> MySql.Data.MySqlClient.MySqlException: Unable to connect to any of the specified MySQL hosts. ---> System.ApplicationException: 应用程序中的错误。
   在 System.Threading.ThreadPool.RegisterWaitForSingleObjectNative(WaitHandle waitHandle, Object state, UInt32 timeOutInterval, Boolean executeOnlyOnce, RegisteredWaitHandle registeredWaitHandle, StackCrawlMark& stackMark, Boolean compressStack)
   在 System.Threading.ThreadPool.RegisterWaitForSingleObject(WaitHandle waitObject, WaitOrTimerCallback callBack, Object state, UInt32 millisecondsTimeOutInterval, Boolean executeOnlyOnce, StackCrawlMark& stackMark, Boolean compressStack)
   在 System.Threading.ThreadPool.UnsafeRegisterWaitForSingleObject(WaitHandle waitObject, WaitOrTimerCallback callBack, Object state, Int32 millisecondsTimeOutInterval, Boolean executeOnlyOnce)
   在 System.Net.Sockets.Socket.SetAsyncEventSelect(AsyncEventBits blockEventBits)
   在 System.Net.Sockets.Socket.DoBeginConnect(EndPoint endPointSnapshot, SocketAddress socketAddress, LazyAsyncResult asyncResult)
   在 System.Net.Sockets.Socket.BeginConnect(EndPoint remoteEP, AsyncCallback callback, Object state)
   在 MySql.Data.Common.StreamCreator.CreateSocketStream(IPAddress ip, Boolean unix)
   在 MySql.Data.Common.StreamCreator.GetStream(UInt32 timeout)
   在 MySql.Data.MySqlClient.NativeDriver.Open()
   --- 内部异常堆栈跟踪的结尾 ---
   在 MySql.Data.MySqlClient.NativeDriver.Open()
   在 MySql.Data.MySqlClient.Driver.Open()
   在 MySql.Data.MySqlClient.Driver.Create(MySqlConnectionStringBuilder settings)
   在 MySql.Data.MySqlClient.MySqlPool.GetPooledConnection()
   在 MySql.Data.MySqlClient.MySqlPool.TryToGetDriver()
   在 MySql.Data.MySqlClient.MySqlPool.GetConnection()
   在 MySql.Data.MySqlClient.MySqlConnection.Open()
   在 XCode.DataAccessLayer.DbSession.Open()
   在 XCode.DataAccessLayer.DbSession.BeginTransaction()
   --- 内部异常堆栈跟踪的结尾 ---
   在 XCode.DataAccessLayer.DbSession.BeginTransaction()
   在 XCode.DataAccessLayer.DAL.BeginTransaction()
   在 XCode.Entity`1.Meta.BeginTrans()
   在 XCode.Entity`1.DoAction(Func`1 func, Nullable`1 isnew)
   在 XCode.Entity`1.Update()
   在 XCode.Cache.SingleEntityCache`2.<>c__DisplayClass1c.<Clear>b__1b()
   在 XCode.Cache.CacheBase`1.InvokeFill(Func callback)

#Software: .
#ProcessID: 4772
#AppDomain: c5a66244-1-129932009934414849
#BaseDirectory: C:\DevelopMent\Bioinfo\BioinfoWebSite\
#Date: 2012-09-27
#Fields: Time ThreadID IsPoolThread ThreadName Message
14:29:54.159 4 W - NewLife.Core v3.8.2012.0803 Build 2012-09-25 12:03:50
14:29:54.174 4 W - 为NewLife.CommonEntity.IManageProvider配置注册YWSManageProvider，标识Identity=，优先级Priority=5！
14:29:56.341 8 W - NewLife.XCode v8.8.2012.0828 Build 2012-09-25 12:01:34
14:29:56.341 8 W - 检查实体NewLife.CommonEntity.Setting的数据表架构，模式：CheckTableWhenFirstUse
14:29:56.534 8 W - 初始化NewLife.CommonEntity.Setting数据
14:29:56.540 8 W - 开始检查连接[Common/MySql]的数据库架构……
14:29:56.677 8 W - [Common]的所有实体类（18个）：Sequence,GuidCategory,Administrator,Menu,Role,RoleMenu,Log,Area,User,Simple,SimpleTree,Setting,Statistics,UserProfile,Attachment,Category,MyRole,Admin
14:29:56.677 8 W - [Common]需要检查架构的实体类（2个）：MyRole,Admin
14:29:56.677 8 W - Common待检查表架构的实体个数：2
14:29:56.720 4 Y - DropDefault(LastLogin)
14:29:56.901 8 W - DropDefault(LastLogin)
14:29:56.961 8 W - 检查连接[Common/MySql]的数据库架构耗时00:00:00.4201209
14:29:56.961 4 Y - 初始化NewLife.YWS.Entities.Admin数据
14:29:56.963 8 W - 一级缓存：关闭缓存
14:30:46.345 4 W - 更新实体缓存（第1次）：NewLife.YWS.Entities.Admin 原因：第一次 Administrator<>.FindByName(String name)<-.Login(String username,String password,Int32 hashTimes)
14:30:46.359 4 W - 完成更新缓存（第1次）：NewLife.YWS.Entities.Admin
14:30:46.399 4 W - 清空实体缓存：NewLife.YWS.Entities.Admin 原因：修改数据后提交事务
14:30:46.423 4 W - 检查实体NewLife.CommonEntity.Log的数据表架构，模式：CheckTableWhenFirstUse
14:30:46.493 4 W - DropDefault(OccurTime)
14:30:46.493 4 W - AddDefault(OccurTime,)
14:30:46.493 4 W - 初始化NewLife.CommonEntity.Log数据
14:30:46.543 10 W - 更新实体缓存（第1次）：NewLife.YWS.Entities.MyRole 原因：第一次 Role<>.FindByID(Int32 id)<-
14:30:46.543 10 W - 初始化NewLife.YWS.Entities.MyRole数据
14:30:46.556 10 W - 检查实体NewLife.CommonEntity.RoleMenu的数据表架构，模式：CheckTableWhenFirstUse
14:30:46.620 10 W - 初始化NewLife.CommonEntity.RoleMenu数据
14:30:46.621 10 W - 如果某一个菜单对应的RoleMenu（角色菜单对应关系）为空或者只有一个，则授权第一个角色访问所有菜单！
14:30:46.635 10 W - 更新实体缓存（第1次）：NewLife.CommonEntity.Menu 原因：第一次 EntityTree<,>.FindAllByParent(EntityTree<,>.TKey parentKey)<-.FindChilds()
14:30:46.636 10 W - 检查实体NewLife.CommonEntity.Menu的数据表架构，模式：CheckTableWhenFirstUse
14:30:46.657 10 W - 初始化NewLife.CommonEntity.Menu数据
14:30:46.666 10 W - 完成更新缓存（第1次）：NewLife.CommonEntity.Menu
14:30:46.680 10 W - 更新实体缓存（第1次）：NewLife.CommonEntity.RoleMenu 原因：第一次 RoleMenu<>.CheckNonePerssion(Int32 menuID)<-Role<,,>.InitData()
14:30:46.685 10 W - 完成更新缓存（第1次）：NewLife.CommonEntity.RoleMenu
14:30:46.698 10 W - 完成更新缓存（第1次）：NewLife.YWS.Entities.MyRole
14:30:50.767 11 W - 初始化Bioinfo.Entites.News数据
14:41:02.328 13 W - 实体缓存<Admin>总次数4，一级命中3（75.00%）
14:41:02.328 13 W - 更新实体缓存（第2次）：NewLife.YWS.Entities.Admin 原因：60秒过期 Administrator<>.FindByName(String name)<-.Login(String username,String password,Int32 hashTimes)
14:41:02.343 13 W - 完成更新缓存（第2次）：NewLife.YWS.Entities.Admin
14:41:02.359 13 W - 清空实体缓存：NewLife.YWS.Entities.Admin 原因：修改数据后提交事务
14:41:02.406 10 W - 实体缓存<MyRole>总次数3，一级命中2（66.67%）
14:41:02.406 10 W - 更新实体缓存（第2次）：NewLife.YWS.Entities.MyRole 原因：60秒过期 Role<>.FindByID(Int32 id)<-
14:41:02.406 10 W - 完成更新缓存（第2次）：NewLife.YWS.Entities.MyRole
14:41:02.406 10 W - 实体缓存<RoleMenu>总次数63，一级命中62（98.41%）
14:41:02.406 10 W - 更新实体缓存（第2次）：NewLife.CommonEntity.RoleMenu 原因：60秒过期 RoleMenu<>.FindAllByRoleID(Int32 roleID)<-
14:41:02.406 10 W - 完成更新缓存（第2次）：NewLife.CommonEntity.RoleMenu
14:41:02.406 10 W - 实体缓存<Menu>总次数105，一级命中104（99.05%）
14:41:02.421 10 W - 更新实体缓存（第2次）：NewLife.CommonEntity.Menu 原因：60秒过期 Menu<>.FindByID(Int32 id)<-
14:41:02.425 10 W - 完成更新缓存（第2次）：NewLife.CommonEntity.Menu
14:41:08.608 15 W - 更新实体缓存（第1次）：Bioinfo.Entites.Category 原因：第一次 EntityTree<,>.FindByKeyWithCache(EntityTree<,>.TKey key)<-.FindAllChildsByParent(EntityTree<,>.TKey parentKey)
14:41:08.760 15 W - 初始化Bioinfo.Entites.Category数据
14:41:08.776 15 W - 完成更新缓存（第1次）：Bioinfo.Entites.Category
14:51:03.368 2 N - 清空单对象缓存：NewLife.CommonEntity.Setting

#Software: .
#ProcessID: 5712
#AppDomain: c5a66244-1-129932022682983963
#BaseDirectory: C:\DevelopMent\Bioinfo\BioinfoWebSite\
#Date: 2012-09-27
#Fields: Time ThreadID IsPoolThread ThreadName Message
14:51:09.171 4 W - NewLife.Core v3.8.2012.0803 Build 2012-09-25 12:03:50
14:51:09.203 4 W - 为NewLife.CommonEntity.IManageProvider配置注册YWSManageProvider，标识Identity=，优先级Priority=5！
14:51:11.761 4 W - NewLife.XCode v8.8.2012.0828 Build 2012-09-25 12:01:34
14:51:11.761 4 W - 检查实体NewLife.CommonEntity.Setting的数据表架构，模式：CheckTableWhenFirstUse
14:51:11.933 4 W - 初始化NewLife.CommonEntity.Setting数据
14:51:11.933 4 W - 开始检查连接[Common/MySql]的数据库架构……
14:51:12.011 4 W - [Common]的所有实体类（18个）：Sequence,GuidCategory,Administrator,Menu,Role,RoleMenu,Log,Area,User,Simple,SimpleTree,Setting,Statistics,UserProfile,Attachment,Category,MyRole,Admin
14:51:12.011 4 W - [Common]需要检查架构的实体类（2个）：MyRole,Admin
14:51:12.011 4 W - Common待检查表架构的实体个数：2
14:51:12.120 9 Y - DropDefault(LastLogin)
14:51:12.276 4 W - DropDefault(LastLogin)
14:51:12.354 4 W - 检查连接[Common/MySql]的数据库架构耗时00:00:00.4165437
14:51:12.354 4 W - 一级缓存：关闭缓存
14:51:12.354 9 Y - 初始化NewLife.YWS.Entities.Admin数据
14:51:13.924 4 W - 更新实体缓存（第1次）：NewLife.YWS.Entities.Admin 原因：第一次 Administrator<>.FindByName(String name)<-.Login(String username,String password,Int32 hashTimes)
14:51:13.939 4 W - 完成更新缓存（第1次）：NewLife.YWS.Entities.Admin
14:51:13.970 4 W - 清空实体缓存：NewLife.YWS.Entities.Admin 原因：修改数据后提交事务
14:51:14.004 4 W - 检查实体NewLife.CommonEntity.Log的数据表架构，模式：CheckTableWhenFirstUse
14:51:14.004 4 W - DropDefault(OccurTime)
14:51:14.005 4 W - AddDefault(OccurTime,)
14:51:14.005 4 W - 初始化NewLife.CommonEntity.Log数据
14:51:14.066 11 W - 更新实体缓存（第1次）：NewLife.YWS.Entities.MyRole 原因：第一次 Role<>.FindByID(Int32 id)<-
14:51:14.066 11 W - 初始化NewLife.YWS.Entities.MyRole数据
14:51:14.076 11 W - 检查实体NewLife.CommonEntity.RoleMenu的数据表架构，模式：CheckTableWhenFirstUse
14:51:14.148 11 W - 初始化NewLife.CommonEntity.RoleMenu数据
14:51:14.148 11 W - 如果某一个菜单对应的RoleMenu（角色菜单对应关系）为空或者只有一个，则授权第一个角色访问所有菜单！
14:51:14.164 11 W - 更新实体缓存（第1次）：NewLife.CommonEntity.Menu 原因：第一次 EntityTree<,>.FindAllByParent(EntityTree<,>.TKey parentKey)<-.FindChilds()
14:51:14.164 11 W - 检查实体NewLife.CommonEntity.Menu的数据表架构，模式：CheckTableWhenFirstUse
14:51:14.195 11 W - 初始化NewLife.CommonEntity.Menu数据
14:51:14.211 11 W - 完成更新缓存（第1次）：NewLife.CommonEntity.Menu
14:51:14.211 11 W - 更新实体缓存（第1次）：NewLife.CommonEntity.RoleMenu 原因：第一次 RoleMenu<>.CheckNonePerssion(Int32 menuID)<-Role<,,>.InitData()
14:51:14.226 11 W - 完成更新缓存（第1次）：NewLife.CommonEntity.RoleMenu
14:51:14.242 11 W - 完成更新缓存（第1次）：NewLife.YWS.Entities.MyRole
14:51:37.601 4 W - 初始化Bioinfo.Entites.News数据
14:51:38.646 4 W - 更新实体缓存（第1次）：Bioinfo.Entites.Category 原因：第一次 EntityTree<,>.FindByKeyWithCache(EntityTree<,>.TKey key)<-.FindAllChildsByParent(EntityTree<,>.TKey parentKey)
14:51:38.661 4 W - 初始化Bioinfo.Entites.Category数据
14:51:38.661 4 W - 完成更新缓存（第1次）：Bioinfo.Entites.Category
14:51:55.509 2 N - 清空单对象缓存：NewLife.CommonEntity.Setting
14:51:55.509 2 N - 错误的连接字符串：Server=192.168.1.47;Database=Bioinfodb2;Uid=root;Pwd=yrshabc123
14:51:55.509 2 N - XCode.Exceptions.XDbSessionException: Unable to connect to any of the specified MySQL hosts.[DB:Common/MySql] ---> MySql.Data.MySqlClient.MySqlException: Unable to connect to any of the specified MySQL hosts. ---> System.ApplicationException: 应用程序中的错误。
   在 System.Threading.ThreadPool.RegisterWaitForSingleObjectNative(WaitHandle waitHandle, Object state, UInt32 timeOutInterval, Boolean executeOnlyOnce, RegisteredWaitHandle registeredWaitHandle, StackCrawlMark& stackMark, Boolean compressStack)
   在 System.Threading.ThreadPool.RegisterWaitForSingleObject(WaitHandle waitObject, WaitOrTimerCallback callBack, Object state, UInt32 millisecondsTimeOutInterval, Boolean executeOnlyOnce, StackCrawlMark& stackMark, Boolean compressStack)
   在 System.Threading.ThreadPool.UnsafeRegisterWaitForSingleObject(WaitHandle waitObject, WaitOrTimerCallback callBack, Object state, Int32 millisecondsTimeOutInterval, Boolean executeOnlyOnce)
   在 System.Net.Sockets.Socket.SetAsyncEventSelect(AsyncEventBits blockEventBits)
   在 System.Net.Sockets.Socket.DoBeginConnect(EndPoint endPointSnapshot, SocketAddress socketAddress, LazyAsyncResult asyncResult)
   在 System.Net.Sockets.Socket.BeginConnect(EndPoint remoteEP, AsyncCallback callback, Object state)
   在 MySql.Data.Common.StreamCreator.CreateSocketStream(IPAddress ip, Boolean unix)
   在 MySql.Data.Common.StreamCreator.GetStream(UInt32 timeout)
   在 MySql.Data.MySqlClient.NativeDriver.Open()
   --- 内部异常堆栈跟踪的结尾 ---
   在 MySql.Data.MySqlClient.NativeDriver.Open()
   在 MySql.Data.MySqlClient.Driver.Open()
   在 MySql.Data.MySqlClient.Driver.Create(MySqlConnectionStringBuilder settings)
   在 MySql.Data.MySqlClient.MySqlPool.GetPooledConnection()
   在 MySql.Data.MySqlClient.MySqlPool.TryToGetDriver()
   在 MySql.Data.MySqlClient.MySqlPool.GetConnection()
   在 MySql.Data.MySqlClient.MySqlConnection.Open()
   在 XCode.DataAccessLayer.DbSession.Open()
   在 XCode.DataAccessLayer.DbSession.BeginTransaction()
   --- 内部异常堆栈跟踪的结尾 ---
   在 XCode.DataAccessLayer.DbSession.BeginTransaction()
   在 XCode.DataAccessLayer.DAL.BeginTransaction()
   在 XCode.Entity`1.Meta.BeginTrans()
   在 XCode.Entity`1.DoAction(Func`1 func, Nullable`1 isnew)
   在 XCode.Entity`1.Update()
   在 XCode.Cache.SingleEntityCache`2.<>c__DisplayClass1c.<Clear>b__1b()
   在 XCode.Cache.CacheBase`1.InvokeFill(Func callback)

#Software: .
#ProcessID: 4992
#AppDomain: c5a66244-1-129932033371895335
#BaseDirectory: C:\DevelopMent\Bioinfo\BioinfoWebSite\
#Date: 2012-09-27
#Fields: Time ThreadID IsPoolThread ThreadName Message
15:08:57.938 4 W - NewLife.Core v3.8.2012.0803 Build 2012-09-25 12:03:50
15:08:57.953 4 W - 为NewLife.CommonEntity.IManageProvider配置注册YWSManageProvider，标识Identity=，优先级Priority=5！
15:08:59.779 4 W - NewLife.XCode v8.8.2012.0828 Build 2012-09-25 12:01:34
15:08:59.779 4 W - 检查实体NewLife.CommonEntity.Setting的数据表架构，模式：CheckTableWhenFirstUse
15:08:59.919 4 W - 初始化NewLife.CommonEntity.Setting数据
15:08:59.935 4 W - 开始检查连接[Common/MySql]的数据库架构……
15:09:00.013 4 W - [Common]的所有实体类（18个）：Sequence,GuidCategory,Administrator,Menu,Role,RoleMenu,Log,Area,User,Simple,SimpleTree,Setting,Statistics,UserProfile,Attachment,Category,MyRole,Admin
15:09:00.013 4 W - [Common]需要检查架构的实体类（2个）：MyRole,Admin
15:09:00.013 4 W - Common待检查表架构的实体个数：2
15:09:00.137 8 Y - DropDefault(LastLogin)
15:09:00.293 4 W - DropDefault(LastLogin)
15:09:00.403 4 W - 检查连接[Common/MySql]的数据库架构耗时00:00:00.4649397
15:09:00.403 4 W - 一级缓存：关闭缓存
15:09:00.403 8 Y - 初始化NewLife.YWS.Entities.Admin数据
15:09:02.290 8 W - 更新实体缓存（第1次）：NewLife.YWS.Entities.Admin 原因：第一次 Administrator<>.FindByName(String name)<-.Login(String username,String password,Int32 hashTimes)
15:09:02.290 8 W - 完成更新缓存（第1次）：NewLife.YWS.Entities.Admin
15:09:02.337 8 W - 清空实体缓存：NewLife.YWS.Entities.Admin 原因：修改数据后提交事务
15:09:02.363 8 W - 检查实体NewLife.CommonEntity.Log的数据表架构，模式：CheckTableWhenFirstUse
15:09:02.363 8 W - DropDefault(OccurTime)
15:09:02.363 8 W - AddDefault(OccurTime,)
15:09:02.363 8 W - 初始化NewLife.CommonEntity.Log数据
15:09:02.423 11 W - 更新实体缓存（第1次）：NewLife.YWS.Entities.MyRole 原因：第一次 Role<>.FindByID(Int32 id)<-
15:09:02.423 11 W - 初始化NewLife.YWS.Entities.MyRole数据
15:09:02.433 11 W - 检查实体NewLife.CommonEntity.RoleMenu的数据表架构，模式：CheckTableWhenFirstUse
15:09:02.505 11 W - 初始化NewLife.CommonEntity.RoleMenu数据
15:09:02.505 11 W - 如果某一个菜单对应的RoleMenu（角色菜单对应关系）为空或者只有一个，则授权第一个角色访问所有菜单！
15:09:02.521 11 W - 更新实体缓存（第1次）：NewLife.CommonEntity.Menu 原因：第一次 EntityTree<,>.FindAllByParent(EntityTree<,>.TKey parentKey)<-.FindChilds()
15:09:02.521 11 W - 检查实体NewLife.CommonEntity.Menu的数据表架构，模式：CheckTableWhenFirstUse
15:09:02.552 11 W - 初始化NewLife.CommonEntity.Menu数据
15:09:02.567 11 W - 完成更新缓存（第1次）：NewLife.CommonEntity.Menu
15:09:02.583 11 W - 更新实体缓存（第1次）：NewLife.CommonEntity.RoleMenu 原因：第一次 RoleMenu<>.CheckNonePerssion(Int32 menuID)<-Role<,,>.InitData()
15:09:02.583 11 W - 完成更新缓存（第1次）：NewLife.CommonEntity.RoleMenu
15:09:02.599 11 W - 完成更新缓存（第1次）：NewLife.YWS.Entities.MyRole
15:09:12.739 12 W - 初始化Bioinfo.Entites.News数据
15:09:15.781 11 W - 更新实体缓存（第1次）：Bioinfo.Entites.Category 原因：第一次 EntityTree<,>.FindByKeyWithCache(EntityTree<,>.TKey key)<-.FindAllChildsByParent(EntityTree<,>.TKey parentKey)
15:09:15.843 11 W - 初始化Bioinfo.Entites.Category数据
15:09:15.843 11 W - 完成更新缓存（第1次）：Bioinfo.Entites.Category
15:11:04.357 8 W - 更新实体缓存（第2次）：NewLife.CommonEntity.Menu 原因：60秒过期 Menu<>.GetCurrentMenu()<-.get_Current()
15:11:04.357 8 W - 完成更新缓存（第2次）：NewLife.CommonEntity.Menu
15:11:04.357 8 W - 更新实体缓存（第2次）：Bioinfo.Entites.Category 原因：60秒过期 EntityTree<,>.FindByKeyWithCache(EntityTree<,>.TKey key)<-.FindAllChildsByParent(EntityTree<,>.TKey parentKey)
15:11:04.372 8 W - 完成更新缓存（第2次）：Bioinfo.Entites.Category
15:12:03.935 2 N - 清空单对象缓存：NewLife.CommonEntity.Setting

#Software: .
#ProcessID: 5688
#AppDomain: c5a66244-1-129932035274763387
#BaseDirectory: C:\DevelopMent\Bioinfo\BioinfoWebSite\
#Date: 2012-09-27
#Fields: Time ThreadID IsPoolThread ThreadName Message
15:12:08.178 4 W - NewLife.Core v3.8.2012.0803 Build 2012-09-25 12:03:50
15:12:08.178 4 W - 为NewLife.CommonEntity.IManageProvider配置注册YWSManageProvider，标识Identity=，优先级Priority=5！
15:12:09.863 9 W - NewLife.XCode v8.8.2012.0828 Build 2012-09-25 12:01:34
15:12:09.863 9 W - 检查实体NewLife.CommonEntity.Setting的数据表架构，模式：CheckTableWhenFirstUse
15:12:10.019 9 W - 初始化NewLife.CommonEntity.Setting数据
15:12:10.034 9 W - 开始检查连接[Common/MySql]的数据库架构……
15:12:10.128 9 W - [Common]的所有实体类（18个）：Sequence,GuidCategory,Administrator,Menu,Role,RoleMenu,Log,Area,User,Simple,SimpleTree,Setting,Statistics,UserProfile,Attachment,Category,MyRole,Admin
15:12:10.128 9 W - [Common]需要检查架构的实体类（2个）：MyRole,Admin
15:12:10.128 9 W - Common待检查表架构的实体个数：2
15:12:10.190 4 Y - DropDefault(LastLogin)
15:12:10.331 9 W - DropDefault(LastLogin)
15:12:10.409 9 W - 检查连接[Common/MySql]的数据库架构耗时00:00:00.3666247
15:12:10.409 4 Y - 初始化NewLife.YWS.Entities.Admin数据
15:12:10.409 9 W - 一级缓存：关闭缓存
15:12:12.405 9 W - 更新实体缓存（第1次）：NewLife.YWS.Entities.Admin 原因：第一次 Administrator<>.FindByName(String name)<-.Login(String username,String password,Int32 hashTimes)
15:12:12.405 9 W - 完成更新缓存（第1次）：NewLife.YWS.Entities.Admin
15:12:12.437 9 W - 清空实体缓存：NewLife.YWS.Entities.Admin 原因：修改数据后提交事务
15:12:12.462 9 W - 检查实体NewLife.CommonEntity.Log的数据表架构，模式：CheckTableWhenFirstUse
15:12:12.462 9 W - DropDefault(OccurTime)
15:12:12.462 9 W - AddDefault(OccurTime,)
15:12:12.462 9 W - 初始化NewLife.CommonEntity.Log数据
15:12:12.512 9 W - 更新实体缓存（第1次）：NewLife.YWS.Entities.MyRole 原因：第一次 Role<>.FindByID(Int32 id)<-
15:12:12.512 9 W - 初始化NewLife.YWS.Entities.MyRole数据
15:12:12.532 9 W - 检查实体NewLife.CommonEntity.RoleMenu的数据表架构，模式：CheckTableWhenFirstUse
15:12:12.532 9 W - 初始化NewLife.CommonEntity.RoleMenu数据
15:12:12.532 9 W - 如果某一个菜单对应的RoleMenu（角色菜单对应关系）为空或者只有一个，则授权第一个角色访问所有菜单！
15:12:12.552 9 W - 更新实体缓存（第1次）：NewLife.CommonEntity.Menu 原因：第一次 EntityTree<,>.FindAllByParent(EntityTree<,>.TKey parentKey)<-.FindChilds()
15:12:12.552 9 W - 检查实体NewLife.CommonEntity.Menu的数据表架构，模式：CheckTableWhenFirstUse
15:12:12.583 9 W - 初始化NewLife.CommonEntity.Menu数据
15:12:12.599 9 W - 完成更新缓存（第1次）：NewLife.CommonEntity.Menu
15:12:12.615 9 W - 更新实体缓存（第1次）：NewLife.CommonEntity.RoleMenu 原因：第一次 RoleMenu<>.CheckNonePerssion(Int32 menuID)<-Role<,,>.InitData()
15:12:12.615 9 W - 完成更新缓存（第1次）：NewLife.CommonEntity.RoleMenu
15:12:12.630 9 W - 完成更新缓存（第1次）：NewLife.YWS.Entities.MyRole
15:12:17.379 4 W - 初始化Bioinfo.Entites.News数据
15:12:18.315 12 W - 更新实体缓存（第1次）：Bioinfo.Entites.Category 原因：第一次 EntityTree<,>.FindByKeyWithCache(EntityTree<,>.TKey key)<-.FindAllChildsByParent(EntityTree<,>.TKey parentKey)
15:12:18.378 12 W - 初始化Bioinfo.Entites.Category数据
15:12:18.393 12 W - 完成更新缓存（第1次）：Bioinfo.Entites.Category
15:13:37.834 2 N - 清空单对象缓存：NewLife.CommonEntity.Setting

#Software: .
#ProcessID: 1268
#AppDomain: c5a66244-1-129932041867382422
#BaseDirectory: C:\DevelopMent\Bioinfo\BioinfoWebSite\
#Date: 2012-09-27
#Fields: Time ThreadID IsPoolThread ThreadName Message
15:23:07.393 4 W - NewLife.Core v3.8.2012.0803 Build 2012-09-25 12:03:50
15:23:07.393 4 W - 为NewLife.CommonEntity.IManageProvider配置注册YWSManageProvider，标识Identity=，优先级Priority=5！
15:23:09.140 4 W - NewLife.XCode v8.8.2012.0828 Build 2012-09-25 12:01:34
15:23:09.140 4 W - 检查实体NewLife.CommonEntity.Setting的数据表架构，模式：CheckTableWhenFirstUse
15:23:09.265 4 W - 初始化NewLife.CommonEntity.Setting数据
15:23:09.265 4 W - 开始检查连接[Common/MySql]的数据库架构……
15:23:09.343 4 W - [Common]的所有实体类（18个）：Sequence,GuidCategory,Administrator,Menu,Role,RoleMenu,Log,Area,User,Simple,SimpleTree,Setting,Statistics,UserProfile,Attachment,Category,MyRole,Admin
15:23:09.343 4 W - [Common]需要检查架构的实体类（2个）：MyRole,Admin
15:23:09.359 4 W - Common待检查表架构的实体个数：2
15:23:09.452 8 Y - DropDefault(LastLogin)
15:23:09.608 4 W - DropDefault(LastLogin)
15:23:09.686 4 W - 检查连接[Common/MySql]的数据库架构耗时00:00:00.4094426
15:23:09.686 8 Y - 初始化NewLife.YWS.Entities.Admin数据
15:23:09.686 4 W - 一级缓存：关闭缓存
15:23:11.043 4 W - 更新实体缓存（第1次）：NewLife.YWS.Entities.Admin 原因：第一次 Administrator<>.FindByName(String name)<-.Login(String username,String password,Int32 hashTimes)
15:23:11.059 4 W - 完成更新缓存（第1次）：NewLife.YWS.Entities.Admin
15:23:11.108 4 W - 清空实体缓存：NewLife.YWS.Entities.Admin 原因：修改数据后提交事务
15:23:11.128 4 W - 检查实体NewLife.CommonEntity.Log的数据表架构，模式：CheckTableWhenFirstUse
15:23:11.128 4 W - DropDefault(OccurTime)
15:23:11.128 4 W - AddDefault(OccurTime,)
15:23:11.128 4 W - 初始化NewLife.CommonEntity.Log数据
15:23:11.178 4 W - 更新实体缓存（第1次）：NewLife.YWS.Entities.MyRole 原因：第一次 Role<>.FindByID(Int32 id)<-
15:23:11.178 4 W - 初始化NewLife.YWS.Entities.MyRole数据
15:23:11.188 4 W - 检查实体NewLife.CommonEntity.RoleMenu的数据表架构，模式：CheckTableWhenFirstUse
15:23:11.188 4 W - 初始化NewLife.CommonEntity.RoleMenu数据
15:23:11.198 4 W - 如果某一个菜单对应的RoleMenu（角色菜单对应关系）为空或者只有一个，则授权第一个角色访问所有菜单！
15:23:11.208 4 W - 更新实体缓存（第1次）：NewLife.CommonEntity.Menu 原因：第一次 EntityTree<,>.FindAllByParent(EntityTree<,>.TKey parentKey)<-.FindChilds()
15:23:11.208 4 W - 检查实体NewLife.CommonEntity.Menu的数据表架构，模式：CheckTableWhenFirstUse
15:23:11.234 4 W - 初始化NewLife.CommonEntity.Menu数据
15:23:11.234 4 W - 完成更新缓存（第1次）：NewLife.CommonEntity.Menu
15:23:11.249 4 W - 更新实体缓存（第1次）：NewLife.CommonEntity.RoleMenu 原因：第一次 RoleMenu<>.CheckNonePerssion(Int32 menuID)<-Role<,,>.InitData()
15:23:11.265 4 W - 完成更新缓存（第1次）：NewLife.CommonEntity.RoleMenu
15:23:11.265 4 W - 完成更新缓存（第1次）：NewLife.YWS.Entities.MyRole
15:23:16.682 8 W - 初始化Bioinfo.Entites.Category数据
15:23:46.768 8 W - 初始化Bioinfo.Entites.News数据
15:23:47.771 8 W - 更新实体缓存（第1次）：Bioinfo.Entites.Category 原因：第一次 EntityTree<,>.FindByKeyWithCache(EntityTree<,>.TKey key)<-.FindAllChildsByParent(EntityTree<,>.TKey parentKey)
15:23:47.771 8 W - 完成更新缓存（第1次）：Bioinfo.Entites.Category
15:24:56.582 12 W - 更新实体缓存（第2次）：NewLife.CommonEntity.Menu 原因：60秒过期 Menu<>.GetCurrentMenu()<-.get_Current()
15:24:56.805 12 W - 完成更新缓存（第2次）：NewLife.CommonEntity.Menu
15:25:07.895 4 W - 更新实体缓存（第2次）：Bioinfo.Entites.Category 原因：60秒过期 EntityTree<,>.FindByKeyWithCache(EntityTree<,>.TKey key)<-.FindAllChildsByParent(EntityTree<,>.TKey parentKey)
15:25:07.910 4 W - 完成更新缓存（第2次）：Bioinfo.Entites.Category
15:28:29.458 2 N - 清空单对象缓存：NewLife.CommonEntity.Setting

#Software: .
#ProcessID: 5196
#AppDomain: c5a66244-1-129932045180549734
#BaseDirectory: C:\DevelopMent\Bioinfo\BioinfoWebSite\
#Date: 2012-09-27
#Fields: Time ThreadID IsPoolThread ThreadName Message
15:28:38.705 4 W - NewLife.Core v3.8.2012.0803 Build 2012-09-25 12:03:50
15:28:38.709 4 W - 为NewLife.CommonEntity.IManageProvider配置注册YWSManageProvider，标识Identity=，优先级Priority=5！
15:28:40.134 4 W - NewLife.XCode v8.8.2012.0828 Build 2012-09-25 12:01:34
15:28:40.136 4 W - 一级缓存：关闭缓存
15:28:40.163 4 W - 更新实体缓存（第1次）：NewLife.YWS.Entities.Admin 原因：第一次 Administrator<>.FindByName(String name)<-.Login(String username,String password,Int32 hashTimes)
15:28:40.714 4 W - DropDefault(LastLogin)
15:28:40.752 4 W - 初始化NewLife.YWS.Entities.Admin数据
15:28:40.766 4 W - 开始检查连接[Common/MySql]的数据库架构……
15:28:40.849 4 W - [Common]的所有实体类（18个）：Sequence,GuidCategory,Administrator,Menu,Role,RoleMenu,Log,Area,User,Simple,SimpleTree,Setting,Statistics,UserProfile,Attachment,Category,MyRole,Admin
15:28:40.849 4 W - [Common]需要检查架构的实体类（2个）：MyRole,Admin
15:28:40.850 4 W - Common待检查表架构的实体个数：2
15:28:41.005 4 W - DropDefault(LastLogin)
15:28:41.039 4 W - 检查连接[Common/MySql]的数据库架构耗时00:00:00.2732028
15:28:41.063 4 W - 完成更新缓存（第1次）：NewLife.YWS.Entities.Admin
15:28:41.120 4 W - 清空实体缓存：NewLife.YWS.Entities.Admin 原因：修改数据后提交事务
15:28:41.145 4 W - 检查实体NewLife.CommonEntity.Log的数据表架构，模式：CheckTableWhenFirstUse
15:28:41.146 4 W - DropDefault(OccurTime)
15:28:41.146 4 W - AddDefault(OccurTime,)
15:28:41.146 4 W - 初始化NewLife.CommonEntity.Log数据
15:28:41.195 4 W - 更新实体缓存（第1次）：NewLife.YWS.Entities.MyRole 原因：第一次 Role<>.FindByID(Int32 id)<-
15:28:41.196 4 W - 初始化NewLife.YWS.Entities.MyRole数据
15:28:41.209 4 W - 检查实体NewLife.CommonEntity.RoleMenu的数据表架构，模式：CheckTableWhenFirstUse
15:28:41.212 4 W - 初始化NewLife.CommonEntity.RoleMenu数据
15:28:41.213 4 W - 如果某一个菜单对应的RoleMenu（角色菜单对应关系）为空或者只有一个，则授权第一个角色访问所有菜单！
15:28:41.226 4 W - 更新实体缓存（第1次）：NewLife.CommonEntity.Menu 原因：第一次 EntityTree<,>.FindAllByParent(EntityTree<,>.TKey parentKey)<-.FindChilds()
15:28:41.226 4 W - 检查实体NewLife.CommonEntity.Menu的数据表架构，模式：CheckTableWhenFirstUse
15:28:41.259 4 W - 初始化NewLife.CommonEntity.Menu数据
15:28:41.269 4 W - 完成更新缓存（第1次）：NewLife.CommonEntity.Menu
15:28:41.281 4 W - 更新实体缓存（第1次）：NewLife.CommonEntity.RoleMenu 原因：第一次 RoleMenu<>.CheckNonePerssion(Int32 menuID)<-Role<,,>.InitData()
15:28:41.286 4 W - 完成更新缓存（第1次）：NewLife.CommonEntity.RoleMenu
15:28:41.299 4 W - 完成更新缓存（第1次）：NewLife.YWS.Entities.MyRole
15:28:41.336 4 W - 检查实体NewLife.CommonEntity.Setting的数据表架构，模式：CheckTableWhenFirstUse
15:28:41.337 4 W - 初始化NewLife.CommonEntity.Setting数据
15:28:47.427 8 W - 初始化Bioinfo.Entites.Category数据
15:28:48.775 8 W - 初始化Bioinfo.Entites.Messages数据
15:28:49.925 4 W - 初始化Bioinfo.Entites.News数据
15:28:50.771 8 W - 初始化Bioinfo.Entites.Setting数据
15:28:50.797 8 W - 更新实体缓存（第1次）：Bioinfo.Entites.Category 原因：第一次 Category.FindById(Int32 id)<-Setting.get_Category()
15:28:50.800 8 W - 完成更新缓存（第1次）：Bioinfo.Entites.Category
15:29:21.071 2 N - 清空单对象缓存：NewLife.CommonEntity.Setting
15:29:21.075 2 N - 错误的连接字符串：Server=192.168.1.47;Database=Bioinfodb2;Uid=root;Pwd=yrshabc123
15:29:21.078 2 N - XCode.Exceptions.XDbSessionException: Unable to connect to any of the specified MySQL hosts.[DB:Common/MySql] ---> MySql.Data.MySqlClient.MySqlException: Unable to connect to any of the specified MySQL hosts. ---> System.ApplicationException: 应用程序中的错误。
   在 System.Threading.ThreadPool.RegisterWaitForSingleObjectNative(WaitHandle waitHandle, Object state, UInt32 timeOutInterval, Boolean executeOnlyOnce, RegisteredWaitHandle registeredWaitHandle, StackCrawlMark& stackMark, Boolean compressStack)
   在 System.Threading.ThreadPool.RegisterWaitForSingleObject(WaitHandle waitObject, WaitOrTimerCallback callBack, Object state, UInt32 millisecondsTimeOutInterval, Boolean executeOnlyOnce, StackCrawlMark& stackMark, Boolean compressStack)
   在 System.Threading.ThreadPool.UnsafeRegisterWaitForSingleObject(WaitHandle waitObject, WaitOrTimerCallback callBack, Object state, Int32 millisecondsTimeOutInterval, Boolean executeOnlyOnce)
   在 System.Net.Sockets.Socket.SetAsyncEventSelect(AsyncEventBits blockEventBits)
   在 System.Net.Sockets.Socket.DoBeginConnect(EndPoint endPointSnapshot, SocketAddress socketAddress, LazyAsyncResult asyncResult)
   在 System.Net.Sockets.Socket.BeginConnect(EndPoint remoteEP, AsyncCallback callback, Object state)
   在 MySql.Data.Common.StreamCreator.CreateSocketStream(IPAddress ip, Boolean unix)
   在 MySql.Data.Common.StreamCreator.GetStream(UInt32 timeout)
   在 MySql.Data.MySqlClient.NativeDriver.Open()
   --- 内部异常堆栈跟踪的结尾 ---
   在 MySql.Data.MySqlClient.NativeDriver.Open()
   在 MySql.Data.MySqlClient.Driver.Open()
   在 MySql.Data.MySqlClient.Driver.Create(MySqlConnectionStringBuilder settings)
   在 MySql.Data.MySqlClient.MySqlPool.GetPooledConnection()
   在 MySql.Data.MySqlClient.MySqlPool.TryToGetDriver()
   在 MySql.Data.MySqlClient.MySqlPool.GetConnection()
   在 MySql.Data.MySqlClient.MySqlConnection.Open()
   在 XCode.DataAccessLayer.DbSession.Open()
   在 XCode.DataAccessLayer.DbSession.BeginTransaction()
   --- 内部异常堆栈跟踪的结尾 ---
   在 XCode.DataAccessLayer.DbSession.BeginTransaction()
   在 XCode.DataAccessLayer.DAL.BeginTransaction()
   在 XCode.Entity`1.Meta.BeginTrans()
   在 XCode.Entity`1.DoAction(Func`1 func, Nullable`1 isnew)
   在 XCode.Entity`1.Update()
   在 XCode.Cache.SingleEntityCache`2.<>c__DisplayClass1c.<Clear>b__1b()
   在 XCode.Cache.CacheBase`1.InvokeFill(Func callback)

#Software: .
#ProcessID: 1176
#AppDomain: c5a66244-1-129932045665737485
#BaseDirectory: C:\DevelopMent\Bioinfo\BioinfoWebSite\
#Date: 2012-09-27
#Fields: Time ThreadID IsPoolThread ThreadName Message
15:29:27.304 4 W - NewLife.Core v3.8.2012.0803 Build 2012-09-25 12:03:50
15:29:27.308 4 W - 为NewLife.CommonEntity.IManageProvider配置注册YWSManageProvider，标识Identity=，优先级Priority=5！
15:29:28.775 4 W - NewLife.XCode v8.8.2012.0828 Build 2012-09-25 12:01:34
15:29:28.777 4 W - 一级缓存：关闭缓存
15:29:28.794 4 W - 更新实体缓存（第1次）：NewLife.CommonEntity.Menu 原因：第一次 Entity<>.FindWithCache(String name,Object value)<-Entity<>.EntityOperate.FindWithCache(String name,Object value)
15:29:28.982 4 W - 检查实体NewLife.CommonEntity.Menu的数据表架构，模式：CheckTableWhenFirstUse
15:29:29.187 4 W - 初始化NewLife.CommonEntity.Menu数据
15:29:29.200 4 W - 开始检查连接[Common/MySql]的数据库架构……
15:29:29.285 4 W - [Common]的所有实体类（18个）：Sequence,GuidCategory,Administrator,Menu,Role,RoleMenu,Log,Area,User,Simple,SimpleTree,Setting,Statistics,UserProfile,Attachment,Category,MyRole,Admin
15:29:29.285 4 W - [Common]需要检查架构的实体类（2个）：MyRole,Admin
15:29:29.285 4 W - Common待检查表架构的实体个数：2
15:29:29.436 4 W - DropDefault(LastLogin)
15:29:29.475 4 W - 检查连接[Common/MySql]的数据库架构耗时00:00:00.2743436
15:29:29.495 4 W - 完成更新缓存（第1次）：NewLife.CommonEntity.Menu
15:29:29.512 4 W - 更新实体缓存（第1次）：NewLife.YWS.Entities.Admin 原因：第一次 Administrator<>.FindByName(String name)<-.Login(String username,String password,Int32 hashTimes)
15:29:29.513 4 W - 初始化NewLife.YWS.Entities.Admin数据
15:29:29.526 4 W - 完成更新缓存（第1次）：NewLife.YWS.Entities.Admin
15:29:29.585 4 W - 清空实体缓存：NewLife.YWS.Entities.Admin 原因：修改数据后提交事务
15:29:29.612 4 W - 检查实体NewLife.CommonEntity.Log的数据表架构，模式：CheckTableWhenFirstUse
15:29:29.614 4 W - DropDefault(OccurTime)
15:29:29.614 4 W - AddDefault(OccurTime,)
15:29:29.614 4 W - 初始化NewLife.CommonEntity.Log数据
15:29:29.620 8 W - 更新实体缓存（第2次）：NewLife.YWS.Entities.Admin 原因：60秒过期 Entity<>.OnUpdate()<-.DoAction(Func<Int32> func,Nullable<Boolean> isnew)
15:29:29.621 8 W - 完成更新缓存（第2次）：NewLife.YWS.Entities.Admin
15:29:29.657 4 W - 更新实体缓存（第1次）：NewLife.YWS.Entities.MyRole 原因：第一次 Role<>.FindByID(Int32 id)<-
15:29:29.658 4 W - 初始化NewLife.YWS.Entities.MyRole数据
15:29:29.670 4 W - 检查实体NewLife.CommonEntity.RoleMenu的数据表架构，模式：CheckTableWhenFirstUse
15:29:29.674 4 W - 初始化NewLife.CommonEntity.RoleMenu数据
15:29:29.674 4 W - 如果某一个菜单对应的RoleMenu（角色菜单对应关系）为空或者只有一个，则授权第一个角色访问所有菜单！
15:29:29.684 4 W - 更新实体缓存（第1次）：NewLife.CommonEntity.RoleMenu 原因：第一次 RoleMenu<>.CheckNonePerssion(Int32 menuID)<-Role<,,>.InitData()
15:29:29.689 4 W - 完成更新缓存（第1次）：NewLife.CommonEntity.RoleMenu
15:29:29.695 8 W - 清空实体缓存：NewLife.YWS.Entities.Admin 原因：修改数据后提交事务
15:29:29.702 4 W - 完成更新缓存（第1次）：NewLife.YWS.Entities.MyRole
15:29:32.661 8 W - 初始化Bioinfo.Entites.News数据
15:29:33.838 4 W - 更新实体缓存（第1次）：Bioinfo.Entites.Category 原因：第一次 EntityTree<,>.FindByKeyWithCache(EntityTree<,>.TKey key)<-.FindAllChildsByParent(EntityTree<,>.TKey parentKey)
15:29:33.840 4 W - 初始化Bioinfo.Entites.Category数据
15:29:33.845 4 W - 完成更新缓存（第1次）：Bioinfo.Entites.Category
15:31:35.373 9 W - 更新实体缓存（第2次）：NewLife.CommonEntity.Menu 原因：60秒过期 Menu<>.GetCurrentMenu()<-.get_Current()
15:31:35.378 9 W - 完成更新缓存（第2次）：NewLife.CommonEntity.Menu
15:35:39.512 11 W - 更新实体缓存（第3次）：NewLife.CommonEntity.Menu 原因：60秒过期 Menu<>.GetCurrentMenu()<-.get_Current()
15:35:39.531 11 W - 完成更新缓存（第3次）：NewLife.CommonEntity.Menu
15:37:45.965 13 W - 更新实体缓存（第4次）：NewLife.CommonEntity.Menu 原因：60秒过期 Menu<>.GetCurrentMenu()<-.get_Current()
15:37:45.970 13 W - 完成更新缓存（第4次）：NewLife.CommonEntity.Menu
15:37:45.974 13 W - 更新实体缓存（第2次）：Bioinfo.Entites.Category 原因：60秒过期 EntityTree<,>.FindByKeyWithCache(EntityTree<,>.TKey key)<-.FindAllChildsByParent(EntityTree<,>.TKey parentKey)
15:37:45.977 13 W - 完成更新缓存（第2次）：Bioinfo.Entites.Category
15:39:33.082 13 W - 实体缓存<Menu>总次数122，一级命中117（95.90%），二级命中1（0.82%）
15:39:33.083 13 W - 更新实体缓存（第5次）：NewLife.CommonEntity.Menu 原因：60秒过期 Entity<>.FindWithCache(String name,Object value)<-Entity<>.EntityOperate.FindWithCache(String name,Object value)
15:39:33.090 13 W - 完成更新缓存（第5次）：NewLife.CommonEntity.Menu
15:40:29.815 14 W - 更新实体缓存（第1次）：NewLife.YWS.Entities.CustomerType 原因：第一次 EntityTree<,>.FindByKeyWithCache(EntityTree<,>.TKey key)<-.FindAllChildsNoParent(EntityTree<,>.TKey parentKey)
15:40:29.817 14 W - XCode.Exceptions.XCodeException: 请在使用数据库前设置[YWS]连接字符串
   在 XCode.DataAccessLayer.DAL..ctor(String connName) 位置 C:\X\Src\XCode\DataAccessLayer\DAL.cs:行号 36
   在 XCode.DataAccessLayer.DAL.Create(String connName) 位置 C:\X\Src\XCode\DataAccessLayer\DAL.cs:行号 73
   在 XCode.Entity`1.Meta.get_DBO() 位置 C:\X\Src\XCode\Entity\Entity_Meta.cs:行号 162
   在 XCode.Entity`1.Meta.FormatName(String name) 位置 C:\X\Src\XCode\Entity\Entity_Meta.cs:行号 519
   在 XCode.Entity`1.CreateBuilder(String whereClause, String orderClause, String selects, Int32 startRowIndex, Int32 maximumRows, Boolean needOrderByID) 位置 C:\X\Src\XCode\Entity\Entity.cs:行号 1109
   在 XCode.Entity`1.FindAll(String whereClause, String orderClause, String selects, Int32 startRowIndex, Int32 maximumRows) 位置 C:\X\Src\XCode\Entity\Entity.cs:行号 680
   在 XCode.Entity`1.FindAll() 位置 C:\X\Src\XCode\Entity\Entity.cs:行号 579
   在 XCode.Cache.EntityCache`1.<FillWaper>b__1() 位置 C:\X\Src\XCode\Cache\EntityCache.cs:行号 81
   在 XCode.Cache.CacheBase`1.InvokeFill(Func callback) 位置 C:\X\Src\XCode\Cache\CacheBase.cs:行号 41
15:40:29.817 14 W - 完成更新缓存（第1次）：NewLife.YWS.Entities.CustomerType
15:40:30.962 17 W - 清空实体缓存：NewLife.CommonEntity.Menu 原因：修改数据后提交事务
15:40:30.967 17 W - 更新实体缓存（第6次）：NewLife.CommonEntity.Menu 原因：60秒过期 Menu<>.FindByID(Int32 id)<-
15:40:30.971 17 W - 完成更新缓存（第6次）：NewLife.CommonEntity.Menu
15:42:02.187 16 W - 更新实体缓存（第7次）：NewLife.CommonEntity.Menu 原因：60秒过期 Menu<>.GetCurrentMenu()<-.get_Current()
15:42:02.192 16 W - 完成更新缓存（第7次）：NewLife.CommonEntity.Menu
15:42:46.648 18 W - 实体缓存<MyRole>总次数3，一级命中2（66.67%）
15:42:46.651 18 W - 更新实体缓存（第2次）：NewLife.YWS.Entities.MyRole 原因：60秒过期 Role<>.FindByID(Int32 id)<-
15:42:46.654 18 W - 完成更新缓存（第2次）：NewLife.YWS.Entities.MyRole
15:42:49.386 18 W - 异步更新实体缓存（第1次）：NewLife.CommonEntity.Log 原因：600秒过期
15:42:49.435 18 Y - 完成更新缓存（第1次）：NewLife.CommonEntity.Log
15:42:56.276 19 W - 实体缓存<Category>总次数44，一级命中42（95.45%）
15:42:56.277 19 W - 更新实体缓存（第3次）：Bioinfo.Entites.Category 原因：60秒过期 EntityTree<,>.FindByKeyWithCache(EntityTree<,>.TKey key)<-.FindAllChildsByParent(EntityTree<,>.TKey parentKey)
15:42:56.281 19 W - 完成更新缓存（第3次）：Bioinfo.Entites.Category
15:43:13.888 18 W - 更新实体缓存（第8次）：NewLife.CommonEntity.Menu 原因：60秒过期 Menu<>.GetCurrentMenu()<-.get_Current()
15:43:13.893 18 W - 完成更新缓存（第8次）：NewLife.CommonEntity.Menu
15:44:40.074 21 W - 更新实体缓存（第9次）：NewLife.CommonEntity.Menu 原因：60秒过期 Menu<>.GetCurrentMenu()<-.get_Current()
15:44:40.081 21 W - 完成更新缓存（第9次）：NewLife.CommonEntity.Menu
15:44:40.087 21 W - 更新实体缓存（第4次）：Bioinfo.Entites.Category 原因：60秒过期 EntityTree<,>.FindByKeyWithCache(EntityTree<,>.TKey key)<-.FindAllChildsByParent(EntityTree<,>.TKey parentKey)
15:44:40.091 21 W - 完成更新缓存（第4次）：Bioinfo.Entites.Category

#Software: .
#ProcessID: 5808
#AppDomain: c5a66244-1-129932055594275365
#BaseDirectory: C:\DevelopMent\Bioinfo\BioinfoWebSite\
#Date: 2012-09-27
#Fields: Time ThreadID IsPoolThread ThreadName Message
15:46:00.162 4 W - NewLife.Core v3.8.2012.0803 Build 2012-09-25 12:03:50
15:46:00.167 4 W - 为NewLife.CommonEntity.IManageProvider配置注册YWSManageProvider，标识Identity=，优先级Priority=5！
15:46:01.847 8 W - NewLife.XCode v8.8.2012.0828 Build 2012-09-25 12:01:34
15:46:01.847 8 W - 检查实体NewLife.CommonEntity.Setting的数据表架构，模式：CheckTableWhenFirstUse
15:46:01.973 8 W - 初始化NewLife.CommonEntity.Setting数据
15:46:01.980 8 W - 开始检查连接[Common/MySql]的数据库架构……
15:46:02.059 8 W - [Common]的所有实体类（18个）：Sequence,GuidCategory,Administrator,Menu,Role,RoleMenu,Log,Area,User,Simple,SimpleTree,Setting,Statistics,UserProfile,Attachment,Category,MyRole,Admin
15:46:02.059 8 W - [Common]需要检查架构的实体类（2个）：MyRole,Admin
15:46:02.059 8 W - Common待检查表架构的实体个数：2
15:46:02.135 4 Y - DropDefault(LastLogin)
15:46:02.284 8 W - DropDefault(LastLogin)
15:46:02.355 8 W - 检查连接[Common/MySql]的数据库架构耗时00:00:00.3748295
15:46:02.355 4 Y - 初始化NewLife.YWS.Entities.Admin数据
15:46:02.357 8 W - 一级缓存：关闭缓存
15:46:05.772 8 W - 更新实体缓存（第1次）：NewLife.YWS.Entities.Admin 原因：第一次 Administrator<>.FindByName(String name)<-.Login(String username,String password,Int32 hashTimes)
15:46:05.777 8 W - 完成更新缓存（第1次）：NewLife.YWS.Entities.Admin
15:46:05.808 8 W - 清空实体缓存：NewLife.YWS.Entities.Admin 原因：修改数据后提交事务
15:46:05.832 8 W - 检查实体NewLife.CommonEntity.Log的数据表架构，模式：CheckTableWhenFirstUse
15:46:05.833 8 W - DropDefault(OccurTime)
15:46:05.833 8 W - AddDefault(OccurTime,)
15:46:05.833 8 W - 初始化NewLife.CommonEntity.Log数据
15:46:05.888 4 W - 更新实体缓存（第1次）：NewLife.YWS.Entities.MyRole 原因：第一次 Role<>.FindByID(Int32 id)<-
15:46:05.889 4 W - 初始化NewLife.YWS.Entities.MyRole数据
15:46:05.903 4 W - 检查实体NewLife.CommonEntity.RoleMenu的数据表架构，模式：CheckTableWhenFirstUse
15:46:05.906 4 W - 初始化NewLife.CommonEntity.RoleMenu数据
15:46:05.907 4 W - 如果某一个菜单对应的RoleMenu（角色菜单对应关系）为空或者只有一个，则授权第一个角色访问所有菜单！
15:46:05.919 4 W - 更新实体缓存（第1次）：NewLife.CommonEntity.Menu 原因：第一次 EntityTree<,>.FindAllByParent(EntityTree<,>.TKey parentKey)<-.FindChilds()
15:46:05.920 4 W - 检查实体NewLife.CommonEntity.Menu的数据表架构，模式：CheckTableWhenFirstUse
15:46:05.960 4 W - 初始化NewLife.CommonEntity.Menu数据
15:46:05.969 4 W - 完成更新缓存（第1次）：NewLife.CommonEntity.Menu
15:46:05.982 4 W - 更新实体缓存（第1次）：NewLife.CommonEntity.RoleMenu 原因：第一次 RoleMenu<>.CheckNonePerssion(Int32 menuID)<-Role<,,>.InitData()
15:46:05.987 4 W - 完成更新缓存（第1次）：NewLife.CommonEntity.RoleMenu
15:46:06.000 4 W - 完成更新缓存（第1次）：NewLife.YWS.Entities.MyRole
15:46:10.076 4 W - 初始化Bioinfo.Entites.News数据
15:46:10.126 4 W - 初始化Bioinfo.Entites.Category数据
15:46:10.126 4 W - 更新实体缓存（第1次）：Bioinfo.Entites.Category 原因：第一次 Category.FindById(Int32 id)<-News.get_Category()
15:46:10.126 4 W - 完成更新缓存（第1次）：Bioinfo.Entites.Category
15:46:23.877 2 N - 清空单对象缓存：NewLife.CommonEntity.Setting
15:46:23.881 2 N - 错误的连接字符串：Server=192.168.1.47;Database=Bioinfodb2;Uid=root;Pwd=yrshabc123
15:46:23.883 2 N - XCode.Exceptions.XDbSessionException: Unable to connect to any of the specified MySQL hosts.[DB:Common/MySql] ---> MySql.Data.MySqlClient.MySqlException: Unable to connect to any of the specified MySQL hosts. ---> System.ApplicationException: 应用程序中的错误。
   在 System.Threading.ThreadPool.RegisterWaitForSingleObjectNative(WaitHandle waitHandle, Object state, UInt32 timeOutInterval, Boolean executeOnlyOnce, RegisteredWaitHandle registeredWaitHandle, StackCrawlMark& stackMark, Boolean compressStack)
   在 System.Threading.ThreadPool.RegisterWaitForSingleObject(WaitHandle waitObject, WaitOrTimerCallback callBack, Object state, UInt32 millisecondsTimeOutInterval, Boolean executeOnlyOnce, StackCrawlMark& stackMark, Boolean compressStack)
   在 System.Threading.ThreadPool.UnsafeRegisterWaitForSingleObject(WaitHandle waitObject, WaitOrTimerCallback callBack, Object state, Int32 millisecondsTimeOutInterval, Boolean executeOnlyOnce)
   在 System.Net.Sockets.Socket.SetAsyncEventSelect(AsyncEventBits blockEventBits)
   在 System.Net.Sockets.Socket.DoBeginConnect(EndPoint endPointSnapshot, SocketAddress socketAddress, LazyAsyncResult asyncResult)
   在 System.Net.Sockets.Socket.BeginConnect(EndPoint remoteEP, AsyncCallback callback, Object state)
   在 MySql.Data.Common.StreamCreator.CreateSocketStream(IPAddress ip, Boolean unix)
   在 MySql.Data.Common.StreamCreator.GetStream(UInt32 timeout)
   在 MySql.Data.MySqlClient.NativeDriver.Open()
   --- 内部异常堆栈跟踪的结尾 ---
   在 MySql.Data.MySqlClient.NativeDriver.Open()
   在 MySql.Data.MySqlClient.Driver.Open()
   在 MySql.Data.MySqlClient.Driver.Create(MySqlConnectionStringBuilder settings)
   在 MySql.Data.MySqlClient.MySqlPool.GetPooledConnection()
   在 MySql.Data.MySqlClient.MySqlPool.TryToGetDriver()
   在 MySql.Data.MySqlClient.MySqlPool.GetConnection()
   在 MySql.Data.MySqlClient.MySqlConnection.Open()
   在 XCode.DataAccessLayer.DbSession.Open()
   在 XCode.DataAccessLayer.DbSession.BeginTransaction()
   --- 内部异常堆栈跟踪的结尾 ---
   在 XCode.DataAccessLayer.DbSession.BeginTransaction()
   在 XCode.DataAccessLayer.DAL.BeginTransaction()
   在 XCode.Entity`1.Meta.BeginTrans()
   在 XCode.Entity`1.DoAction(Func`1 func, Nullable`1 isnew)
   在 XCode.Entity`1.Update()
   在 XCode.Cache.SingleEntityCache`2.<>c__DisplayClass1c.<Clear>b__1b()
   在 XCode.Cache.CacheBase`1.InvokeFill(Func callback)

#Software: .
#ProcessID: 4324
#AppDomain: c5a66244-1-129932056309905745
#BaseDirectory: C:\DevelopMent\Bioinfo\BioinfoWebSite\
#Date: 2012-09-27
#Fields: Time ThreadID IsPoolThread ThreadName Message
15:47:11.692 4 W - NewLife.Core v3.8.2012.0803 Build 2012-09-25 12:03:50
15:47:11.692 4 W - 为NewLife.CommonEntity.IManageProvider配置注册YWSManageProvider，标识Identity=，优先级Priority=5！
15:47:13.377 4 W - NewLife.XCode v8.8.2012.0828 Build 2012-09-25 12:01:34
15:47:13.377 4 W - 检查实体NewLife.CommonEntity.Setting的数据表架构，模式：CheckTableWhenFirstUse
15:47:13.502 4 W - 初始化NewLife.CommonEntity.Setting数据
15:47:13.502 4 W - 开始检查连接[Common/MySql]的数据库架构……
15:47:13.580 4 W - [Common]的所有实体类（18个）：Sequence,GuidCategory,Administrator,Menu,Role,RoleMenu,Log,Area,User,Simple,SimpleTree,Setting,Statistics,UserProfile,Attachment,Category,MyRole,Admin
15:47:13.580 4 W - [Common]需要检查架构的实体类（2个）：MyRole,Admin
15:47:13.580 4 W - Common待检查表架构的实体个数：2
15:47:13.673 8 Y - DropDefault(LastLogin)
15:47:13.845 4 W - DropDefault(LastLogin)
15:47:13.907 4 W - 检查连接[Common/MySql]的数据库架构耗时00:00:00.3937205
15:47:13.907 8 Y - 初始化NewLife.YWS.Entities.Admin数据
15:47:13.907 4 W - 一级缓存：关闭缓存
15:47:15.576 4 W - 更新实体缓存（第1次）：NewLife.YWS.Entities.Admin 原因：第一次 Administrator<>.FindByName(String name)<-.Login(String username,String password,Int32 hashTimes)
15:47:15.576 4 W - 完成更新缓存（第1次）：NewLife.YWS.Entities.Admin
15:47:15.608 4 W - 清空实体缓存：NewLife.YWS.Entities.Admin 原因：修改数据后提交事务
15:47:15.633 4 W - 检查实体NewLife.CommonEntity.Log的数据表架构，模式：CheckTableWhenFirstUse
15:47:15.633 4 W - DropDefault(OccurTime)
15:47:15.633 4 W - AddDefault(OccurTime,)
15:47:15.633 4 W - 初始化NewLife.CommonEntity.Log数据
15:47:15.693 4 W - 更新实体缓存（第1次）：NewLife.YWS.Entities.MyRole 原因：第一次 Role<>.FindByID(Int32 id)<-
15:47:15.693 4 W - 初始化NewLife.YWS.Entities.MyRole数据
15:47:15.703 4 W - 检查实体NewLife.CommonEntity.RoleMenu的数据表架构，模式：CheckTableWhenFirstUse
15:47:15.703 4 W - 初始化NewLife.CommonEntity.RoleMenu数据
15:47:15.713 4 W - 如果某一个菜单对应的RoleMenu（角色菜单对应关系）为空或者只有一个，则授权第一个角色访问所有菜单！
15:47:15.723 4 W - 更新实体缓存（第1次）：NewLife.CommonEntity.Menu 原因：第一次 EntityTree<,>.FindAllByParent(EntityTree<,>.TKey parentKey)<-.FindChilds()
15:47:15.723 4 W - 检查实体NewLife.CommonEntity.Menu的数据表架构，模式：CheckTableWhenFirstUse
15:47:15.754 4 W - 初始化NewLife.CommonEntity.Menu数据
15:47:15.754 4 W - 完成更新缓存（第1次）：NewLife.CommonEntity.Menu
15:47:15.770 4 W - 更新实体缓存（第1次）：NewLife.CommonEntity.RoleMenu 原因：第一次 RoleMenu<>.CheckNonePerssion(Int32 menuID)<-Role<,,>.InitData()
15:47:15.786 4 W - 完成更新缓存（第1次）：NewLife.CommonEntity.RoleMenu
15:47:15.786 4 W - 完成更新缓存（第1次）：NewLife.YWS.Entities.MyRole
15:47:20.190 4 W - 初始化Bioinfo.Entites.News数据
15:47:20.221 4 W - 初始化Bioinfo.Entites.Category数据
15:47:20.221 4 W - 更新实体缓存（第1次）：Bioinfo.Entites.Category 原因：第一次 Category.FindById(Int32 id)<-News.get_Category()
15:47:20.221 4 W - 完成更新缓存（第1次）：Bioinfo.Entites.Category
15:48:20.343 2 N - 清空单对象缓存：NewLife.CommonEntity.Setting

#Software: .
#ProcessID: 6064
#AppDomain: c5a66244-1-129932057044777874
#BaseDirectory: C:\DevelopMent\Bioinfo\BioinfoWebSite\
#Date: 2012-09-27
#Fields: Time ThreadID IsPoolThread ThreadName Message
15:48:25.210 4 W - NewLife.Core v3.8.2012.0803 Build 2012-09-25 12:03:50
15:48:25.210 4 W - 为NewLife.CommonEntity.IManageProvider配置注册YWSManageProvider，标识Identity=，优先级Priority=5！
15:48:26.817 4 W - NewLife.XCode v8.8.2012.0828 Build 2012-09-25 12:01:34
15:48:26.817 4 W - 检查实体NewLife.CommonEntity.Setting的数据表架构，模式：CheckTableWhenFirstUse
15:48:26.958 4 W - 初始化NewLife.CommonEntity.Setting数据
15:48:26.958 4 W - 开始检查连接[Common/MySql]的数据库架构……
15:48:27.036 4 W - [Common]的所有实体类（18个）：Sequence,GuidCategory,Administrator,Menu,Role,RoleMenu,Log,Area,User,Simple,SimpleTree,Setting,Statistics,UserProfile,Attachment,Category,MyRole,Admin
15:48:27.036 4 W - [Common]需要检查架构的实体类（2个）：MyRole,Admin
15:48:27.036 4 W - Common待检查表架构的实体个数：2
15:48:27.129 8 Y - DropDefault(LastLogin)
15:48:27.270 4 W - DropDefault(LastLogin)
15:48:27.348 4 W - 检查连接[Common/MySql]的数据库架构耗时00:00:00.3786197
15:48:27.348 8 Y - 初始化NewLife.YWS.Entities.Admin数据
15:48:27.348 4 W - 一级缓存：关闭缓存
15:48:28.798 8 W - 更新实体缓存（第1次）：NewLife.YWS.Entities.Admin 原因：第一次 Administrator<>.FindByName(String name)<-.Login(String username,String password,Int32 hashTimes)
15:48:28.798 8 W - 完成更新缓存（第1次）：NewLife.YWS.Entities.Admin
15:48:28.837 8 W - 清空实体缓存：NewLife.YWS.Entities.Admin 原因：修改数据后提交事务
15:48:28.858 8 W - 检查实体NewLife.CommonEntity.Log的数据表架构，模式：CheckTableWhenFirstUse
15:48:28.858 8 W - DropDefault(OccurTime)
15:48:28.858 8 W - AddDefault(OccurTime,)
15:48:28.858 8 W - 初始化NewLife.CommonEntity.Log数据
15:48:28.908 8 W - 更新实体缓存（第1次）：NewLife.YWS.Entities.MyRole 原因：第一次 Role<>.FindByID(Int32 id)<-
15:48:28.918 8 W - 初始化NewLife.YWS.Entities.MyRole数据
15:48:28.928 8 W - 检查实体NewLife.CommonEntity.RoleMenu的数据表架构，模式：CheckTableWhenFirstUse
15:48:28.928 8 W - 初始化NewLife.CommonEntity.RoleMenu数据
15:48:28.928 8 W - 如果某一个菜单对应的RoleMenu（角色菜单对应关系）为空或者只有一个，则授权第一个角色访问所有菜单！
15:48:28.948 8 W - 更新实体缓存（第1次）：NewLife.CommonEntity.Menu 原因：第一次 EntityTree<,>.FindAllByParent(EntityTree<,>.TKey parentKey)<-.FindChilds()
15:48:28.948 8 W - 检查实体NewLife.CommonEntity.Menu的数据表架构，模式：CheckTableWhenFirstUse
15:48:28.979 8 W - 初始化NewLife.CommonEntity.Menu数据
15:48:28.994 8 W - 完成更新缓存（第1次）：NewLife.CommonEntity.Menu
15:48:28.994 8 W - 更新实体缓存（第1次）：NewLife.CommonEntity.RoleMenu 原因：第一次 RoleMenu<>.CheckNonePerssion(Int32 menuID)<-Role<,,>.InitData()
15:48:29.010 8 W - 完成更新缓存（第1次）：NewLife.CommonEntity.RoleMenu
15:48:29.026 8 W - 完成更新缓存（第1次）：NewLife.YWS.Entities.MyRole
15:48:35.248 11 W - 初始化Bioinfo.Entites.News数据
15:48:35.279 11 W - 初始化Bioinfo.Entites.Category数据
15:48:35.279 11 W - 更新实体缓存（第1次）：Bioinfo.Entites.Category 原因：第一次 Category.FindById(Int32 id)<-News.get_Category()
15:48:35.279 11 W - 完成更新缓存（第1次）：Bioinfo.Entites.Category
15:49:53.061 2 N - 清空单对象缓存：NewLife.CommonEntity.Setting

#Software: .
#ProcessID: 3908
#AppDomain: c5a66244-1-129932058068523957
#BaseDirectory: C:\DevelopMent\Bioinfo\BioinfoWebSite\
#Date: 2012-09-27
#Fields: Time ThreadID IsPoolThread ThreadName Message
15:50:07.554 4 W - NewLife.Core v3.8.2012.0803 Build 2012-09-25 12:03:50
15:50:07.569 4 W - 为NewLife.CommonEntity.IManageProvider配置注册YWSManageProvider，标识Identity=，优先级Priority=5！
15:50:09.223 8 W - NewLife.XCode v8.8.2012.0828 Build 2012-09-25 12:01:34
15:50:09.223 8 W - 检查实体NewLife.CommonEntity.Setting的数据表架构，模式：CheckTableWhenFirstUse
15:50:09.348 8 W - 初始化NewLife.CommonEntity.Setting数据
15:50:09.348 8 W - 开始检查连接[Common/MySql]的数据库架构……
15:50:09.426 8 W - [Common]的所有实体类（18个）：Sequence,GuidCategory,Administrator,Menu,Role,RoleMenu,Log,Area,User,Simple,SimpleTree,Setting,Statistics,UserProfile,Attachment,Category,MyRole,Admin
15:50:09.426 8 W - [Common]需要检查架构的实体类（2个）：MyRole,Admin
15:50:09.442 8 W - Common待检查表架构的实体个数：2
15:50:09.520 4 Y - DropDefault(LastLogin)
15:50:09.660 8 W - DropDefault(LastLogin)
15:50:09.707 8 W - 检查连接[Common/MySql]的数据库架构耗时00:00:00.3567128
15:50:09.707 4 Y - 初始化NewLife.YWS.Entities.Admin数据
15:50:09.722 8 W - 一级缓存：关闭缓存
15:50:11.360 8 W - 更新实体缓存（第1次）：NewLife.YWS.Entities.Admin 原因：第一次 Administrator<>.FindByName(String name)<-.Login(String username,String password,Int32 hashTimes)
15:50:11.360 8 W - 完成更新缓存（第1次）：NewLife.YWS.Entities.Admin
15:50:11.392 8 W - 清空实体缓存：NewLife.YWS.Entities.Admin 原因：修改数据后提交事务
15:50:11.417 8 W - 检查实体NewLife.CommonEntity.Log的数据表架构，模式：CheckTableWhenFirstUse
15:50:11.417 8 W - DropDefault(OccurTime)
15:50:11.417 8 W - AddDefault(OccurTime,)
15:50:11.417 8 W - 初始化NewLife.CommonEntity.Log数据
15:50:11.467 4 W - 更新实体缓存（第1次）：NewLife.YWS.Entities.MyRole 原因：第一次 Role<>.FindByID(Int32 id)<-
15:50:11.467 4 W - 初始化NewLife.YWS.Entities.MyRole数据
15:50:11.477 4 W - 检查实体NewLife.CommonEntity.RoleMenu的数据表架构，模式：CheckTableWhenFirstUse
15:50:11.487 4 W - 初始化NewLife.CommonEntity.RoleMenu数据
15:50:11.487 4 W - 如果某一个菜单对应的RoleMenu（角色菜单对应关系）为空或者只有一个，则授权第一个角色访问所有菜单！
15:50:11.497 4 W - 更新实体缓存（第1次）：NewLife.CommonEntity.Menu 原因：第一次 EntityTree<,>.FindAllByParent(EntityTree<,>.TKey parentKey)<-.FindChilds()
15:50:11.497 4 W - 检查实体NewLife.CommonEntity.Menu的数据表架构，模式：CheckTableWhenFirstUse
15:50:11.523 4 W - 初始化NewLife.CommonEntity.Menu数据
15:50:11.538 4 W - 完成更新缓存（第1次）：NewLife.CommonEntity.Menu
15:50:11.554 4 W - 更新实体缓存（第1次）：NewLife.CommonEntity.RoleMenu 原因：第一次 RoleMenu<>.CheckNonePerssion(Int32 menuID)<-Role<,,>.InitData()
15:50:11.554 4 W - 完成更新缓存（第1次）：NewLife.CommonEntity.RoleMenu
15:50:11.570 4 W - 完成更新缓存（第1次）：NewLife.YWS.Entities.MyRole
15:50:15.820 4 W - 初始化Bioinfo.Entites.News数据
15:50:15.851 4 W - 初始化Bioinfo.Entites.Category数据
15:50:15.851 4 W - 更新实体缓存（第1次）：Bioinfo.Entites.Category 原因：第一次 Category.FindById(Int32 id)<-News.get_Category()
15:50:15.851 4 W - 完成更新缓存（第1次）：Bioinfo.Entites.Category
15:50:39.493 2 N - 清空单对象缓存：NewLife.CommonEntity.Setting
15:50:39.493 2 N - 错误的连接字符串：Server=192.168.1.47;Database=Bioinfodb2;Uid=root;Pwd=yrshabc123
15:50:39.493 2 N - XCode.Exceptions.XDbSessionException: Unable to connect to any of the specified MySQL hosts.[DB:Common/MySql] ---> MySql.Data.MySqlClient.MySqlException: Unable to connect to any of the specified MySQL hosts. ---> System.ApplicationException: 应用程序中的错误。
   在 System.Threading.ThreadPool.RegisterWaitForSingleObjectNative(WaitHandle waitHandle, Object state, UInt32 timeOutInterval, Boolean executeOnlyOnce, RegisteredWaitHandle registeredWaitHandle, StackCrawlMark& stackMark, Boolean compressStack)
   在 System.Threading.ThreadPool.RegisterWaitForSingleObject(WaitHandle waitObject, WaitOrTimerCallback callBack, Object state, UInt32 millisecondsTimeOutInterval, Boolean executeOnlyOnce, StackCrawlMark& stackMark, Boolean compressStack)
   在 System.Threading.ThreadPool.UnsafeRegisterWaitForSingleObject(WaitHandle waitObject, WaitOrTimerCallback callBack, Object state, Int32 millisecondsTimeOutInterval, Boolean executeOnlyOnce)
   在 System.Net.Sockets.Socket.SetAsyncEventSelect(AsyncEventBits blockEventBits)
   在 System.Net.Sockets.Socket.DoBeginConnect(EndPoint endPointSnapshot, SocketAddress socketAddress, LazyAsyncResult asyncResult)
   在 System.Net.Sockets.Socket.BeginConnect(EndPoint remoteEP, AsyncCallback callback, Object state)
   在 MySql.Data.Common.StreamCreator.CreateSocketStream(IPAddress ip, Boolean unix)
   在 MySql.Data.Common.StreamCreator.GetStream(UInt32 timeout)
   在 MySql.Data.MySqlClient.NativeDriver.Open()
   --- 内部异常堆栈跟踪的结尾 ---
   在 MySql.Data.MySqlClient.NativeDriver.Open()
   在 MySql.Data.MySqlClient.Driver.Open()
   在 MySql.Data.MySqlClient.Driver.Create(MySqlConnectionStringBuilder settings)
   在 MySql.Data.MySqlClient.MySqlPool.GetPooledConnection()
   在 MySql.Data.MySqlClient.MySqlPool.TryToGetDriver()
   在 MySql.Data.MySqlClient.MySqlPool.GetConnection()
   在 MySql.Data.MySqlClient.MySqlConnection.Open()
   在 XCode.DataAccessLayer.DbSession.Open()
   在 XCode.DataAccessLayer.DbSession.BeginTransaction()
   --- 内部异常堆栈跟踪的结尾 ---
   在 XCode.DataAccessLayer.DbSession.BeginTransaction()
   在 XCode.DataAccessLayer.DAL.BeginTransaction()
   在 XCode.Entity`1.Meta.BeginTrans()
   在 XCode.Entity`1.DoAction(Func`1 func, Nullable`1 isnew)
   在 XCode.Entity`1.Update()
   在 XCode.Cache.SingleEntityCache`2.<>c__DisplayClass1c.<Clear>b__1b()
   在 XCode.Cache.CacheBase`1.InvokeFill(Func callback)

#Software: .
#ProcessID: 3344
#AppDomain: c5a66244-1-129932064497838399
#BaseDirectory: C:\DevelopMent\Bioinfo\BioinfoWebSite\
#Date: 2012-09-27
#Fields: Time ThreadID IsPoolThread ThreadName Message
16:00:50.501 4 W - NewLife.Core v3.8.2012.0803 Build 2012-09-25 12:03:50
16:00:50.501 4 W - 为NewLife.CommonEntity.IManageProvider配置注册YWSManageProvider，标识Identity=，优先级Priority=5！
16:00:52.326 9 W - NewLife.XCode v8.8.2012.0828 Build 2012-09-25 12:01:34
16:00:52.326 9 W - 检查实体NewLife.CommonEntity.Setting的数据表架构，模式：CheckTableWhenFirstUse
16:00:52.482 9 W - 初始化NewLife.CommonEntity.Setting数据
16:00:52.482 9 W - 开始检查连接[Common/MySql]的数据库架构……
16:00:52.576 9 W - [Common]的所有实体类（18个）：Sequence,GuidCategory,Administrator,Menu,Role,RoleMenu,Log,Area,User,Simple,SimpleTree,Setting,Statistics,UserProfile,Attachment,Category,MyRole,Admin
16:00:52.576 9 W - [Common]需要检查架构的实体类（2个）：MyRole,Admin
16:00:52.576 9 W - Common待检查表架构的实体个数：2
16:00:52.623 4 Y - DropDefault(LastLogin)
16:00:52.763 9 W - DropDefault(LastLogin)
16:00:52.841 9 W - 检查连接[Common/MySql]的数据库架构耗时00:00:00.3606833
16:00:52.841 4 Y - 初始化NewLife.YWS.Entities.Admin数据
16:00:52.841 9 W - 一级缓存：关闭缓存
16:00:54.791 11 W - 更新实体缓存（第1次）：NewLife.YWS.Entities.Admin 原因：第一次 Administrator<>.FindByName(String name)<-.Login(String username,String password,Int32 hashTimes)
16:00:54.791 11 W - 完成更新缓存（第1次）：NewLife.YWS.Entities.Admin
16:00:54.822 11 W - 清空实体缓存：NewLife.YWS.Entities.Admin 原因：修改数据后提交事务
16:00:54.858 11 W - 检查实体NewLife.CommonEntity.Log的数据表架构，模式：CheckTableWhenFirstUse
16:00:54.928 11 W - DropDefault(OccurTime)
16:00:54.928 11 W - AddDefault(OccurTime,)
16:00:54.928 11 W - 初始化NewLife.CommonEntity.Log数据
16:00:54.969 9 W - 更新实体缓存（第1次）：NewLife.YWS.Entities.MyRole 原因：第一次 Role<>.FindByID(Int32 id)<-
16:00:54.969 9 W - 初始化NewLife.YWS.Entities.MyRole数据
16:00:54.985 9 W - 检查实体NewLife.CommonEntity.RoleMenu的数据表架构，模式：CheckTableWhenFirstUse
16:00:54.985 9 W - 初始化NewLife.CommonEntity.RoleMenu数据
16:00:55.000 9 W - 如果某一个菜单对应的RoleMenu（角色菜单对应关系）为空或者只有一个，则授权第一个角色访问所有菜单！
16:00:55.016 9 W - 更新实体缓存（第1次）：NewLife.CommonEntity.Menu 原因：第一次 EntityTree<,>.FindAllByParent(EntityTree<,>.TKey parentKey)<-.FindChilds()
16:00:55.016 9 W - 检查实体NewLife.CommonEntity.Menu的数据表架构，模式：CheckTableWhenFirstUse
16:00:55.047 9 W - 初始化NewLife.CommonEntity.Menu数据
16:00:55.063 9 W - 完成更新缓存（第1次）：NewLife.CommonEntity.Menu
16:00:55.078 9 W - 更新实体缓存（第1次）：NewLife.CommonEntity.RoleMenu 原因：第一次 RoleMenu<>.CheckNonePerssion(Int32 menuID)<-Role<,,>.InitData()
16:00:55.078 9 W - 完成更新缓存（第1次）：NewLife.CommonEntity.RoleMenu
16:00:55.094 9 W - 完成更新缓存（第1次）：NewLife.YWS.Entities.MyRole
16:00:59.570 12 W - 初始化Bioinfo.Entites.News数据
16:00:59.601 12 W - 初始化Bioinfo.Entites.Category数据
16:00:59.617 12 W - 更新实体缓存（第1次）：Bioinfo.Entites.Category 原因：第一次 Category.FindById(Int32 id)<-News.get_Category()
16:00:59.617 12 W - 完成更新缓存（第1次）：Bioinfo.Entites.Category
16:01:13.407 2 N - 清空单对象缓存：NewLife.CommonEntity.Setting
16:01:13.407 2 N - 错误的连接字符串：Server=192.168.1.47;Database=Bioinfodb2;Uid=root;Pwd=yrshabc123
16:01:13.407 2 N - XCode.Exceptions.XDbSessionException: Unable to connect to any of the specified MySQL hosts.[DB:Common/MySql] ---> MySql.Data.MySqlClient.MySqlException: Unable to connect to any of the specified MySQL hosts. ---> System.ApplicationException: 应用程序中的错误。
   在 System.Threading.ThreadPool.RegisterWaitForSingleObjectNative(WaitHandle waitHandle, Object state, UInt32 timeOutInterval, Boolean executeOnlyOnce, RegisteredWaitHandle registeredWaitHandle, StackCrawlMark& stackMark, Boolean compressStack)
   在 System.Threading.ThreadPool.RegisterWaitForSingleObject(WaitHandle waitObject, WaitOrTimerCallback callBack, Object state, UInt32 millisecondsTimeOutInterval, Boolean executeOnlyOnce, StackCrawlMark& stackMark, Boolean compressStack)
   在 System.Threading.ThreadPool.UnsafeRegisterWaitForSingleObject(WaitHandle waitObject, WaitOrTimerCallback callBack, Object state, Int32 millisecondsTimeOutInterval, Boolean executeOnlyOnce)
   在 System.Net.Sockets.Socket.SetAsyncEventSelect(AsyncEventBits blockEventBits)
   在 System.Net.Sockets.Socket.DoBeginConnect(EndPoint endPointSnapshot, SocketAddress socketAddress, LazyAsyncResult asyncResult)
   在 System.Net.Sockets.Socket.BeginConnect(EndPoint remoteEP, AsyncCallback callback, Object state)
   在 MySql.Data.Common.StreamCreator.CreateSocketStream(IPAddress ip, Boolean unix)
   在 MySql.Data.Common.StreamCreator.GetStream(UInt32 timeout)
   在 MySql.Data.MySqlClient.NativeDriver.Open()
   --- 内部异常堆栈跟踪的结尾 ---
   在 MySql.Data.MySqlClient.NativeDriver.Open()
   在 MySql.Data.MySqlClient.Driver.Open()
   在 MySql.Data.MySqlClient.Driver.Create(MySqlConnectionStringBuilder settings)
   在 MySql.Data.MySqlClient.MySqlPool.GetPooledConnection()
   在 MySql.Data.MySqlClient.MySqlPool.TryToGetDriver()
   在 MySql.Data.MySqlClient.MySqlPool.GetConnection()
   在 MySql.Data.MySqlClient.MySqlConnection.Open()
   在 XCode.DataAccessLayer.DbSession.Open()
   在 XCode.DataAccessLayer.DbSession.BeginTransaction()
   --- 内部异常堆栈跟踪的结尾 ---
   在 XCode.DataAccessLayer.DbSession.BeginTransaction()
   在 XCode.DataAccessLayer.DAL.BeginTransaction()
   在 XCode.Entity`1.Meta.BeginTrans()
   在 XCode.Entity`1.DoAction(Func`1 func, Nullable`1 isnew)
   在 XCode.Entity`1.Update()
   在 XCode.Cache.SingleEntityCache`2.<>c__DisplayClass1c.<Clear>b__1b()
   在 XCode.Cache.CacheBase`1.InvokeFill(Func callback)

#Software: .
#ProcessID: 3280
#AppDomain: c5a66244-1-129932065041528774
#BaseDirectory: C:\DevelopMent\Bioinfo\BioinfoWebSite\
#Date: 2012-09-27
#Fields: Time ThreadID IsPoolThread ThreadName Message
16:01:44.876 4 W - NewLife.Core v3.8.2012.0803 Build 2012-09-25 12:03:50
16:01:44.881 4 W - 为NewLife.CommonEntity.IManageProvider配置注册YWSManageProvider，标识Identity=，优先级Priority=5！
16:01:46.354 4 W - NewLife.XCode v8.8.2012.0828 Build 2012-09-25 12:01:34
16:01:46.356 4 W - 一级缓存：关闭缓存
16:01:46.372 4 W - 更新实体缓存（第1次）：NewLife.YWS.Entities.Admin 原因：第一次 Administrator<>.FindByName(String name)<-.Login(String username,String password,Int32 hashTimes)
16:01:46.861 4 W - DropDefault(LastLogin)
16:01:46.895 4 W - 初始化NewLife.YWS.Entities.Admin数据
16:01:46.909 4 W - 开始检查连接[Common/MySql]的数据库架构……
16:01:46.997 4 W - [Common]的所有实体类（18个）：Sequence,GuidCategory,Administrator,Menu,Role,RoleMenu,Log,Area,User,Simple,SimpleTree,Setting,Statistics,UserProfile,Attachment,Category,MyRole,Admin
16:01:46.997 4 W - [Common]需要检查架构的实体类（2个）：MyRole,Admin
16:01:46.998 4 W - Common待检查表架构的实体个数：2
16:01:47.160 4 W - DropDefault(LastLogin)
16:01:47.193 4 W - 检查连接[Common/MySql]的数据库架构耗时00:00:00.2828461
16:01:47.217 4 W - 完成更新缓存（第1次）：NewLife.YWS.Entities.Admin
16:01:47.277 4 W - 清空实体缓存：NewLife.YWS.Entities.Admin 原因：修改数据后提交事务
16:01:47.303 4 W - 检查实体NewLife.CommonEntity.Log的数据表架构，模式：CheckTableWhenFirstUse
16:01:47.303 4 W - DropDefault(OccurTime)
16:01:47.304 4 W - AddDefault(OccurTime,)
16:01:47.304 4 W - 初始化NewLife.CommonEntity.Log数据
16:01:47.348 4 W - 更新实体缓存（第1次）：NewLife.YWS.Entities.MyRole 原因：第一次 Role<>.FindByID(Int32 id)<-
16:01:47.348 4 W - 初始化NewLife.YWS.Entities.MyRole数据
16:01:47.361 4 W - 检查实体NewLife.CommonEntity.RoleMenu的数据表架构，模式：CheckTableWhenFirstUse
16:01:47.365 4 W - 初始化NewLife.CommonEntity.RoleMenu数据
16:01:47.366 4 W - 如果某一个菜单对应的RoleMenu（角色菜单对应关系）为空或者只有一个，则授权第一个角色访问所有菜单！
16:01:47.378 4 W - 更新实体缓存（第1次）：NewLife.CommonEntity.Menu 原因：第一次 EntityTree<,>.FindAllByParent(EntityTree<,>.TKey parentKey)<-.FindChilds()
16:01:47.379 4 W - 检查实体NewLife.CommonEntity.Menu的数据表架构，模式：CheckTableWhenFirstUse
16:01:47.423 4 W - 初始化NewLife.CommonEntity.Menu数据
16:01:47.433 4 W - 完成更新缓存（第1次）：NewLife.CommonEntity.Menu
16:01:47.447 4 W - 更新实体缓存（第1次）：NewLife.CommonEntity.RoleMenu 原因：第一次 RoleMenu<>.CheckNonePerssion(Int32 menuID)<-Role<,,>.InitData()
16:01:47.452 4 W - 完成更新缓存（第1次）：NewLife.CommonEntity.RoleMenu
16:01:47.465 4 W - 完成更新缓存（第1次）：NewLife.YWS.Entities.MyRole
16:01:47.502 4 W - 检查实体NewLife.CommonEntity.Setting的数据表架构，模式：CheckTableWhenFirstUse
16:01:47.503 4 W - 初始化NewLife.CommonEntity.Setting数据
16:01:51.837 4 W - 初始化Bioinfo.Entites.News数据
16:01:51.905 4 W - 初始化Bioinfo.Entites.Category数据
16:01:51.910 4 W - 更新实体缓存（第1次）：Bioinfo.Entites.Category 原因：第一次 Category.FindById(Int32 id)<-News.get_Category()
16:01:51.915 4 W - 完成更新缓存（第1次）：Bioinfo.Entites.Category
16:02:24.507 2 N - 清空单对象缓存：NewLife.CommonEntity.Setting
16:02:24.511 2 N - 错误的连接字符串：Server=192.168.1.47;Database=Bioinfodb2;Uid=root;Pwd=yrshabc123
16:02:24.514 2 N - XCode.Exceptions.XDbSessionException: Unable to connect to any of the specified MySQL hosts.[DB:Common/MySql] ---> MySql.Data.MySqlClient.MySqlException: Unable to connect to any of the specified MySQL hosts. ---> System.ApplicationException: 应用程序中的错误。
   在 System.Threading.ThreadPool.RegisterWaitForSingleObjectNative(WaitHandle waitHandle, Object state, UInt32 timeOutInterval, Boolean executeOnlyOnce, RegisteredWaitHandle registeredWaitHandle, StackCrawlMark& stackMark, Boolean compressStack)
   在 System.Threading.ThreadPool.RegisterWaitForSingleObject(WaitHandle waitObject, WaitOrTimerCallback callBack, Object state, UInt32 millisecondsTimeOutInterval, Boolean executeOnlyOnce, StackCrawlMark& stackMark, Boolean compressStack)
   在 System.Threading.ThreadPool.UnsafeRegisterWaitForSingleObject(WaitHandle waitObject, WaitOrTimerCallback callBack, Object state, Int32 millisecondsTimeOutInterval, Boolean executeOnlyOnce)
   在 System.Net.Sockets.Socket.SetAsyncEventSelect(AsyncEventBits blockEventBits)
   在 System.Net.Sockets.Socket.DoBeginConnect(EndPoint endPointSnapshot, SocketAddress socketAddress, LazyAsyncResult asyncResult)
   在 System.Net.Sockets.Socket.BeginConnect(EndPoint remoteEP, AsyncCallback callback, Object state)
   在 MySql.Data.Common.StreamCreator.CreateSocketStream(IPAddress ip, Boolean unix)
   在 MySql.Data.Common.StreamCreator.GetStream(UInt32 timeout)
   在 MySql.Data.MySqlClient.NativeDriver.Open()
   --- 内部异常堆栈跟踪的结尾 ---
   在 MySql.Data.MySqlClient.NativeDriver.Open()
   在 MySql.Data.MySqlClient.Driver.Open()
   在 MySql.Data.MySqlClient.Driver.Create(MySqlConnectionStringBuilder settings)
   在 MySql.Data.MySqlClient.MySqlPool.GetPooledConnection()
   在 MySql.Data.MySqlClient.MySqlPool.TryToGetDriver()
   在 MySql.Data.MySqlClient.MySqlPool.GetConnection()
   在 MySql.Data.MySqlClient.MySqlConnection.Open()
   在 XCode.DataAccessLayer.DbSession.Open()
   在 XCode.DataAccessLayer.DbSession.BeginTransaction()
   --- 内部异常堆栈跟踪的结尾 ---
   在 XCode.DataAccessLayer.DbSession.BeginTransaction()
   在 XCode.DataAccessLayer.DAL.BeginTransaction()
   在 XCode.Entity`1.Meta.BeginTrans()
   在 XCode.Entity`1.DoAction(Func`1 func, Nullable`1 isnew)
   在 XCode.Entity`1.Update()
   在 XCode.Cache.SingleEntityCache`2.<>c__DisplayClass1c.<Clear>b__1b()
   在 XCode.Cache.CacheBase`1.InvokeFill(Func callback)

#Software: .
#ProcessID: 5736
#AppDomain: c5a66244-1-129932065511306365
#BaseDirectory: C:\DevelopMent\Bioinfo\BioinfoWebSite\
#Date: 2012-09-27
#Fields: Time ThreadID IsPoolThread ThreadName Message
16:02:31.941 4 W - NewLife.Core v3.8.2012.0803 Build 2012-09-25 12:03:50
16:02:31.941 4 W - 为NewLife.CommonEntity.IManageProvider配置注册YWSManageProvider，标识Identity=，优先级Priority=5！
16:02:33.626 9 W - NewLife.XCode v8.8.2012.0828 Build 2012-09-25 12:01:34
16:02:33.626 9 W - 检查实体NewLife.CommonEntity.Setting的数据表架构，模式：CheckTableWhenFirstUse
16:02:33.751 9 W - 初始化NewLife.CommonEntity.Setting数据
16:02:33.751 9 W - 开始检查连接[Common/MySql]的数据库架构……
16:02:33.829 9 W - [Common]的所有实体类（18个）：Sequence,GuidCategory,Administrator,Menu,Role,RoleMenu,Log,Area,User,Simple,SimpleTree,Setting,Statistics,UserProfile,Attachment,Category,MyRole,Admin
16:02:33.829 9 W - [Common]需要检查架构的实体类（2个）：MyRole,Admin
16:02:33.829 9 W - Common待检查表架构的实体个数：2
16:02:33.907 4 Y - DropDefault(LastLogin)
16:02:34.047 9 W - DropDefault(LastLogin)
16:02:34.110 9 W - 检查连接[Common/MySql]的数据库架构耗时00:00:00.3512789
16:02:34.110 4 Y - 初始化NewLife.YWS.Entities.Admin数据
16:02:34.110 9 W - 一级缓存：关闭缓存
16:02:35.483 4 W - 更新实体缓存（第1次）：NewLife.YWS.Entities.Admin 原因：第一次 Administrator<>.FindByName(String name)<-.Login(String username,String password,Int32 hashTimes)
16:02:35.498 4 W - 完成更新缓存（第1次）：NewLife.YWS.Entities.Admin
16:02:35.529 4 W - 清空实体缓存：NewLife.YWS.Entities.Admin 原因：修改数据后提交事务
16:02:35.553 4 W - 检查实体NewLife.CommonEntity.Log的数据表架构，模式：CheckTableWhenFirstUse
16:02:35.555 4 W - DropDefault(OccurTime)
16:02:35.555 4 W - AddDefault(OccurTime,)
16:02:35.555 4 W - 初始化NewLife.CommonEntity.Log数据
16:02:35.595 9 W - 更新实体缓存（第1次）：NewLife.YWS.Entities.MyRole 原因：第一次 Role<>.FindByID(Int32 id)<-
16:02:35.595 9 W - 初始化NewLife.YWS.Entities.MyRole数据
16:02:35.615 9 W - 检查实体NewLife.CommonEntity.RoleMenu的数据表架构，模式：CheckTableWhenFirstUse
16:02:35.615 9 W - 初始化NewLife.CommonEntity.RoleMenu数据
16:02:35.615 9 W - 如果某一个菜单对应的RoleMenu（角色菜单对应关系）为空或者只有一个，则授权第一个角色访问所有菜单！
16:02:35.635 9 W - 更新实体缓存（第1次）：NewLife.CommonEntity.Menu 原因：第一次 EntityTree<,>.FindAllByParent(EntityTree<,>.TKey parentKey)<-.FindChilds()
16:02:35.635 9 W - 检查实体NewLife.CommonEntity.Menu的数据表架构，模式：CheckTableWhenFirstUse
16:02:35.651 9 W - 初始化NewLife.CommonEntity.Menu数据
16:02:35.666 9 W - 完成更新缓存（第1次）：NewLife.CommonEntity.Menu
16:02:35.682 9 W - 更新实体缓存（第1次）：NewLife.CommonEntity.RoleMenu 原因：第一次 RoleMenu<>.CheckNonePerssion(Int32 menuID)<-Role<,,>.InitData()
16:02:35.682 9 W - 完成更新缓存（第1次）：NewLife.CommonEntity.RoleMenu
16:02:35.697 9 W - 完成更新缓存（第1次）：NewLife.YWS.Entities.MyRole
16:02:40.997 12 W - 初始化Bioinfo.Entites.News数据
16:02:41.028 12 W - 初始化Bioinfo.Entites.Category数据
16:02:41.044 12 W - 更新实体缓存（第1次）：Bioinfo.Entites.Category 原因：第一次 Category.FindById(Int32 id)<-News.get_Category()
16:02:41.044 12 W - 完成更新缓存（第1次）：Bioinfo.Entites.Category
16:03:09.311 2 N - 清空单对象缓存：NewLife.CommonEntity.Setting
16:03:09.311 2 N - 错误的连接字符串：Server=192.168.1.47;Database=Bioinfodb2;Uid=root;Pwd=yrshabc123
16:03:09.311 2 N - XCode.Exceptions.XDbSessionException: Unable to connect to any of the specified MySQL hosts.[DB:Common/MySql] ---> MySql.Data.MySqlClient.MySqlException: Unable to connect to any of the specified MySQL hosts. ---> System.ApplicationException: 应用程序中的错误。
   在 System.Threading.ThreadPool.RegisterWaitForSingleObjectNative(WaitHandle waitHandle, Object state, UInt32 timeOutInterval, Boolean executeOnlyOnce, RegisteredWaitHandle registeredWaitHandle, StackCrawlMark& stackMark, Boolean compressStack)
   在 System.Threading.ThreadPool.RegisterWaitForSingleObject(WaitHandle waitObject, WaitOrTimerCallback callBack, Object state, UInt32 millisecondsTimeOutInterval, Boolean executeOnlyOnce, StackCrawlMark& stackMark, Boolean compressStack)
   在 System.Threading.ThreadPool.UnsafeRegisterWaitForSingleObject(WaitHandle waitObject, WaitOrTimerCallback callBack, Object state, Int32 millisecondsTimeOutInterval, Boolean executeOnlyOnce)
   在 System.Net.Sockets.Socket.SetAsyncEventSelect(AsyncEventBits blockEventBits)
   在 System.Net.Sockets.Socket.DoBeginConnect(EndPoint endPointSnapshot, SocketAddress socketAddress, LazyAsyncResult asyncResult)
   在 System.Net.Sockets.Socket.BeginConnect(EndPoint remoteEP, AsyncCallback callback, Object state)
   在 MySql.Data.Common.StreamCreator.CreateSocketStream(IPAddress ip, Boolean unix)
   在 MySql.Data.Common.StreamCreator.GetStream(UInt32 timeout)
   在 MySql.Data.MySqlClient.NativeDriver.Open()
   --- 内部异常堆栈跟踪的结尾 ---
   在 MySql.Data.MySqlClient.NativeDriver.Open()
   在 MySql.Data.MySqlClient.Driver.Open()
   在 MySql.Data.MySqlClient.Driver.Create(MySqlConnectionStringBuilder settings)
   在 MySql.Data.MySqlClient.MySqlPool.GetPooledConnection()
   在 MySql.Data.MySqlClient.MySqlPool.TryToGetDriver()
   在 MySql.Data.MySqlClient.MySqlPool.GetConnection()
   在 MySql.Data.MySqlClient.MySqlConnection.Open()
   在 XCode.DataAccessLayer.DbSession.Open()
   在 XCode.DataAccessLayer.DbSession.BeginTransaction()
   --- 内部异常堆栈跟踪的结尾 ---
   在 XCode.DataAccessLayer.DbSession.BeginTransaction()
   在 XCode.DataAccessLayer.DAL.BeginTransaction()
   在 XCode.Entity`1.Meta.BeginTrans()
   在 XCode.Entity`1.DoAction(Func`1 func, Nullable`1 isnew)
   在 XCode.Entity`1.Update()
   在 XCode.Cache.SingleEntityCache`2.<>c__DisplayClass1c.<Clear>b__1b()
   在 XCode.Cache.CacheBase`1.InvokeFill(Func callback)

#Software: .
#ProcessID: 4668
#AppDomain: c5a66244-1-129932078627587367
#BaseDirectory: C:\DevelopMent\Bioinfo\BioinfoWebSite\
#Date: 2012-09-27
#Fields: Time ThreadID IsPoolThread ThreadName Message
16:24:23.460 4 W - NewLife.Core v3.8.2012.0803 Build 2012-09-25 12:03:50
16:24:23.460 4 W - 为NewLife.CommonEntity.IManageProvider配置注册YWSManageProvider，标识Identity=，优先级Priority=5！
16:24:25.098 8 W - NewLife.XCode v8.8.2012.0828 Build 2012-09-25 12:01:34
16:24:25.098 8 W - 检查实体NewLife.CommonEntity.Setting的数据表架构，模式：CheckTableWhenFirstUse
16:24:25.223 8 W - 初始化NewLife.CommonEntity.Setting数据
16:24:25.223 8 W - 开始检查连接[Common/MySql]的数据库架构……
16:24:25.301 8 W - [Common]的所有实体类（18个）：Sequence,GuidCategory,Administrator,Menu,Role,RoleMenu,Log,Area,User,Simple,SimpleTree,Setting,Statistics,UserProfile,Attachment,Category,MyRole,Admin
16:24:25.301 8 W - [Common]需要检查架构的实体类（2个）：MyRole,Admin
16:24:25.301 8 W - Common待检查表架构的实体个数：2
16:24:25.379 4 Y - DropDefault(LastLogin)
16:24:25.551 8 W - DropDefault(LastLogin)
16:24:25.629 8 W - 检查连接[Common/MySql]的数据库架构耗时00:00:00.3963238
16:24:25.629 4 Y - 初始化NewLife.YWS.Entities.Admin数据
16:24:25.629 8 W - 一级缓存：关闭缓存
16:24:26.970 4 W - 更新实体缓存（第1次）：NewLife.YWS.Entities.Admin 原因：第一次 Administrator<>.FindByName(String name)<-.Login(String username,String password,Int32 hashTimes)
16:24:26.970 4 W - 完成更新缓存（第1次）：NewLife.YWS.Entities.Admin
16:24:26.986 4 W - 清空实体缓存：NewLife.YWS.Entities.Admin 原因：修改数据后提交事务
16:24:27.022 4 W - 检查实体NewLife.CommonEntity.Log的数据表架构，模式：CheckTableWhenFirstUse
16:24:27.023 4 W - DropDefault(OccurTime)
16:24:27.023 4 W - AddDefault(OccurTime,)
16:24:27.023 4 W - 初始化NewLife.CommonEntity.Log数据
16:24:27.087 4 W - 更新实体缓存（第1次）：NewLife.YWS.Entities.MyRole 原因：第一次 Role<>.FindByID(Int32 id)<-
16:24:27.087 4 W - 初始化NewLife.YWS.Entities.MyRole数据
16:24:27.097 4 W - 检查实体NewLife.CommonEntity.RoleMenu的数据表架构，模式：CheckTableWhenFirstUse
16:24:27.097 4 W - 初始化NewLife.CommonEntity.RoleMenu数据
16:24:27.097 4 W - 如果某一个菜单对应的RoleMenu（角色菜单对应关系）为空或者只有一个，则授权第一个角色访问所有菜单！
16:24:27.107 4 W - 更新实体缓存（第1次）：NewLife.CommonEntity.Menu 原因：第一次 EntityTree<,>.FindAllByParent(EntityTree<,>.TKey parentKey)<-.FindChilds()
16:24:27.107 4 W - 检查实体NewLife.CommonEntity.Menu的数据表架构，模式：CheckTableWhenFirstUse
16:24:27.154 4 W - 初始化NewLife.CommonEntity.Menu数据
16:24:27.169 4 W - 完成更新缓存（第1次）：NewLife.CommonEntity.Menu
16:24:27.169 4 W - 更新实体缓存（第1次）：NewLife.CommonEntity.RoleMenu 原因：第一次 RoleMenu<>.CheckNonePerssion(Int32 menuID)<-Role<,,>.InitData()
16:24:27.185 4 W - 完成更新缓存（第1次）：NewLife.CommonEntity.RoleMenu
16:24:27.185 4 W - 完成更新缓存（第1次）：NewLife.YWS.Entities.MyRole
16:24:36.191 8 W - 初始化Bioinfo.Entites.News数据
16:24:36.222 8 W - 初始化Bioinfo.Entites.Category数据
16:24:36.222 8 W - 更新实体缓存（第1次）：Bioinfo.Entites.Category 原因：第一次 Category.FindById(Int32 id)<-News.get_Category()
16:24:36.222 8 W - 完成更新缓存（第1次）：Bioinfo.Entites.Category
16:27:41.068 2 N - 清空单对象缓存：NewLife.CommonEntity.Setting

#Software: .
#ProcessID: 2580
#AppDomain: c5a66244-1-129932081135324637
#BaseDirectory: C:\DevelopMent\Bioinfo\BioinfoWebSite\
#Date: 2012-09-27
#Fields: Time ThreadID IsPoolThread ThreadName Message
16:28:36.200 4 W - NewLife.Core v3.8.2012.0803 Build 2012-09-25 12:03:50
16:28:36.200 4 W - 为NewLife.CommonEntity.IManageProvider配置注册YWSManageProvider，标识Identity=，优先级Priority=5！
16:28:37.370 4 W - NewLife.XCode v8.8.2012.0828 Build 2012-09-25 12:01:34
16:28:37.370 4 W - 检查实体NewLife.CommonEntity.Setting的数据表架构，模式：CheckTableWhenFirstUse
16:28:37.494 4 W - 初始化NewLife.CommonEntity.Setting数据
16:28:37.510 4 W - 开始检查连接[Common/MySql]的数据库架构……
16:28:37.572 4 W - [Common]的所有实体类（22个）：Category,News,Messages,Setting,Sequence,GuidCategory,Administrator,Menu,Role,RoleMenu,Log,Area,User,Simple,SimpleTree,Setting,Statistics,UserProfile,Attachment,Category,MyRole,Admin
16:28:37.572 4 W - [Common]需要检查架构的实体类（6个）：Category,News,Messages,Setting,MyRole,Admin
16:28:37.572 4 W - Common待检查表架构的实体个数：6
16:28:37.666 9 Y - DropDefault(LastLogin)
16:28:37.806 4 W - DropDefault(LastLogin)
16:28:37.884 9 Y - 初始化NewLife.YWS.Entities.Admin数据
16:28:37.884 4 W - 检查连接[Common/MySql]的数据库架构耗时00:00:00.3725069
16:28:37.884 4 W - 一级缓存：关闭缓存
16:28:39.912 4 W - 更新实体缓存（第1次）：NewLife.YWS.Entities.Admin 原因：第一次 Administrator<>.FindByName(String name)<-.Login(String username,String password,Int32 hashTimes)
16:28:39.912 4 W - 完成更新缓存（第1次）：NewLife.YWS.Entities.Admin
16:28:39.954 4 W - 清空实体缓存：NewLife.YWS.Entities.Admin 原因：修改数据后提交事务
16:28:39.974 4 W - 检查实体NewLife.CommonEntity.Log的数据表架构，模式：CheckTableWhenFirstUse
16:28:39.974 4 W - DropDefault(OccurTime)
16:28:39.974 4 W - AddDefault(OccurTime,)
16:28:39.974 4 W - 初始化NewLife.CommonEntity.Log数据
16:28:40.034 9 W - 更新实体缓存（第1次）：NewLife.YWS.Entities.MyRole 原因：第一次 Role<>.FindByID(Int32 id)<-
16:28:40.034 9 W - 初始化NewLife.YWS.Entities.MyRole数据
16:28:40.054 9 W - 检查实体NewLife.CommonEntity.RoleMenu的数据表架构，模式：CheckTableWhenFirstUse
16:28:40.054 9 W - 初始化NewLife.CommonEntity.RoleMenu数据
16:28:40.054 9 W - 如果某一个菜单对应的RoleMenu（角色菜单对应关系）为空或者只有一个，则授权第一个角色访问所有菜单！
16:28:40.069 9 W - 更新实体缓存（第1次）：NewLife.CommonEntity.Menu 原因：第一次 EntityTree<,>.FindAllByParent(EntityTree<,>.TKey parentKey)<-.FindChilds()
16:28:40.069 9 W - 检查实体NewLife.CommonEntity.Menu的数据表架构，模式：CheckTableWhenFirstUse
16:28:40.116 9 W - 初始化NewLife.CommonEntity.Menu数据
16:28:40.116 9 W - 完成更新缓存（第1次）：NewLife.CommonEntity.Menu
16:28:40.132 9 W - 更新实体缓存（第1次）：NewLife.CommonEntity.RoleMenu 原因：第一次 RoleMenu<>.CheckNonePerssion(Int32 menuID)<-Role<,,>.InitData()
16:28:40.132 9 W - 完成更新缓存（第1次）：NewLife.CommonEntity.RoleMenu
16:28:40.147 9 W - 完成更新缓存（第1次）：NewLife.YWS.Entities.MyRole
16:28:45.049 11 W - 初始化Bioinfo.Entites.News数据
16:28:45.080 11 W - 初始化Bioinfo.Entites.Category数据
16:28:45.080 11 W - 更新实体缓存（第1次）：Bioinfo.Entites.Category 原因：第一次 Category.FindById(Int32 id)<-News.get_Category()
16:28:45.096 11 W - 完成更新缓存（第1次）：Bioinfo.Entites.Category
16:29:15.679 2 N - 清空单对象缓存：NewLife.CommonEntity.Setting
16:29:15.695 2 N - 错误的连接字符串：Server=192.168.1.47;Database=Bioinfodb2;Uid=root;Pwd=yrshabc123
16:29:15.695 2 N - XCode.Exceptions.XDbSessionException: Unable to connect to any of the specified MySQL hosts.[DB:Common/MySql] ---> MySql.Data.MySqlClient.MySqlException: Unable to connect to any of the specified MySQL hosts. ---> System.ApplicationException: 应用程序中的错误。
   在 System.Threading.ThreadPool.RegisterWaitForSingleObjectNative(WaitHandle waitHandle, Object state, UInt32 timeOutInterval, Boolean executeOnlyOnce, RegisteredWaitHandle registeredWaitHandle, StackCrawlMark& stackMark, Boolean compressStack)
   在 System.Threading.ThreadPool.RegisterWaitForSingleObject(WaitHandle waitObject, WaitOrTimerCallback callBack, Object state, UInt32 millisecondsTimeOutInterval, Boolean executeOnlyOnce, StackCrawlMark& stackMark, Boolean compressStack)
   在 System.Threading.ThreadPool.UnsafeRegisterWaitForSingleObject(WaitHandle waitObject, WaitOrTimerCallback callBack, Object state, Int32 millisecondsTimeOutInterval, Boolean executeOnlyOnce)
   在 System.Net.Sockets.Socket.SetAsyncEventSelect(AsyncEventBits blockEventBits)
   在 System.Net.Sockets.Socket.DoBeginConnect(EndPoint endPointSnapshot, SocketAddress socketAddress, LazyAsyncResult asyncResult)
   在 System.Net.Sockets.Socket.BeginConnect(EndPoint remoteEP, AsyncCallback callback, Object state)
   在 MySql.Data.Common.StreamCreator.CreateSocketStream(IPAddress ip, Boolean unix)
   在 MySql.Data.Common.StreamCreator.GetStream(UInt32 timeout)
   在 MySql.Data.MySqlClient.NativeDriver.Open()
   --- 内部异常堆栈跟踪的结尾 ---
   在 MySql.Data.MySqlClient.NativeDriver.Open()
   在 MySql.Data.MySqlClient.Driver.Open()
   在 MySql.Data.MySqlClient.Driver.Create(MySqlConnectionStringBuilder settings)
   在 MySql.Data.MySqlClient.MySqlPool.GetPooledConnection()
   在 MySql.Data.MySqlClient.MySqlPool.TryToGetDriver()
   在 MySql.Data.MySqlClient.MySqlPool.GetConnection()
   在 MySql.Data.MySqlClient.MySqlConnection.Open()
   在 XCode.DataAccessLayer.DbSession.Open()
   在 XCode.DataAccessLayer.DbSession.BeginTransaction()
   --- 内部异常堆栈跟踪的结尾 ---
   在 XCode.DataAccessLayer.DbSession.BeginTransaction()
   在 XCode.DataAccessLayer.DAL.BeginTransaction()
   在 XCode.Entity`1.Meta.BeginTrans()
   在 XCode.Entity`1.DoAction(Func`1 func, Nullable`1 isnew)
   在 XCode.Entity`1.Update()
   在 XCode.Cache.SingleEntityCache`2.<>c__DisplayClass1c.<Clear>b__1b()
   在 XCode.Cache.CacheBase`1.InvokeFill(Func callback)

#Software: .
#ProcessID: 4308
#AppDomain: c5a66244-1-129932084342982051
#BaseDirectory: C:\DevelopMent\Bioinfo\BioinfoWebSite\
#Date: 2012-09-27
#Fields: Time ThreadID IsPoolThread ThreadName Message
16:33:55.905 4 W - NewLife.Core v3.8.2012.0803 Build 2012-09-25 12:03:50
16:33:55.905 4 W - 为NewLife.CommonEntity.IManageProvider配置注册YWSManageProvider，标识Identity=，优先级Priority=5！
16:33:56.685 4 W - NewLife.XCode v8.8.2012.0828 Build 2012-09-25 12:01:34
16:33:56.685 4 W - 初始化Bioinfo.Entites.Setting数据
16:33:56.700 4 W - 一级缓存：关闭缓存
16:33:56.716 4 W - 更新实体缓存（第1次）：Bioinfo.Entites.Setting 原因：第一次 Setting.FindById(Int32 id)<-EntityHelper.GetName()
16:33:56.731 4 W - 开始检查连接[Common/MySql]的数据库架构……
16:33:56.809 4 W - [Common]的所有实体类（22个）：Sequence,GuidCategory,Administrator,Menu,Role,RoleMenu,Log,Area,User,Simple,SimpleTree,Setting,Statistics,UserProfile,Attachment,Category,Category,News,Messages,Setting,MyRole,Admin
16:33:56.809 4 W - [Common]需要检查架构的实体类（6个）：Category,News,Messages,Setting,MyRole,Admin
16:33:56.809 4 W - Common待检查表架构的实体个数：6
16:33:56.950 4 W - DropDefault(LastLogin)
16:33:56.997 4 W - 检查连接[Common/MySql]的数据库架构耗时00:00:00.2515204
16:33:57.012 4 W - 完成更新缓存（第1次）：Bioinfo.Entites.Setting
