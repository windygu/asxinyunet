#Software: .
#ProcessID: 3372
#AppDomain: c5a66244-1-129930917035511833
#BaseDirectory: C:\DevelopMent\Bioinfo\BioinfoWebSite\
#Date: 2012-09-26
#Fields: Time ThreadID IsPoolThread ThreadName Message
08:08:24.206 4 W - NewLife.Core v3.8.2012.0803 Build 2012-09-25 12:03:50
08:08:24.221 4 W - NewLife.XCode v8.8.2012.0828 Build 2012-09-25 12:01:34
08:08:24.221 4 W - 错误的连接字符串：Server=192.168.1.47;Database=Bioinfodb2;Uid=root;Pwd=yrshabc123
08:08:24.299 4 W - 错误的连接字符串：server=192.168.1.47;database=Bioinfodb2;uid=root;pwd=yrshabc123
08:08:24.315 4 W - 错误的连接字符串：server=192.168.1.47;database=Bioinfodb2;uid=root;pwd=yrshabc123

#Software: .
#ProcessID: 4616
#AppDomain: c5a66244-1-129930917150172035
#BaseDirectory: C:\DevelopMent\Bioinfo\BioinfoWebSite\
#Date: 2012-09-26
#Fields: Time ThreadID IsPoolThread ThreadName Message
08:08:35.656 4 W - NewLife.Core v3.8.2012.0803 Build 2012-09-25 12:03:50
08:08:35.672 4 W - NewLife.XCode v8.8.2012.0828 Build 2012-09-25 12:01:34
08:08:35.672 4 W - 错误的连接字符串：Server=192.168.1.47;Database=Bioinfodb2;Uid=root;Pwd=yrshabc123
08:08:35.750 4 W - 错误的连接字符串：server=192.168.1.47;database=Bioinfodb2;uid=root;pwd=yrshabc123
08:08:35.766 4 W - 错误的连接字符串：server=192.168.1.47;database=Bioinfodb2;uid=root;pwd=yrshabc123
08:09:07.205 4 W - 错误的连接字符串：server=192.168.1.47;database=Bioinfodb2;uid=root;pwd=yrshabc123

#Software: .
#ProcessID: 5328
#AppDomain: c5a66244-1-129930917669921542
#BaseDirectory: C:\DevelopMent\Bioinfo\BioinfoWebSite\
#Date: 2012-09-26
#Fields: Time ThreadID IsPoolThread ThreadName Message
08:09:27.631 4 W - NewLife.Core v3.8.2012.0803 Build 2012-09-25 12:03:50
08:09:27.631 4 W - NewLife.XCode v8.8.2012.0828 Build 2012-09-25 12:01:34
08:09:27.631 4 W - 错误的连接字符串：Server=192.168.1.47;Database=Bioinfodb2;Uid=root;Pwd=yrshabc123
08:09:27.725 4 W - 错误的连接字符串：server=192.168.1.47;database=Bioinfodb2;uid=root;pwd=yrshabc123
08:09:27.740 4 W - 错误的连接字符串：server=192.168.1.47;database=Bioinfodb2;uid=root;pwd=yrshabc123

#Software: .
#ProcessID: 5328
#AppDomain: c5a66244-2-129930918620631500
#BaseDirectory: C:\DevelopMent\Bioinfo\BioinfoWebSite\
#Date: 2012-09-26
#Fields: Time ThreadID IsPoolThread ThreadName Message
08:11:02.967 10 W - NewLife.Core v3.8.2012.0803 Build 2012-09-25 12:03:50
08:11:02.967 10 W - 未找到对象容器配置IManageProvider中的类型IManageProvider！
08:11:03.170 10 W - NewLife.XCode v8.8.2012.0828 Build 2012-09-25 12:01:34
08:11:03.170 10 W - 错误的连接字符串：Server=192.168.1.47;Database=Bioinfodb2;Uid=root;Pwd=yrshabc123
08:11:03.248 10 W - 错误的连接字符串：server=192.168.1.47;database=Bioinfodb2;uid=root;pwd=yrshabc123
08:11:03.248 10 W - 创建数据库：Common
08:11:08.287 10 W - 创建表：WebSetting(系统设置表)
08:11:08.693 10 W - 初始化Bioinfo.Entites.Setting数据
08:11:08.693 10 W - 一级缓存：关闭缓存
08:11:08.724 10 W - 更新实体缓存（第1次）：Bioinfo.Entites.Setting 原因：第一次 Setting.FindById(Int32 id)<-EntityHelper.GetName()
08:11:08.739 10 W - 开始检查连接[Common/MySql]的数据库架构……
08:11:08.755 10 W - [Common]的所有实体类（4个）：Category,News,Messages,Setting
08:11:08.755 10 W - [Common]需要检查架构的实体类（4个）：Category,News,Messages,Setting
08:11:08.755 10 W - Common待检查表架构的实体个数：4
08:11:08.755 10 W - 创建表：Category(类别信息)
08:11:09.129 10 W - 创建表：News(新闻信息表)
08:11:09.348 10 W - 创建表：Messages(消息)
08:11:09.582 10 W - 创建表：WebSetting(系统设置表)
08:11:09.629 10 W - 修改表CreateIndex失败！Duplicate key name 'IX_Setting_CategoryId'[SQL:Create Index IX_Setting_CategoryId On WebSetting (CategoryId)][DB:Common/MySql]
08:11:09.629 10 W - 修改表CreateIndex失败！Duplicate key name 'Name'[SQL:Create Index Name On WebSetting (Name, CodeType)][DB:Common/MySql]
08:11:09.629 10 W - 检查连接[Common/MySql]的数据库架构耗时00:00:00.8911234
08:11:09.644 10 W - 完成更新缓存（第1次）：Bioinfo.Entites.Setting

#Software: .
#ProcessID: 5268
#AppDomain: c5a66244-1-129930918862622714
#BaseDirectory: C:\DevelopMent\Bioinfo\BioinfoWebSite\
#Date: 2012-09-26
#Fields: Time ThreadID IsPoolThread ThreadName Message
08:11:28.087 4 W - NewLife.Core v3.8.2012.0803 Build 2012-09-25 12:03:50
08:11:28.103 4 W - 未找到对象容器配置IManageProvider中的类型IManageProvider！
08:11:28.196 4 W - NewLife.XCode v8.8.2012.0828 Build 2012-09-25 12:01:34
08:11:28.196 4 W - 开始检查连接[Common/MySql]的数据库架构……
08:11:28.227 4 W - [Common]的所有实体类（4个）：Category,News,Messages,Setting
08:11:28.227 4 W - [Common]需要检查架构的实体类（4个）：Category,News,Messages,Setting
08:11:28.227 4 W - Common待检查表架构的实体个数：4
08:11:28.493 4 W - 检查连接[Common/MySql]的数据库架构耗时00:00:00.2946720
08:11:28.539 4 W - 初始化Bioinfo.Entites.Setting数据
08:11:28.539 4 W - 一级缓存：关闭缓存
08:11:28.617 4 W - 更新实体缓存（第1次）：Bioinfo.Entites.Setting 原因：60秒过期 Setting.FindById(Int32 id)<-EntityHelper.GetName()
08:11:28.649 4 W - 完成更新缓存（第1次）：Bioinfo.Entites.Setting

#Software: .
#ProcessID: 2272
#AppDomain: c5a66244-1-129930939859635918
#BaseDirectory: C:\DevelopMent\Bioinfo\BioinfoWebSite\
#Date: 2012-09-26
#Fields: Time ThreadID IsPoolThread ThreadName Message
08:46:29.488 4 W - NewLife.Core v3.8.2012.0803 Build 2012-09-25 12:03:50
08:46:29.492 4 W - 为NewLife.CommonEntity.IManageProvider配置注册YWSManageProvider，标识Identity=，优先级Priority=5！
08:46:33.482 4 W - NewLife.XCode v8.8.2012.0828 Build 2012-09-25 12:01:34
08:46:33.482 4 W - 开始检查连接[Common/MySql]的数据库架构……
08:46:33.606 4 W - [Common]的所有实体类（22个）：Category,News,Messages,Setting,Sequence,GuidCategory,Administrator,Menu,Role,RoleMenu,Log,Area,User,Simple,SimpleTree,Setting,Statistics,UserProfile,Attachment,Category,MyRole,Admin
08:46:33.606 4 W - [Common]需要检查架构的实体类（6个）：Category,News,Messages,Setting,MyRole,Admin
08:46:33.606 4 W - Common待检查表架构的实体个数：6
08:46:33.991 4 W - 创建表：Role(角色)
08:46:34.228 4 W - 创建表：Admin(管理员)
08:46:34.574 4 W - 检查连接[Common/MySql]的数据库架构耗时00:00:01.0914497
08:46:34.604 4 W - 初始化Bioinfo.Entites.Setting数据
08:46:34.607 4 W - 一级缓存：关闭缓存
08:46:34.673 4 W - 更新实体缓存（第1次）：Bioinfo.Entites.Setting 原因：60秒过期 Setting.FindById(Int32 id)<-EntityHelper.GetName()
08:46:34.717 4 W - 完成更新缓存（第1次）：Bioinfo.Entites.Setting
08:47:15.447 9 Y - 初始化NewLife.YWS.Entities.Admin数据
08:47:15.450 9 Y - 开始初始化Admin管理员数据……
08:47:15.464 11 W - 检查实体NewLife.CommonEntity.Setting的数据表架构，模式：CheckTableWhenFirstUse
08:47:15.482 11 W - 创建表：Setting(设置)
08:47:15.503 9 Y - 完成初始化Admin管理员数据！
08:47:15.705 11 W - 初始化NewLife.CommonEntity.Setting数据
08:47:17.461 11 W - 更新实体缓存（第1次）：NewLife.YWS.Entities.Admin 原因：60秒过期 Administrator<>.FindByName(String name)<-.Login(String username,String password,Int32 hashTimes)
08:47:17.465 11 W - 完成更新缓存（第1次）：NewLife.YWS.Entities.Admin
08:47:17.501 11 W - 清空实体缓存：NewLife.YWS.Entities.Admin 原因：修改数据后提交事务
08:47:17.519 11 W - 检查实体NewLife.CommonEntity.Log的数据表架构，模式：CheckTableWhenFirstUse
08:47:17.519 11 W - 创建表：Log(日志)
08:47:17.751 11 W - 初始化NewLife.CommonEntity.Log数据
08:47:17.804 9 W - 更新实体缓存（第1次）：NewLife.YWS.Entities.MyRole 原因：第一次 Role<>.FindByID(Int32 id)<-
08:47:17.805 9 W - 初始化NewLife.YWS.Entities.MyRole数据
08:47:17.815 9 W - 开始初始化MyRole角色数据……
08:47:17.872 9 W - 完成初始化MyRole角色数据！
08:47:17.874 9 W - 检查实体NewLife.CommonEntity.RoleMenu的数据表架构，模式：CheckTableWhenFirstUse
08:47:17.880 9 W - 创建表：RoleMenu(角色和菜单)
08:47:18.359 9 W - 初始化NewLife.CommonEntity.RoleMenu数据
08:47:18.360 9 W - 检查实体NewLife.CommonEntity.Menu的数据表架构，模式：CheckTableWhenFirstUse
08:47:18.360 9 W - 创建表：Menu(菜单)
08:47:18.681 9 W - 初始化NewLife.CommonEntity.Menu数据
08:47:18.685 9 W - 开始初始化Menu菜单数据……
08:47:18.696 9 W - 更新实体缓存（第1次）：NewLife.CommonEntity.Menu 原因：第一次 Menu<>.FindByName(String name)<-.FindForName(String name)
08:47:18.698 9 W - 完成更新缓存（第1次）：NewLife.CommonEntity.Menu
08:47:18.815 9 W - 完成初始化Menu菜单数据！
08:47:18.816 9 W - 更新实体缓存（第2次）：NewLife.CommonEntity.Menu 原因：60秒过期 Role<,,>.InitData()<-Entity<>.Meta.WaitForInitData(Int32 millisecondsTimeout)
08:47:18.820 9 W - 完成更新缓存（第2次）：NewLife.CommonEntity.Menu
08:47:18.820 9 W - 开始初始化RoleMenu授权数据……
08:47:18.824 9 W - 更新实体缓存（第2次）：NewLife.YWS.Entities.MyRole 原因：60秒过期 Role<,,>.InitData()<-Entity<>.Meta.WaitForInitData(Int32 millisecondsTimeout)
08:47:18.827 9 W - 完成更新缓存（第2次）：NewLife.YWS.Entities.MyRole
08:47:18.834 9 W - 更新实体缓存（第1次）：NewLife.CommonEntity.RoleMenu 原因：第一次 RoleMenu<>.FindAllByRoleID(Int32 roleID)<-.GrantAll(Int32 roleID,List<Int32> menuIDs)
08:47:18.836 9 W - 完成更新缓存（第1次）：NewLife.CommonEntity.RoleMenu
08:47:18.922 9 W - 完成初始化RoleMenu授权数据！
08:47:18.925 9 W - 完成更新缓存（第2次）：NewLife.YWS.Entities.MyRole
08:47:18.997 9 W - 清空实体缓存：NewLife.CommonEntity.Menu 原因：修改数据后提交事务
08:47:18.999 9 W - 更新实体缓存（第3次）：NewLife.CommonEntity.Menu 原因：60秒过期 EntityTree<,>.FindParent()<-
08:47:19.003 9 W - 完成更新缓存（第3次）：NewLife.CommonEntity.Menu
08:47:19.056 9 W - 清空实体缓存：NewLife.CommonEntity.Menu 原因：修改数据后提交事务
08:47:19.085 9 W - 更新实体缓存（第4次）：NewLife.CommonEntity.Menu 原因：60秒过期 EntityTree<,>.Valid(Boolean isNew)<-Entity<>.DoAction(Func<Int32> func,Nullable<Boolean> isnew)
08:47:19.089 9 W - 完成更新缓存（第4次）：NewLife.CommonEntity.Menu
08:47:19.122 9 W - 清空实体缓存：NewLife.CommonEntity.Menu 原因：修改数据后提交事务
08:47:19.123 9 W - 更新实体缓存（第5次）：NewLife.CommonEntity.Menu 原因：60秒过期 EntityTree<,>.FindParent()<-
08:47:19.127 9 W - 完成更新缓存（第5次）：NewLife.CommonEntity.Menu
08:47:19.172 9 W - 清空实体缓存：NewLife.CommonEntity.Menu 原因：修改数据后提交事务
08:47:19.173 9 W - 更新实体缓存（第6次）：NewLife.CommonEntity.Menu 原因：60秒过期 EntityTree<,>.FindAllByParent(EntityTree<,>.TKey parentKey)<-.FindChilds()
08:47:19.177 9 W - 完成更新缓存（第6次）：NewLife.CommonEntity.Menu
08:47:19.222 9 W - 清空实体缓存：NewLife.CommonEntity.Menu 原因：修改数据后提交事务
08:47:19.817 9 W - 更新实体缓存（第7次）：NewLife.CommonEntity.Menu 原因：60秒过期 Entity<>.FindWithCache(String name,Object value)<-Entity<>.EntityOperate.FindWithCache(String name,Object value)
08:47:19.821 9 W - 完成更新缓存（第7次）：NewLife.CommonEntity.Menu
08:47:20.351 11 W - 清空实体缓存：NewLife.CommonEntity.Menu 原因：修改数据后提交事务
08:47:20.353 11 W - 更新实体缓存（第8次）：NewLife.CommonEntity.Menu 原因：60秒过期 EntityTree<,>.FindParent()<-
08:47:20.357 11 W - 完成更新缓存（第8次）：NewLife.CommonEntity.Menu
08:47:20.401 11 W - 清空实体缓存：NewLife.CommonEntity.Menu 原因：修改数据后提交事务
08:47:20.402 11 W - 更新实体缓存（第9次）：NewLife.CommonEntity.Menu 原因：60秒过期 EntityTree<,>.FindParent()<-
08:47:20.406 11 W - 完成更新缓存（第9次）：NewLife.CommonEntity.Menu
08:47:20.451 11 W - 清空实体缓存：NewLife.CommonEntity.Menu 原因：修改数据后提交事务
08:47:21.910 9 W - 更新实体缓存（第10次）：NewLife.CommonEntity.Menu 原因：60秒过期 Entity<>.FindWithCache(String name,Object value)<-Entity<>.EntityOperate.FindWithCache(String name,Object value)
08:47:21.914 9 W - 完成更新缓存（第10次）：NewLife.CommonEntity.Menu
08:48:23.462 12 W - 更新实体缓存（第11次）：NewLife.CommonEntity.Menu 原因：60秒过期 Menu<>.GetCurrentMenu()<-.get_Current()
08:48:23.478 12 W - 完成更新缓存（第11次）：NewLife.CommonEntity.Menu
08:48:25.996 12 W - 更新实体缓存（第3次）：NewLife.YWS.Entities.MyRole 原因：60秒过期 Role<>.FindByID(Int32 id)<-
08:48:25.996 12 W - 完成更新缓存（第3次）：NewLife.YWS.Entities.MyRole
08:48:27.834 13 W - 异步更新实体缓存（第1次）：NewLife.CommonEntity.Log 原因：600秒过期
08:48:27.850 15 Y - 完成更新缓存（第1次）：NewLife.CommonEntity.Log
08:49:54.057 2 N - 清空单对象缓存：NewLife.CommonEntity.Setting
08:49:54.057 2 N - 错误的连接字符串：Server=192.168.1.47;Database=Bioinfodb2;Uid=root;Pwd=yrshabc123
08:49:54.089 2 N - XCode.Exceptions.XDbSessionException: Unable to connect to any of the specified MySQL hosts.[DB:Common/MySql] ---> MySql.Data.MySqlClient.MySqlException: Unable to connect to any of the specified MySQL hosts. ---> System.ApplicationException: 应用程序中的错误。
   在 System.Threading.ThreadPool.RegisterWaitForSingleObjectNative(WaitHandle waitHandle, Object state, UInt32 timeOutInterval, Boolean executeOnlyOnce, RegisteredWaitHandle registeredWaitHandle, StackCrawlMark& stackMark, Boolean compressStack)
   在 System.Threading.ThreadPool.RegisterWaitForSingleObject(WaitHandle waitObject, WaitOrTimerCallback callBack, Object state, UInt32 millisecondsTimeOutInterval, Boolean executeOnlyOnce, StackCrawlMark& stackMark, Boolean compressStack)
   在 System.Threading.ThreadPool.UnsafeRegisterWaitForSingleObject(WaitHandle waitObject, WaitOrTimerCallback callBack, Object state, Int32 millisecondsTimeOutInterval, Boolean executeOnlyOnce)
   在 System.Net.Sockets.Socket.SetAsyncEventSelect(AsyncEventBits blockEventBits)
   在 System.Net.Sockets.Socket.DoBeginConnect(EndPoint endPointSnapshot, SocketAddress socketAddress, LazyAsyncResult asyncResult)
   在 System.Net.Sockets.Socket.BeginConnect(EndPoint remoteEP, AsyncCallback callback, Object state)
   在 MySql.Data.Common.StreamCreator.CreateSocketStream(IPAddress ip, Boolean unix)
   在 MySql.Data.Common.StreamCreator.GetStream(UInt32 timeout)
   在 MySql.Data.MySqlClient.NativeDriver.Open()
   --- 内部异常堆栈跟踪的结尾 ---
   在 MySql.Data.MySqlClient.NativeDriver.Open()
   在 MySql.Data.MySqlClient.Driver.Open()
   在 MySql.Data.MySqlClient.Driver.Create(MySqlConnectionStringBuilder settings)
   在 MySql.Data.MySqlClient.MySqlPool.CreateNewPooledConnection()
   在 MySql.Data.MySqlClient.MySqlPool.GetPooledConnection()
   在 MySql.Data.MySqlClient.MySqlPool.TryToGetDriver()
   在 MySql.Data.MySqlClient.MySqlPool.GetConnection()
   在 MySql.Data.MySqlClient.MySqlConnection.Open()
   在 XCode.DataAccessLayer.DbSession.Open()
   在 XCode.DataAccessLayer.DbSession.BeginTransaction()
   --- 内部异常堆栈跟踪的结尾 ---
   在 XCode.DataAccessLayer.DbSession.BeginTransaction()
   在 XCode.DataAccessLayer.DAL.BeginTransaction()
   在 XCode.Entity`1.Meta.BeginTrans()
   在 XCode.Entity`1.DoAction(Func`1 func, Nullable`1 isnew)
   在 XCode.Entity`1.Update()
   在 XCode.Cache.SingleEntityCache`2.<>c__DisplayClass1c.<Clear>b__1b()
   在 XCode.Cache.CacheBase`1.InvokeFill(Func callback)

#Software: .
#ProcessID: 5004
#AppDomain: c5a66244-1-129930983916094032
#BaseDirectory: C:\DevelopMent\Bioinfo\BioinfoWebSite\
#Date: 2012-09-26
#Fields: Time ThreadID IsPoolThread ThreadName Message
09:59:53.434 4 W - NewLife.Core v3.8.2012.0803 Build 2012-09-25 12:03:50
09:59:53.434 4 W - 为NewLife.CommonEntity.IManageProvider配置注册YWSManageProvider，标识Identity=，优先级Priority=5！
09:59:53.887 4 W - NewLife.XCode v8.8.2012.0828 Build 2012-09-25 12:01:34
09:59:53.887 4 W - 开始检查连接[Common/MySql]的数据库架构……
09:59:53.965 4 W - [Common]的所有实体类（22个）：Sequence,GuidCategory,Administrator,Menu,Role,RoleMenu,Log,Area,User,Simple,SimpleTree,Setting,Statistics,UserProfile,Attachment,Category,Category,News,Messages,Setting,MyRole,Admin
09:59:53.965 4 W - [Common]需要检查架构的实体类（6个）：Category,News,Messages,Setting,MyRole,Admin
09:59:53.965 4 W - Common待检查表架构的实体个数：6
09:59:54.464 4 W - DropDefault(LastLogin)
09:59:54.511 4 W - 检查连接[Common/MySql]的数据库架构耗时00:00:00.6100329
09:59:54.526 4 W - 初始化Bioinfo.Entites.Setting数据
09:59:54.526 4 W - 一级缓存：关闭缓存
09:59:54.635 4 W - 更新实体缓存（第1次）：Bioinfo.Entites.Setting 原因：60秒过期 Setting.FindById(Int32 id)<-EntityHelper.GetName()
09:59:54.667 4 W - 完成更新缓存（第1次）：Bioinfo.Entites.Setting
10:00:03.323 4 W - 清空实体缓存：Bioinfo.Entites.Setting 原因：修改数据后提交事务
10:01:40.814 9 W - 检查实体NewLife.CommonEntity.Setting的数据表架构，模式：CheckTableWhenFirstUse
10:01:40.876 9 W - 初始化NewLife.CommonEntity.Setting数据
10:01:41.391 11 Y - 初始化NewLife.YWS.Entities.Admin数据
10:01:42.779 11 W - 更新实体缓存（第1次）：NewLife.YWS.Entities.Admin 原因：第一次 Administrator<>.FindByName(String name)<-.Login(String username,String password,Int32 hashTimes)
10:01:42.779 11 W - 完成更新缓存（第1次）：NewLife.YWS.Entities.Admin
10:01:42.826 11 W - 清空实体缓存：NewLife.YWS.Entities.Admin 原因：修改数据后提交事务
10:01:42.846 11 W - 检查实体NewLife.CommonEntity.Log的数据表架构，模式：CheckTableWhenFirstUse
10:01:42.926 11 W - DropDefault(OccurTime)
10:01:42.926 11 W - AddDefault(OccurTime,)
10:01:42.926 11 W - 初始化NewLife.CommonEntity.Log数据
10:01:42.998 11 W - 更新实体缓存（第1次）：NewLife.YWS.Entities.MyRole 原因：第一次 Role<>.FindByID(Int32 id)<-
10:01:42.998 11 W - 初始化NewLife.YWS.Entities.MyRole数据
10:01:43.014 11 W - 检查实体NewLife.CommonEntity.RoleMenu的数据表架构，模式：CheckTableWhenFirstUse
10:01:43.030 11 W - 初始化NewLife.CommonEntity.RoleMenu数据
10:01:43.030 11 W - 如果某一个菜单对应的RoleMenu（角色菜单对应关系）为空或者只有一个，则授权第一个角色访问所有菜单！
10:01:43.045 11 W - 更新实体缓存（第1次）：NewLife.CommonEntity.Menu 原因：第一次 EntityTree<,>.FindAllByParent(EntityTree<,>.TKey parentKey)<-.FindChilds()
10:01:43.045 11 W - 检查实体NewLife.CommonEntity.Menu的数据表架构，模式：CheckTableWhenFirstUse
10:01:43.092 11 W - 初始化NewLife.CommonEntity.Menu数据
10:01:43.092 11 W - 完成更新缓存（第1次）：NewLife.CommonEntity.Menu
10:01:43.108 11 W - 更新实体缓存（第1次）：NewLife.CommonEntity.RoleMenu 原因：第一次 RoleMenu<>.CheckNonePerssion(Int32 menuID)<-Role<,,>.InitData()
10:01:43.108 11 W - 完成更新缓存（第1次）：NewLife.CommonEntity.RoleMenu
10:01:43.123 11 W - 完成更新缓存（第1次）：NewLife.YWS.Entities.MyRole
10:02:04.371 9 W - 清空实体缓存：NewLife.CommonEntity.Menu 原因：修改数据后提交事务
10:02:07.116 4 W - 更新实体缓存（第2次）：NewLife.CommonEntity.Menu 原因：60秒过期 Menu<>.GetCurrentMenu()<-.get_Current()
10:02:07.116 4 W - 完成更新缓存（第2次）：NewLife.CommonEntity.Menu
10:03:48.192 14 W - 更新实体缓存（第3次）：NewLife.CommonEntity.Menu 原因：60秒过期 Menu<>.GetCurrentMenu()<-.get_Current()
10:03:48.197 14 W - 完成更新缓存（第3次）：NewLife.CommonEntity.Menu
10:03:48.313 14 W - 清空实体缓存：NewLife.CommonEntity.Menu 原因：修改数据后提交事务
10:03:48.354 14 W - 更新实体缓存（第4次）：NewLife.CommonEntity.Menu 原因：60秒过期 EntityTree<,>.Valid(Boolean isNew)<-Entity<>.DoAction(Func<Int32> func,Nullable<Boolean> isnew)
10:03:48.362 14 W - 完成更新缓存（第4次）：NewLife.CommonEntity.Menu
10:03:48.396 14 W - 清空实体缓存：NewLife.CommonEntity.Menu 原因：修改数据后提交事务
10:03:48.434 14 W - 更新实体缓存（第5次）：NewLife.CommonEntity.Menu 原因：60秒过期 EntityTree<,>.Valid(Boolean isNew)<-Entity<>.DoAction(Func<Int32> func,Nullable<Boolean> isnew)
10:03:48.438 14 W - 完成更新缓存（第5次）：NewLife.CommonEntity.Menu
10:03:48.463 14 W - 清空实体缓存：NewLife.CommonEntity.Menu 原因：修改数据后提交事务
10:03:48.509 14 W - 更新实体缓存（第6次）：NewLife.CommonEntity.Menu 原因：60秒过期 EntityTree<,>.Valid(Boolean isNew)<-Entity<>.DoAction(Func<Int32> func,Nullable<Boolean> isnew)
10:03:48.512 14 W - 完成更新缓存（第6次）：NewLife.CommonEntity.Menu
10:03:48.538 14 W - 清空实体缓存：NewLife.CommonEntity.Menu 原因：修改数据后提交事务
10:03:48.561 14 W - 更新实体缓存（第7次）：NewLife.CommonEntity.Menu 原因：60秒过期 EntityTree<,>.Valid(Boolean isNew)<-Entity<>.DoAction(Func<Int32> func,Nullable<Boolean> isnew)
10:03:48.565 14 W - 完成更新缓存（第7次）：NewLife.CommonEntity.Menu
10:03:48.588 14 W - 清空实体缓存：NewLife.CommonEntity.Menu 原因：修改数据后提交事务
10:03:48.625 14 W - 更新实体缓存（第8次）：NewLife.CommonEntity.Menu 原因：60秒过期 EntityTree<,>.Valid(Boolean isNew)<-Entity<>.DoAction(Func<Int32> func,Nullable<Boolean> isnew)
10:03:48.629 14 W - 完成更新缓存（第8次）：NewLife.CommonEntity.Menu
10:03:48.654 14 W - 清空实体缓存：NewLife.CommonEntity.Menu 原因：修改数据后提交事务
10:03:48.655 14 W - 更新实体缓存（第9次）：NewLife.CommonEntity.Menu 原因：60秒过期 Menu<>.FindByName(String name)<-.FindForName(String name)
10:03:48.659 14 W - 完成更新缓存（第9次）：NewLife.CommonEntity.Menu
10:03:48.704 14 W - 清空实体缓存：NewLife.CommonEntity.Menu 原因：修改数据后提交事务
10:03:48.705 14 W - 更新实体缓存（第10次）：NewLife.CommonEntity.Menu 原因：60秒过期 Menu<>.FindByName(String name)<-.ScanAndAdd(String dir,Menu<>.TEntity top,ICollection<String> fileFilter,Boolean isFilterChildDir)
10:03:48.709 14 W - 完成更新缓存（第10次）：NewLife.CommonEntity.Menu
10:03:48.754 14 W - 清空实体缓存：NewLife.CommonEntity.Menu 原因：修改数据后提交事务
10:03:48.755 14 W - 更新实体缓存（第11次）：NewLife.CommonEntity.Menu 原因：60秒过期 Menu<>.FindByUrl(String url)<-.ScanAndAdd(String dir,Menu<>.TEntity top,ICollection<String> fileFilter,Boolean isFilterChildDir)
10:03:48.759 14 W - 完成更新缓存（第11次）：NewLife.CommonEntity.Menu
10:03:48.821 14 W - 清空实体缓存：NewLife.CommonEntity.Menu 原因：修改数据后提交事务
10:03:48.842 14 W - 更新实体缓存（第12次）：NewLife.CommonEntity.Menu 原因：60秒过期 EntityTree<,>.Valid(Boolean isNew)<-Entity<>.DoAction(Func<Int32> func,Nullable<Boolean> isnew)
10:03:48.846 14 W - 完成更新缓存（第12次）：NewLife.CommonEntity.Menu
10:03:48.871 14 W - 清空实体缓存：NewLife.CommonEntity.Menu 原因：修改数据后提交事务
10:03:48.892 14 W - 更新实体缓存（第13次）：NewLife.CommonEntity.Menu 原因：60秒过期 EntityTree<,>.Valid(Boolean isNew)<-Entity<>.DoAction(Func<Int32> func,Nullable<Boolean> isnew)
10:03:48.900 14 W - 完成更新缓存（第13次）：NewLife.CommonEntity.Menu
10:03:48.929 14 W - 清空实体缓存：NewLife.CommonEntity.Menu 原因：修改数据后提交事务
10:03:48.950 14 W - 更新实体缓存（第14次）：NewLife.CommonEntity.Menu 原因：60秒过期 EntityTree<,>.Valid(Boolean isNew)<-Entity<>.DoAction(Func<Int32> func,Nullable<Boolean> isnew)
10:03:48.954 14 W - 完成更新缓存（第14次）：NewLife.CommonEntity.Menu
10:03:48.979 14 W - 清空实体缓存：NewLife.CommonEntity.Menu 原因：修改数据后提交事务
10:03:48.980 14 W - 更新实体缓存（第15次）：NewLife.CommonEntity.Menu 原因：60秒过期 Menu<>.FindByName(String name)<-.ScanAndAdd(String dir,Menu<>.TEntity top,ICollection<String> fileFilter,Boolean isFilterChildDir)
10:03:48.984 14 W - 完成更新缓存（第15次）：NewLife.CommonEntity.Menu
10:03:49.029 14 W - 清空实体缓存：NewLife.CommonEntity.Menu 原因：修改数据后提交事务
10:03:49.058 14 W - 更新实体缓存（第16次）：NewLife.CommonEntity.Menu 原因：60秒过期 EntityTree<,>.Valid(Boolean isNew)<-Entity<>.DoAction(Func<Int32> func,Nullable<Boolean> isnew)
10:03:49.062 14 W - 完成更新缓存（第16次）：NewLife.CommonEntity.Menu
10:03:49.096 14 W - 清空实体缓存：NewLife.CommonEntity.Menu 原因：修改数据后提交事务
10:03:49.125 14 W - 更新实体缓存（第17次）：NewLife.CommonEntity.Menu 原因：60秒过期 EntityTree<,>.Valid(Boolean isNew)<-Entity<>.DoAction(Func<Int32> func,Nullable<Boolean> isnew)
10:03:49.130 14 W - 完成更新缓存（第17次）：NewLife.CommonEntity.Menu
10:03:49.155 14 W - 清空实体缓存：NewLife.CommonEntity.Menu 原因：修改数据后提交事务
10:03:49.185 14 W - 更新实体缓存（第18次）：NewLife.CommonEntity.Menu 原因：60秒过期 EntityTree<,>.Valid(Boolean isNew)<-Entity<>.DoAction(Func<Int32> func,Nullable<Boolean> isnew)
10:03:49.188 14 W - 完成更新缓存（第18次）：NewLife.CommonEntity.Menu
10:03:49.214 14 W - 清空实体缓存：NewLife.CommonEntity.Menu 原因：修改数据后提交事务
10:03:49.243 14 W - 更新实体缓存（第19次）：NewLife.CommonEntity.Menu 原因：60秒过期 EntityTree<,>.Valid(Boolean isNew)<-Entity<>.DoAction(Func<Int32> func,Nullable<Boolean> isnew)
10:03:49.247 14 W - 完成更新缓存（第19次）：NewLife.CommonEntity.Menu
10:03:49.280 14 W - 清空实体缓存：NewLife.CommonEntity.Menu 原因：修改数据后提交事务
10:03:49.310 14 W - 更新实体缓存（第20次）：NewLife.CommonEntity.Menu 原因：60秒过期 EntityTree<,>.Valid(Boolean isNew)<-Entity<>.DoAction(Func<Int32> func,Nullable<Boolean> isnew)
10:03:49.314 14 W - 完成更新缓存（第20次）：NewLife.CommonEntity.Menu
10:03:49.339 14 W - 清空实体缓存：NewLife.CommonEntity.Menu 原因：修改数据后提交事务
10:03:49.368 14 W - 更新实体缓存（第21次）：NewLife.CommonEntity.Menu 原因：60秒过期 EntityTree<,>.Valid(Boolean isNew)<-Entity<>.DoAction(Func<Int32> func,Nullable<Boolean> isnew)
10:03:49.372 14 W - 完成更新缓存（第21次）：NewLife.CommonEntity.Menu
10:03:49.397 14 W - 清空实体缓存：NewLife.CommonEntity.Menu 原因：修改数据后提交事务
10:03:49.406 14 W - 更新实体缓存（第22次）：NewLife.CommonEntity.Menu 原因：60秒过期 EntityTree<,>.FindByKeyWithCache(EntityTree<,>.TKey key)<-.FindAllChildsNoParent(EntityTree<,>.TKey parentKey)
10:03:49.410 14 W - 完成更新缓存（第22次）：NewLife.CommonEntity.Menu
10:04:24.657 16 W - 更新实体缓存（第2次）：NewLife.YWS.Entities.MyRole 原因：60秒过期 Role<>.FindByID(Int32 id)<-
10:04:24.660 16 W - 完成更新缓存（第2次）：NewLife.YWS.Entities.MyRole
10:04:27.804 13 W - 更新实体缓存（第2次）：NewLife.YWS.Entities.Admin 原因：60秒过期 Administrator<>.FindByName(String name)<-.Login(String username,String password,Int32 hashTimes)
10:04:27.807 13 W - 完成更新缓存（第2次）：NewLife.YWS.Entities.Admin
10:04:27.837 13 W - 清空实体缓存：NewLife.YWS.Entities.Admin 原因：修改数据后提交事务
10:04:27.883 17 W - 更新实体缓存（第2次）：NewLife.CommonEntity.RoleMenu 原因：60秒过期 RoleMenu<>.FindAllByRoleID(Int32 roleID)<-
10:04:27.888 17 W - 完成更新缓存（第2次）：NewLife.CommonEntity.RoleMenu
10:04:28.099 17 W - 清空实体缓存：NewLife.CommonEntity.Menu 原因：修改数据后提交事务
10:04:29.868 15 W - 更新实体缓存（第23次）：NewLife.CommonEntity.Menu 原因：60秒过期 Entity<>.FindWithCache(String name,Object value)<-Entity<>.EntityOperate.FindWithCache(String name,Object value)
10:04:29.872 15 W - 完成更新缓存（第23次）：NewLife.CommonEntity.Menu
10:07:58.286 2 N - 清空单对象缓存：NewLife.CommonEntity.Setting

#Software: .
#ProcessID: 5308
#AppDomain: c5a66244-1-129930988864867201
#BaseDirectory: C:\DevelopMent\Bioinfo\BioinfoWebSite\
#Date: 2012-09-26
#Fields: Time ThreadID IsPoolThread ThreadName Message
10:08:07.194 4 W - NewLife.Core v3.8.2012.0803 Build 2012-09-25 12:03:50
10:08:07.215 4 W - 为NewLife.CommonEntity.IManageProvider配置注册YWSManageProvider，标识Identity=，优先级Priority=5！
10:08:07.955 4 W - NewLife.XCode v8.8.2012.0828 Build 2012-09-25 12:01:34
10:08:07.956 4 W - 检查实体NewLife.CommonEntity.Setting的数据表架构，模式：CheckTableWhenFirstUse
10:08:08.684 4 W - 初始化NewLife.CommonEntity.Setting数据
10:08:08.694 4 W - 开始检查连接[Common/MySql]的数据库架构……
10:08:08.782 4 W - [Common]的所有实体类（18个）：Sequence,GuidCategory,Administrator,Menu,Role,RoleMenu,Log,Area,User,Simple,SimpleTree,Setting,Statistics,UserProfile,Attachment,Category,MyRole,Admin
10:08:08.782 4 W - [Common]需要检查架构的实体类（2个）：MyRole,Admin
10:08:08.783 4 W - Common待检查表架构的实体个数：2
10:08:08.947 8 Y - DropDefault(LastLogin)
10:08:09.096 4 W - DropDefault(LastLogin)
10:08:09.164 4 W - 检查连接[Common/MySql]的数据库架构耗时00:00:00.4697467
10:08:09.164 8 Y - 初始化NewLife.YWS.Entities.Admin数据
10:08:09.166 4 W - 一级缓存：关闭缓存
10:08:09.312 4 W - 更新实体缓存（第1次）：NewLife.YWS.Entities.Admin 原因：第一次 Administrator<>.FindByName(String name)<-.Login(String username,String password,Int32 hashTimes)
10:08:09.323 4 W - 完成更新缓存（第1次）：NewLife.YWS.Entities.Admin
10:08:09.349 4 W - 清空实体缓存：NewLife.YWS.Entities.Admin 原因：修改数据后提交事务
10:08:09.376 4 W - 检查实体NewLife.CommonEntity.Log的数据表架构，模式：CheckTableWhenFirstUse
10:08:09.377 4 W - DropDefault(OccurTime)
10:08:09.377 4 W - AddDefault(OccurTime,)
10:08:09.377 4 W - 初始化NewLife.CommonEntity.Log数据
10:08:09.453 8 W - 更新实体缓存（第1次）：NewLife.YWS.Entities.MyRole 原因：第一次 Role<>.FindByID(Int32 id)<-
10:08:09.453 8 W - 初始化NewLife.YWS.Entities.MyRole数据
10:08:09.473 8 W - 检查实体NewLife.CommonEntity.RoleMenu的数据表架构，模式：CheckTableWhenFirstUse
10:08:09.478 8 W - 初始化NewLife.CommonEntity.RoleMenu数据
10:08:09.479 8 W - 如果某一个菜单对应的RoleMenu（角色菜单对应关系）为空或者只有一个，则授权第一个角色访问所有菜单！
10:08:09.499 8 W - 更新实体缓存（第1次）：NewLife.CommonEntity.Menu 原因：第一次 EntityTree<,>.FindAllByParent(EntityTree<,>.TKey parentKey)<-.FindChilds()
10:08:09.500 8 W - 检查实体NewLife.CommonEntity.Menu的数据表架构，模式：CheckTableWhenFirstUse
10:08:09.541 8 W - 初始化NewLife.CommonEntity.Menu数据
10:08:09.551 8 W - 完成更新缓存（第1次）：NewLife.CommonEntity.Menu
10:08:09.566 8 W - 更新实体缓存（第1次）：NewLife.CommonEntity.RoleMenu 原因：第一次 RoleMenu<>.CheckNonePerssion(Int32 menuID)<-Role<,,>.InitData()
10:08:09.571 8 W - 完成更新缓存（第1次）：NewLife.CommonEntity.RoleMenu
10:08:09.581 8 W - 删除RoleMenu中无效的RoleID和无效的MenuID！
10:08:09.616 8 W - 清空实体缓存：NewLife.CommonEntity.RoleMenu 原因：修改数据后提交事务
10:08:09.621 8 W - 完成更新缓存（第1次）：NewLife.YWS.Entities.MyRole
10:08:09.628 8 W - 更新实体缓存（第2次）：NewLife.CommonEntity.RoleMenu 原因：60秒过期 RoleMenu<>.FindAllByRoleID(Int32 roleID)<-
10:08:09.631 8 W - 完成更新缓存（第2次）：NewLife.CommonEntity.RoleMenu
10:08:56.736 2 N - 清空单对象缓存：NewLife.CommonEntity.Setting
10:08:56.736 2 N - 错误的连接字符串：Server=192.168.1.47;Database=Bioinfodb2;Uid=root;Pwd=yrshabc123
10:08:56.752 2 N - XCode.Exceptions.XDbSessionException: Unable to connect to any of the specified MySQL hosts.[DB:Common/MySql] ---> MySql.Data.MySqlClient.MySqlException: Unable to connect to any of the specified MySQL hosts. ---> System.ApplicationException: 应用程序中的错误。
   在 System.Threading.ThreadPool.RegisterWaitForSingleObjectNative(WaitHandle waitHandle, Object state, UInt32 timeOutInterval, Boolean executeOnlyOnce, RegisteredWaitHandle registeredWaitHandle, StackCrawlMark& stackMark, Boolean compressStack)
   在 System.Threading.ThreadPool.RegisterWaitForSingleObject(WaitHandle waitObject, WaitOrTimerCallback callBack, Object state, UInt32 millisecondsTimeOutInterval, Boolean executeOnlyOnce, StackCrawlMark& stackMark, Boolean compressStack)
   在 System.Threading.ThreadPool.UnsafeRegisterWaitForSingleObject(WaitHandle waitObject, WaitOrTimerCallback callBack, Object state, Int32 millisecondsTimeOutInterval, Boolean executeOnlyOnce)
   在 System.Net.Sockets.Socket.SetAsyncEventSelect(AsyncEventBits blockEventBits)
   在 System.Net.Sockets.Socket.DoBeginConnect(EndPoint endPointSnapshot, SocketAddress socketAddress, LazyAsyncResult asyncResult)
   在 System.Net.Sockets.Socket.BeginConnect(EndPoint remoteEP, AsyncCallback callback, Object state)
   在 MySql.Data.Common.StreamCreator.CreateSocketStream(IPAddress ip, Boolean unix)
   在 MySql.Data.Common.StreamCreator.GetStream(UInt32 timeout)
   在 MySql.Data.MySqlClient.NativeDriver.Open()
   --- 内部异常堆栈跟踪的结尾 ---
   在 MySql.Data.MySqlClient.NativeDriver.Open()
   在 MySql.Data.MySqlClient.Driver.Open()
   在 MySql.Data.MySqlClient.Driver.Create(MySqlConnectionStringBuilder settings)
   在 MySql.Data.MySqlClient.MySqlPool.GetPooledConnection()
   在 MySql.Data.MySqlClient.MySqlPool.TryToGetDriver()
   在 MySql.Data.MySqlClient.MySqlPool.GetConnection()
   在 MySql.Data.MySqlClient.MySqlConnection.Open()
   在 XCode.DataAccessLayer.DbSession.Open()
   在 XCode.DataAccessLayer.DbSession.BeginTransaction()
   --- 内部异常堆栈跟踪的结尾 ---
   在 XCode.DataAccessLayer.DbSession.BeginTransaction()
   在 XCode.DataAccessLayer.DAL.BeginTransaction()
   在 XCode.Entity`1.Meta.BeginTrans()
   在 XCode.Entity`1.DoAction(Func`1 func, Nullable`1 isnew)
   在 XCode.Entity`1.Update()
   在 XCode.Cache.SingleEntityCache`2.<>c__DisplayClass1c.<Clear>b__1b()
   在 XCode.Cache.CacheBase`1.InvokeFill(Func callback)

#Software: .
#ProcessID: 2284
#AppDomain: c5a66244-1-129930989475859903
#BaseDirectory: C:\DevelopMent\Bioinfo\BioinfoWebSite\
#Date: 2012-09-26
#Fields: Time ThreadID IsPoolThread ThreadName Message
10:09:08.272 4 W - NewLife.Core v3.8.2012.0803 Build 2012-09-25 12:03:50
10:09:08.272 4 W - 为NewLife.CommonEntity.IManageProvider配置注册YWSManageProvider，标识Identity=，优先级Priority=5！
10:09:10.035 9 W - NewLife.XCode v8.8.2012.0828 Build 2012-09-25 12:01:34
10:09:10.035 9 W - 检查实体NewLife.CommonEntity.Setting的数据表架构，模式：CheckTableWhenFirstUse
10:09:10.191 9 W - 初始化NewLife.CommonEntity.Setting数据
10:09:10.191 9 W - 开始检查连接[Common/MySql]的数据库架构……
10:09:10.269 9 W - [Common]的所有实体类（18个）：Sequence,GuidCategory,Administrator,Menu,Role,RoleMenu,Log,Area,User,Simple,SimpleTree,Setting,Statistics,UserProfile,Attachment,Category,MyRole,Admin
10:09:10.269 9 W - [Common]需要检查架构的实体类（2个）：MyRole,Admin
10:09:10.284 9 W - Common待检查表架构的实体个数：2
10:09:10.331 4 Y - DropDefault(LastLogin)
10:09:10.471 9 W - DropDefault(LastLogin)
10:09:10.534 9 W - 检查连接[Common/MySql]的数据库架构耗时00:00:00.3385159
10:09:10.534 4 Y - 初始化NewLife.YWS.Entities.Admin数据
10:09:10.534 9 W - 一级缓存：关闭缓存
10:09:12.250 9 W - 更新实体缓存（第1次）：NewLife.YWS.Entities.Admin 原因：第一次 Administrator<>.FindByName(String name)<-.Login(String username,String password,Int32 hashTimes)
10:09:12.250 9 W - 完成更新缓存（第1次）：NewLife.YWS.Entities.Admin
10:09:12.281 9 W - 清空实体缓存：NewLife.YWS.Entities.Admin 原因：修改数据后提交事务
10:09:12.316 9 W - 检查实体NewLife.CommonEntity.Log的数据表架构，模式：CheckTableWhenFirstUse
10:09:12.317 9 W - DropDefault(OccurTime)
10:09:12.317 9 W - AddDefault(OccurTime,)
10:09:12.317 9 W - 初始化NewLife.CommonEntity.Log数据
10:09:12.372 9 W - 更新实体缓存（第1次）：NewLife.YWS.Entities.MyRole 原因：第一次 Role<>.FindByID(Int32 id)<-
10:09:12.372 9 W - 初始化NewLife.YWS.Entities.MyRole数据
10:09:12.392 9 W - 检查实体NewLife.CommonEntity.RoleMenu的数据表架构，模式：CheckTableWhenFirstUse
10:09:12.392 9 W - 初始化NewLife.CommonEntity.RoleMenu数据
10:09:12.392 9 W - 如果某一个菜单对应的RoleMenu（角色菜单对应关系）为空或者只有一个，则授权第一个角色访问所有菜单！
10:09:12.402 9 W - 更新实体缓存（第1次）：NewLife.CommonEntity.Menu 原因：第一次 EntityTree<,>.FindAllByParent(EntityTree<,>.TKey parentKey)<-.FindChilds()
10:09:12.402 9 W - 检查实体NewLife.CommonEntity.Menu的数据表架构，模式：CheckTableWhenFirstUse
10:09:12.459 9 W - 初始化NewLife.CommonEntity.Menu数据
10:09:12.475 9 W - 完成更新缓存（第1次）：NewLife.CommonEntity.Menu
10:09:12.475 9 W - 更新实体缓存（第1次）：NewLife.CommonEntity.RoleMenu 原因：第一次 RoleMenu<>.CheckNonePerssion(Int32 menuID)<-Role<,,>.InitData()
10:09:12.490 9 W - 完成更新缓存（第1次）：NewLife.CommonEntity.RoleMenu
10:09:12.506 9 W - 完成更新缓存（第1次）：NewLife.YWS.Entities.MyRole
10:10:30.736 2 N - 清空单对象缓存：NewLife.CommonEntity.Setting

#Software: .
#ProcessID: 1552
#AppDomain: c5a66244-1-129930990385548840
#BaseDirectory: C:\DevelopMent\Bioinfo\BioinfoWebSite\
#Date: 2012-09-26
#Fields: Time ThreadID IsPoolThread ThreadName Message
10:10:39.205 4 W - NewLife.Core v3.8.2012.0803 Build 2012-09-25 12:03:50
10:10:39.209 4 W - 为NewLife.CommonEntity.IManageProvider配置注册YWSManageProvider，标识Identity=，优先级Priority=5！
10:10:40.723 4 W - NewLife.XCode v8.8.2012.0828 Build 2012-09-25 12:01:34
10:10:40.725 4 W - 一级缓存：关闭缓存
10:10:40.744 4 W - 更新实体缓存（第1次）：NewLife.YWS.Entities.Admin 原因：第一次 Administrator<>.FindByName(String name)<-.Login(String username,String password,Int32 hashTimes)
10:10:40.856 4 W - 错误的连接字符串：Server=192.168.1.47;Database=Bioinfodb2;Uid=root;Pwd=yrshabc123
10:10:40.940 4 W - 错误的连接字符串：server=192.168.1.47;database=Bioinfodb2;uid=root;pwd=yrshabc123
10:10:40.958 4 W - 错误的连接字符串：server=192.168.1.47;database=Bioinfodb2;uid=root;pwd=yrshabc123
10:10:40.966 4 W - 创建数据库：Common
10:10:45.993 4 W - 创建表：Admin(管理员)
10:10:46.428 4 W - 初始化NewLife.YWS.Entities.Admin数据
10:10:46.436 4 W - 开始初始化Admin管理员数据……
10:10:46.455 4 W - 开始检查连接[Common/MySql]的数据库架构……
10:10:46.522 4 W - [Common]的所有实体类（18个）：Sequence,GuidCategory,Administrator,Menu,Role,RoleMenu,Log,Area,User,Simple,SimpleTree,Setting,Statistics,UserProfile,Attachment,Category,MyRole,Admin
10:10:46.522 4 W - [Common]需要检查架构的实体类（2个）：MyRole,Admin
10:10:46.523 4 W - Common待检查表架构的实体个数：2
10:10:46.523 4 W - 创建表：Role(角色)
10:10:46.769 4 W - 创建表：Admin(管理员)
10:10:46.839 4 W - 修改表CreateIndex失败！Duplicate key name 'IX_Administrator_Name'[SQL:Create Unique Index IX_Administrator_Name On Admin (Name)][DB:Common/MySql]
10:10:46.842 4 W - 修改表CreateIndex失败！Duplicate key name 'IX_Administrator_RoleID'[SQL:Create Index IX_Administrator_RoleID On Admin (RoleID)][DB:Common/MySql]
10:10:46.842 4 W - 检查连接[Common/MySql]的数据库架构耗时00:00:00.3867790
10:10:46.904 4 W - 完成初始化Admin管理员数据！
10:10:46.928 4 W - 完成更新缓存（第1次）：NewLife.YWS.Entities.Admin
10:10:46.958 4 W - 清空实体缓存：NewLife.YWS.Entities.Admin 原因：修改数据后提交事务
10:10:46.981 4 W - 检查实体NewLife.CommonEntity.Log的数据表架构，模式：CheckTableWhenFirstUse
10:10:46.981 4 W - 创建表：Log(日志)
10:10:47.216 4 W - 初始化NewLife.CommonEntity.Log数据
10:10:47.270 4 W - 更新实体缓存（第1次）：NewLife.YWS.Entities.MyRole 原因：第一次 Role<>.FindByID(Int32 id)<-
10:10:47.271 4 W - 初始化NewLife.YWS.Entities.MyRole数据
10:10:47.282 4 W - 开始初始化MyRole角色数据……
10:10:47.336 4 W - 完成初始化MyRole角色数据！
10:10:47.338 4 W - 检查实体NewLife.CommonEntity.RoleMenu的数据表架构，模式：CheckTableWhenFirstUse
10:10:47.338 4 W - 创建表：RoleMenu(角色和菜单)
10:10:47.906 4 W - 初始化NewLife.CommonEntity.RoleMenu数据
10:10:47.907 4 W - 检查实体NewLife.CommonEntity.Menu的数据表架构，模式：CheckTableWhenFirstUse
10:10:47.907 4 W - 创建表：Menu(菜单)
10:10:48.308 4 W - 初始化NewLife.CommonEntity.Menu数据
10:10:48.313 4 W - 开始初始化Menu菜单数据……
10:10:48.326 4 W - 更新实体缓存（第1次）：NewLife.CommonEntity.Menu 原因：第一次 Menu<>.FindByName(String name)<-.FindForName(String name)
10:10:48.328 4 W - 完成更新缓存（第1次）：NewLife.CommonEntity.Menu
10:10:48.465 4 W - 完成初始化Menu菜单数据！
10:10:48.466 4 W - 更新实体缓存（第2次）：NewLife.CommonEntity.Menu 原因：60秒过期 Role<,,>.InitData()<-Entity<>.Meta.WaitForInitData(Int32 millisecondsTimeout)
10:10:48.470 4 W - 完成更新缓存（第2次）：NewLife.CommonEntity.Menu
10:10:48.470 4 W - 开始初始化RoleMenu授权数据……
10:10:48.474 4 W - 更新实体缓存（第2次）：NewLife.YWS.Entities.MyRole 原因：60秒过期 Role<,,>.InitData()<-Entity<>.Meta.WaitForInitData(Int32 millisecondsTimeout)
10:10:48.477 4 W - 完成更新缓存（第2次）：NewLife.YWS.Entities.MyRole
10:10:48.484 4 W - 更新实体缓存（第1次）：NewLife.CommonEntity.RoleMenu 原因：第一次 RoleMenu<>.FindAllByRoleID(Int32 roleID)<-.GrantAll(Int32 roleID,List<Int32> menuIDs)
10:10:48.486 4 W - 完成更新缓存（第1次）：NewLife.CommonEntity.RoleMenu
10:10:48.583 4 W - 完成初始化RoleMenu授权数据！
10:10:48.586 4 W - 完成更新缓存（第2次）：NewLife.YWS.Entities.MyRole
10:10:48.658 4 W - 清空实体缓存：NewLife.CommonEntity.Menu 原因：修改数据后提交事务
10:10:48.660 4 W - 更新实体缓存（第3次）：NewLife.CommonEntity.Menu 原因：60秒过期 EntityTree<,>.FindParent()<-
10:10:48.664 4 W - 完成更新缓存（第3次）：NewLife.CommonEntity.Menu
10:10:48.716 4 W - 清空实体缓存：NewLife.CommonEntity.Menu 原因：修改数据后提交事务
10:10:48.745 4 W - 更新实体缓存（第4次）：NewLife.CommonEntity.Menu 原因：60秒过期 EntityTree<,>.Valid(Boolean isNew)<-Entity<>.DoAction(Func<Int32> func,Nullable<Boolean> isnew)
10:10:48.749 4 W - 完成更新缓存（第4次）：NewLife.CommonEntity.Menu
10:10:48.800 4 W - 清空实体缓存：NewLife.CommonEntity.Menu 原因：修改数据后提交事务
10:10:48.801 4 W - 更新实体缓存（第5次）：NewLife.CommonEntity.Menu 原因：60秒过期 EntityTree<,>.FindParent()<-
10:10:48.805 4 W - 完成更新缓存（第5次）：NewLife.CommonEntity.Menu
10:10:48.850 4 W - 清空实体缓存：NewLife.CommonEntity.Menu 原因：修改数据后提交事务
10:10:48.851 4 W - 更新实体缓存（第6次）：NewLife.CommonEntity.Menu 原因：60秒过期 EntityTree<,>.FindParent()<-
10:10:48.855 4 W - 完成更新缓存（第6次）：NewLife.CommonEntity.Menu
10:10:48.900 4 W - 清空实体缓存：NewLife.CommonEntity.Menu 原因：修改数据后提交事务
10:10:48.911 4 W - 检查实体NewLife.CommonEntity.Setting的数据表架构，模式：CheckTableWhenFirstUse
10:10:48.911 4 W - 创建表：Setting(设置)
10:10:49.150 4 W - 初始化NewLife.CommonEntity.Setting数据
10:10:49.421 4 W - 更新实体缓存（第7次）：NewLife.CommonEntity.Menu 原因：60秒过期 Entity<>.FindWithCache(String name,Object value)<-Entity<>.EntityOperate.FindWithCache(String name,Object value)
10:10:49.432 4 W - 完成更新缓存（第7次）：NewLife.CommonEntity.Menu
10:10:50.019 11 W - 清空实体缓存：NewLife.CommonEntity.Menu 原因：修改数据后提交事务
10:10:50.026 11 W - 更新实体缓存（第8次）：NewLife.CommonEntity.Menu 原因：60秒过期 EntityTree<,>.FindParent()<-
10:10:50.030 11 W - 完成更新缓存（第8次）：NewLife.CommonEntity.Menu
10:10:50.086 11 W - 清空实体缓存：NewLife.CommonEntity.Menu 原因：修改数据后提交事务
10:10:50.087 11 W - 更新实体缓存（第9次）：NewLife.CommonEntity.Menu 原因：60秒过期 EntityTree<,>.FindParent()<-
10:10:50.091 11 W - 完成更新缓存（第9次）：NewLife.CommonEntity.Menu
10:10:50.136 11 W - 清空实体缓存：NewLife.CommonEntity.Menu 原因：修改数据后提交事务
10:10:51.601 8 W - 更新实体缓存（第10次）：NewLife.CommonEntity.Menu 原因：60秒过期 Entity<>.FindWithCache(String name,Object value)<-Entity<>.EntityOperate.FindWithCache(String name,Object value)
10:10:51.608 8 W - 完成更新缓存（第10次）：NewLife.CommonEntity.Menu
10:10:54.071 4 W - 异步更新实体缓存（第1次）：NewLife.CommonEntity.Log 原因：600秒过期
10:10:54.114 11 Y - 完成更新缓存（第1次）：NewLife.CommonEntity.Log
10:11:26.578 8 W - 创建表：Category(类别信息)
10:11:26.974 8 W - 初始化Bioinfo.Entites.Category数据
10:11:33.926 13 W - 创建表：Messages(消息)
10:11:34.169 13 W - 初始化Bioinfo.Entites.Messages数据
10:11:39.569 12 W - 创建表：News(新闻信息表)
10:11:39.827 12 W - 初始化Bioinfo.Entites.News数据
10:11:46.508 8 W - 创建表：WebSetting(系统设置表)
10:11:46.898 8 W - 初始化Bioinfo.Entites.Setting数据
10:12:08.229 10 W - 更新实体缓存（第11次）：NewLife.CommonEntity.Menu 原因：60秒过期 Menu<>.GetCurrentMenu()<-.get_Current()
10:12:08.234 10 W - 完成更新缓存（第11次）：NewLife.CommonEntity.Menu
10:13:33.851 13 W - 更新实体缓存（第12次）：NewLife.CommonEntity.Menu 原因：60秒过期 Menu<>.GetCurrentMenu()<-.get_Current()
10:13:33.855 13 W - 完成更新缓存（第12次）：NewLife.CommonEntity.Menu
10:14:14.105 13 W - 更新实体缓存（第3次）：NewLife.YWS.Entities.MyRole 原因：60秒过期 Role<>.FindByID(Int32 id)<-
10:14:14.109 13 W - 完成更新缓存（第3次）：NewLife.YWS.Entities.MyRole
10:15:13.068 12 W - 更新实体缓存（第13次）：NewLife.CommonEntity.Menu 原因：60秒过期 Entity<>.FindWithCache(String name,Object value)<-Entity<>.EntityOperate.FindWithCache(String name,Object value)
10:15:13.073 12 W - 完成更新缓存（第13次）：NewLife.CommonEntity.Menu
10:15:14.471 13 W - 更新实体缓存（第4次）：NewLife.YWS.Entities.MyRole 原因：60秒过期 Role<>.FindByID(Int32 id)<-
10:15:14.475 13 W - 完成更新缓存（第4次）：NewLife.YWS.Entities.MyRole
10:16:13.782 13 W - 更新实体缓存（第14次）：NewLife.CommonEntity.Menu 原因：60秒过期 Menu<>.GetCurrentMenu()<-.get_Current()
10:16:13.786 13 W - 完成更新缓存（第14次）：NewLife.CommonEntity.Menu
10:16:16.008 12 W - 清空实体缓存：NewLife.CommonEntity.Menu 原因：修改数据后提交事务
10:16:17.174 8 W - 更新实体缓存（第15次）：NewLife.CommonEntity.Menu 原因：60秒过期 Menu<>.GetCurrentMenu()<-.get_Current()
10:16:17.179 8 W - 完成更新缓存（第15次）：NewLife.CommonEntity.Menu
10:16:41.263 8 W - 清空实体缓存：NewLife.CommonEntity.Menu 原因：修改数据后提交事务
10:16:42.374 11 W - 更新实体缓存（第16次）：NewLife.CommonEntity.Menu 原因：60秒过期 Menu<>.GetCurrentMenu()<-.get_Current()
10:16:42.381 11 W - 完成更新缓存（第16次）：NewLife.CommonEntity.Menu
10:16:49.778 11 W - 更新实体缓存（第2次）：NewLife.YWS.Entities.Admin 原因：60秒过期 Administrator<>.FindByName(String name)<-.Login(String username,String password,Int32 hashTimes)
10:16:49.782 11 W - 完成更新缓存（第2次）：NewLife.YWS.Entities.Admin
10:16:49.813 11 W - 清空实体缓存：NewLife.YWS.Entities.Admin 原因：修改数据后提交事务
10:16:49.878 13 W - 更新实体缓存（第5次）：NewLife.YWS.Entities.MyRole 原因：60秒过期 Role<>.FindByID(Int32 id)<-
10:16:49.882 13 W - 完成更新缓存（第5次）：NewLife.YWS.Entities.MyRole
10:16:49.883 13 W - 更新实体缓存（第2次）：NewLife.CommonEntity.RoleMenu 原因：60秒过期 RoleMenu<>.FindAllByRoleID(Int32 roleID)<-
10:16:49.887 13 W - 完成更新缓存（第2次）：NewLife.CommonEntity.RoleMenu
10:23:20.159 2 N - 清空单对象缓存：NewLife.CommonEntity.Setting
10:23:20.159 2 N - 错误的连接字符串：Server=192.168.1.47;Database=Bioinfodb2;Uid=root;Pwd=yrshabc123
10:23:20.159 2 N - XCode.Exceptions.XDbSessionException: Unable to connect to any of the specified MySQL hosts.[DB:Common/MySql] ---> MySql.Data.MySqlClient.MySqlException: Unable to connect to any of the specified MySQL hosts. ---> System.ApplicationException: 应用程序中的错误。
   在 System.Threading.ThreadPool.RegisterWaitForSingleObjectNative(WaitHandle waitHandle, Object state, UInt32 timeOutInterval, Boolean executeOnlyOnce, RegisteredWaitHandle registeredWaitHandle, StackCrawlMark& stackMark, Boolean compressStack)
   在 System.Threading.ThreadPool.RegisterWaitForSingleObject(WaitHandle waitObject, WaitOrTimerCallback callBack, Object state, UInt32 millisecondsTimeOutInterval, Boolean executeOnlyOnce, StackCrawlMark& stackMark, Boolean compressStack)
   在 System.Threading.ThreadPool.UnsafeRegisterWaitForSingleObject(WaitHandle waitObject, WaitOrTimerCallback callBack, Object state, Int32 millisecondsTimeOutInterval, Boolean executeOnlyOnce)
   在 System.Net.Sockets.Socket.SetAsyncEventSelect(AsyncEventBits blockEventBits)
   在 System.Net.Sockets.Socket.DoBeginConnect(EndPoint endPointSnapshot, SocketAddress socketAddress, LazyAsyncResult asyncResult)
   在 System.Net.Sockets.Socket.BeginConnect(EndPoint remoteEP, AsyncCallback callback, Object state)
   在 MySql.Data.Common.StreamCreator.CreateSocketStream(IPAddress ip, Boolean unix)
   在 MySql.Data.Common.StreamCreator.GetStream(UInt32 timeout)
   在 MySql.Data.MySqlClient.NativeDriver.Open()
   --- 内部异常堆栈跟踪的结尾 ---
   在 MySql.Data.MySqlClient.NativeDriver.Open()
   在 MySql.Data.MySqlClient.Driver.Open()
   在 MySql.Data.MySqlClient.Driver.Create(MySqlConnectionStringBuilder settings)
   在 MySql.Data.MySqlClient.MySqlPool.GetPooledConnection()
   在 MySql.Data.MySqlClient.MySqlPool.TryToGetDriver()
   在 MySql.Data.MySqlClient.MySqlPool.GetConnection()
   在 MySql.Data.MySqlClient.MySqlConnection.Open()
   在 XCode.DataAccessLayer.DbSession.Open()
   在 XCode.DataAccessLayer.DbSession.BeginTransaction()
   --- 内部异常堆栈跟踪的结尾 ---
   在 XCode.DataAccessLayer.DbSession.BeginTransaction()
   在 XCode.DataAccessLayer.DAL.BeginTransaction()
   在 XCode.Entity`1.Meta.BeginTrans()
   在 XCode.Entity`1.DoAction(Func`1 func, Nullable`1 isnew)
   在 XCode.Entity`1.Update()
   在 XCode.Cache.SingleEntityCache`2.<>c__DisplayClass1c.<Clear>b__1b()
   在 XCode.Cache.CacheBase`1.InvokeFill(Func callback)

#Software: .
#ProcessID: 4456
#AppDomain: c5a66244-1-129931001437450904
#BaseDirectory: C:\DevelopMent\Bioinfo\BioinfoWebSite\
#Date: 2012-09-26
#Fields: Time ThreadID IsPoolThread ThreadName Message
10:29:04.489 4 W - NewLife.Core v3.8.2012.0803 Build 2012-09-25 12:03:50
10:29:04.511 4 W - 为NewLife.CommonEntity.IManageProvider配置注册YWSManageProvider，标识Identity=，优先级Priority=5！
10:29:04.971 4 W - NewLife.XCode v8.8.2012.0828 Build 2012-09-25 12:01:34
10:29:04.972 4 W - 开始检查连接[Common/MySql]的数据库架构……
10:29:05.067 4 W - [Common]的所有实体类（22个）：Sequence,GuidCategory,Administrator,Menu,Role,RoleMenu,Log,Area,User,Simple,SimpleTree,Setting,Statistics,UserProfile,Attachment,Category,Category,News,Messages,Setting,MyRole,Admin
10:29:05.067 4 W - [Common]需要检查架构的实体类（6个）：Category,News,Messages,Setting,MyRole,Admin
10:29:05.067 4 W - Common待检查表架构的实体个数：6
10:29:05.581 4 W - DropDefault(LastLogin)
10:29:05.618 4 W - 检查连接[Common/MySql]的数据库架构耗时00:00:00.6455070
10:29:05.643 4 W - 初始化Bioinfo.Entites.Setting数据
10:29:05.646 4 W - 一级缓存：关闭缓存
10:29:05.721 4 W - 更新实体缓存（第1次）：Bioinfo.Entites.Setting 原因：60秒过期 Setting.FindById(Int32 id)<-EntityHelper.GetName()
10:29:05.760 4 W - 完成更新缓存（第1次）：Bioinfo.Entites.Setting

#Software: .
#ProcessID: 5564
#AppDomain: c5a66244-1-129931023314593609
#BaseDirectory: C:\DevelopMent\Bioinfo\BioinfoWebSite\
#Date: 2012-09-26
#Fields: Time ThreadID IsPoolThread ThreadName Message
11:05:32.151 4 W - NewLife.Core v3.8.2012.0803 Build 2012-09-25 12:03:50
11:05:32.155 4 W - 为NewLife.CommonEntity.IManageProvider配置注册YWSManageProvider，标识Identity=，优先级Priority=5！
11:05:33.951 4 W - NewLife.XCode v8.8.2012.0828 Build 2012-09-25 12:01:34
11:05:33.951 4 W - 检查实体NewLife.CommonEntity.Setting的数据表架构，模式：CheckTableWhenFirstUse
11:05:34.096 4 W - 初始化NewLife.CommonEntity.Setting数据
11:05:34.103 4 W - 开始检查连接[Common/MySql]的数据库架构……
11:05:34.191 4 W - [Common]的所有实体类（18个）：Sequence,GuidCategory,Administrator,Menu,Role,RoleMenu,Log,Area,User,Simple,SimpleTree,Setting,Statistics,UserProfile,Attachment,Category,MyRole,Admin
11:05:34.192 4 W - [Common]需要检查架构的实体类（2个）：MyRole,Admin
11:05:34.192 4 W - Common待检查表架构的实体个数：2
11:05:34.262 9 Y - DropDefault(LastLogin)
11:05:34.404 4 W - DropDefault(LastLogin)
11:05:34.471 4 W - 检查连接[Common/MySql]的数据库架构耗时00:00:00.3670599
11:05:34.472 9 Y - 修改表CreateIndex失败！Duplicate key name 'IX_Administrator_Name'[SQL:Create Unique Index IX_Administrator_Name On Admin (Name)][DB:Common/MySql]
11:05:34.473 4 W - 一级缓存：关闭缓存
11:05:34.475 9 Y - 修改表CreateIndex失败！Duplicate key name 'IX_Administrator_RoleID'[SQL:Create Index IX_Administrator_RoleID On Admin (RoleID)][DB:Common/MySql]
11:05:34.480 9 Y - 初始化NewLife.YWS.Entities.Admin数据
11:05:37.115 9 W - 更新实体缓存（第1次）：NewLife.YWS.Entities.Admin 原因：第一次 Administrator<>.FindByName(String name)<-.Login(String username,String password,Int32 hashTimes)
11:05:37.120 9 W - 完成更新缓存（第1次）：NewLife.YWS.Entities.Admin
11:05:37.156 9 W - 清空实体缓存：NewLife.YWS.Entities.Admin 原因：修改数据后提交事务
11:05:37.180 9 W - 检查实体NewLife.CommonEntity.Log的数据表架构，模式：CheckTableWhenFirstUse
11:05:37.181 9 W - DropDefault(OccurTime)
11:05:37.181 9 W - AddDefault(OccurTime,)
11:05:37.181 9 W - 初始化NewLife.CommonEntity.Log数据
11:05:37.239 9 W - 更新实体缓存（第1次）：NewLife.YWS.Entities.MyRole 原因：第一次 Role<>.FindByID(Int32 id)<-
11:05:37.240 9 W - 初始化NewLife.YWS.Entities.MyRole数据
11:05:37.253 9 W - 检查实体NewLife.CommonEntity.RoleMenu的数据表架构，模式：CheckTableWhenFirstUse
11:05:37.256 9 W - 初始化NewLife.CommonEntity.RoleMenu数据
11:05:37.257 9 W - 如果某一个菜单对应的RoleMenu（角色菜单对应关系）为空或者只有一个，则授权第一个角色访问所有菜单！
11:05:37.270 9 W - 更新实体缓存（第1次）：NewLife.CommonEntity.Menu 原因：第一次 EntityTree<,>.FindAllByParent(EntityTree<,>.TKey parentKey)<-.FindChilds()
11:05:37.270 9 W - 检查实体NewLife.CommonEntity.Menu的数据表架构，模式：CheckTableWhenFirstUse
11:05:37.314 9 W - 初始化NewLife.CommonEntity.Menu数据
11:05:37.324 9 W - 完成更新缓存（第1次）：NewLife.CommonEntity.Menu
11:05:37.337 9 W - 更新实体缓存（第1次）：NewLife.CommonEntity.RoleMenu 原因：第一次 RoleMenu<>.CheckNonePerssion(Int32 menuID)<-Role<,,>.InitData()
11:05:37.342 9 W - 完成更新缓存（第1次）：NewLife.CommonEntity.RoleMenu
11:05:37.355 9 W - 完成更新缓存（第1次）：NewLife.YWS.Entities.MyRole
11:05:41.891 11 W - 初始化Bioinfo.Entites.News数据
11:07:23.247 12 W - 更新实体缓存（第2次）：NewLife.YWS.Entities.Admin 原因：60秒过期 Administrator<>.FindByName(String name)<-.Login(String username,String password,Int32 hashTimes)
11:07:23.263 12 W - 完成更新缓存（第2次）：NewLife.YWS.Entities.Admin
11:07:23.294 12 W - 清空实体缓存：NewLife.YWS.Entities.Admin 原因：修改数据后提交事务
11:07:23.309 4 W - 更新实体缓存（第2次）：NewLife.YWS.Entities.MyRole 原因：60秒过期 Role<>.FindByID(Int32 id)<-
11:07:23.326 4 W - 完成更新缓存（第2次）：NewLife.YWS.Entities.MyRole
11:07:23.327 4 W - 更新实体缓存（第2次）：NewLife.CommonEntity.RoleMenu 原因：60秒过期 RoleMenu<>.FindAllByRoleID(Int32 roleID)<-
11:07:23.330 4 W - 完成更新缓存（第2次）：NewLife.CommonEntity.RoleMenu
11:07:23.334 4 W - 更新实体缓存（第2次）：NewLife.CommonEntity.Menu 原因：60秒过期 Menu<>.FindByID(Int32 id)<-
11:07:23.335 4 W - 完成更新缓存（第2次）：NewLife.CommonEntity.Menu
11:11:04.652 13 W - 更新实体缓存（第3次）：NewLife.CommonEntity.Menu 原因：60秒过期 Entity<>.FindWithCache(String name,Object value)<-Entity<>.EntityOperate.FindWithCache(String name,Object value)
11:11:04.657 13 W - 完成更新缓存（第3次）：NewLife.CommonEntity.Menu
11:11:06.158 13 W - 更新实体缓存（第3次）：NewLife.YWS.Entities.MyRole 原因：60秒过期 Role<>.FindByID(Int32 id)<-
11:11:06.161 13 W - 完成更新缓存（第3次）：NewLife.YWS.Entities.MyRole
11:11:50.490 11 W - 更新实体缓存（第3次）：NewLife.CommonEntity.RoleMenu 原因：60秒过期 EntityCache<>.XCode.Cache.IEntityCache.get_Entities()<-Pages_RoleMenu.FindByRoleAndMenu(Int32 roleID,Int32 menuID)
11:11:50.494 11 W - 完成更新缓存（第3次）：NewLife.CommonEntity.RoleMenu
11:12:47.269 13 W - 更新实体缓存（第4次）：NewLife.CommonEntity.Menu 原因：60秒过期 Menu<>.GetCurrentMenu()<-.get_Current()
11:12:47.273 13 W - 完成更新缓存（第4次）：NewLife.CommonEntity.Menu
11:12:50.938 13 W - 更新实体缓存（第4次）：NewLife.YWS.Entities.MyRole 原因：60秒过期 Role<>.FindByID(Int32 id)<-
11:12:50.941 13 W - 完成更新缓存（第4次）：NewLife.YWS.Entities.MyRole
11:12:51.474 4 W - 异步更新实体缓存（第1次）：NewLife.CommonEntity.Log 原因：600秒过期
11:12:51.482 11 Y - 完成更新缓存（第1次）：NewLife.CommonEntity.Log
11:12:59.089 13 W - 清空实体缓存：NewLife.YWS.Entities.MyRole 原因：修改数据后提交事务
11:13:01.987 13 W - 更新实体缓存（第5次）：NewLife.YWS.Entities.MyRole 原因：60秒过期 Role<>.FindByID(Int32 id)<-
11:13:01.990 13 W - 完成更新缓存（第5次）：NewLife.YWS.Entities.MyRole
11:13:01.991 13 W - 更新实体缓存（第4次）：NewLife.CommonEntity.RoleMenu 原因：60秒过期 RoleMenu<>.FindAllByRoleID(Int32 roleID)<-
11:13:01.994 13 W - 完成更新缓存（第4次）：NewLife.CommonEntity.RoleMenu
11:14:00.137 11 W - 更新实体缓存（第5次）：NewLife.CommonEntity.Menu 原因：60秒过期 Menu<>.GetCurrentMenu()<-.get_Current()
11:14:00.142 11 W - 完成更新缓存（第5次）：NewLife.CommonEntity.Menu
11:14:00.212 11 W - 初始化Bioinfo.Entites.Category数据
11:14:05.983 12 W - 初始化Bioinfo.Entites.Setting数据
11:14:06.003 12 W - 更新实体缓存（第1次）：Bioinfo.Entites.Category 原因：第一次 Category.FindById(Int32 id)<-Setting.get_Category()
11:14:06.012 12 W - 完成更新缓存（第1次）：Bioinfo.Entites.Category
11:15:39.663 11 W - 实体缓存<Menu>总次数250，一级命中245（98.00%）
11:15:39.666 11 W - 更新实体缓存（第6次）：NewLife.CommonEntity.Menu 原因：60秒过期 Menu<>.GetCurrentMenu()<-.get_Current()
11:15:39.670 11 W - 完成更新缓存（第6次）：NewLife.CommonEntity.Menu
11:17:53.382 15 W - 更新实体缓存（第7次）：NewLife.CommonEntity.Menu 原因：60秒过期 Menu<>.GetCurrentMenu()<-.get_Current()
11:17:53.387 15 W - 完成更新缓存（第7次）：NewLife.CommonEntity.Menu
11:23:56.718 2 N - 清空单对象缓存：NewLife.CommonEntity.Setting

#Software: .
#ProcessID: 5260
#AppDomain: c5a66244-1-129931059535064349
#BaseDirectory: C:\DevelopMent\Bioinfo\BioinfoWebSite\
#Date: 2012-09-26
#Fields: Time ThreadID IsPoolThread ThreadName Message
12:05:54.255 4 W - NewLife.Core v3.8.2012.0803 Build 2012-09-25 12:03:50
12:05:54.255 4 W - 为NewLife.CommonEntity.IManageProvider配置注册YWSManageProvider，标识Identity=，优先级Priority=5！
12:05:55.893 4 W - NewLife.XCode v8.8.2012.0828 Build 2012-09-25 12:01:34
12:05:55.893 4 W - 检查实体NewLife.CommonEntity.Setting的数据表架构，模式：CheckTableWhenFirstUse
12:05:56.018 4 W - 初始化NewLife.CommonEntity.Setting数据
12:05:56.033 4 W - 开始检查连接[Common/MySql]的数据库架构……
12:05:56.111 4 W - [Common]的所有实体类（18个）：Sequence,GuidCategory,Administrator,Menu,Role,RoleMenu,Log,Area,User,Simple,SimpleTree,Setting,Statistics,UserProfile,Attachment,Category,MyRole,Admin
12:05:56.111 4 W - [Common]需要检查架构的实体类（2个）：MyRole,Admin
12:05:56.111 4 W - Common待检查表架构的实体个数：2
12:05:56.189 8 Y - DropDefault(LastLogin)
12:05:56.361 4 W - DropDefault(LastLogin)
12:05:56.423 4 W - 检查连接[Common/MySql]的数据库架构耗时00:00:00.3855483
12:05:56.423 8 Y - 初始化NewLife.YWS.Entities.Admin数据
12:05:56.423 4 W - 一级缓存：关闭缓存
12:06:03.367 8 W - 更新实体缓存（第1次）：NewLife.YWS.Entities.Admin 原因：第一次 Administrator<>.FindByName(String name)<-.Login(String username,String password,Int32 hashTimes)
12:06:03.383 8 W - 完成更新缓存（第1次）：NewLife.YWS.Entities.Admin
12:06:03.414 8 W - 清空实体缓存：NewLife.YWS.Entities.Admin 原因：修改数据后提交事务
12:06:03.430 8 W - 检查实体NewLife.CommonEntity.Log的数据表架构，模式：CheckTableWhenFirstUse
12:06:03.430 8 W - DropDefault(OccurTime)
12:06:03.430 8 W - AddDefault(OccurTime,)
12:06:03.430 8 W - 初始化NewLife.CommonEntity.Log数据
12:06:03.485 11 W - 更新实体缓存（第1次）：NewLife.YWS.Entities.MyRole 原因：第一次 Role<>.FindByID(Int32 id)<-
12:06:03.485 11 W - 初始化NewLife.YWS.Entities.MyRole数据
12:06:03.505 11 W - 检查实体NewLife.CommonEntity.RoleMenu的数据表架构，模式：CheckTableWhenFirstUse
12:06:03.816 11 W - 初始化NewLife.CommonEntity.RoleMenu数据
12:06:03.816 11 W - 如果某一个菜单对应的RoleMenu（角色菜单对应关系）为空或者只有一个，则授权第一个角色访问所有菜单！
12:06:03.832 11 W - 更新实体缓存（第1次）：NewLife.CommonEntity.Menu 原因：第一次 EntityTree<,>.FindAllByParent(EntityTree<,>.TKey parentKey)<-.FindChilds()
12:06:03.832 11 W - 检查实体NewLife.CommonEntity.Menu的数据表架构，模式：CheckTableWhenFirstUse
12:06:03.863 11 W - 初始化NewLife.CommonEntity.Menu数据
12:06:03.863 11 W - 完成更新缓存（第1次）：NewLife.CommonEntity.Menu
12:06:03.878 11 W - 更新实体缓存（第1次）：NewLife.CommonEntity.RoleMenu 原因：第一次 RoleMenu<>.CheckNonePerssion(Int32 menuID)<-Role<,,>.InitData()
12:06:03.878 11 W - 完成更新缓存（第1次）：NewLife.CommonEntity.RoleMenu
12:06:03.894 11 W - 完成更新缓存（第1次）：NewLife.YWS.Entities.MyRole
12:06:39.468 11 W - 更新实体缓存（第2次）：NewLife.YWS.Entities.Admin 原因：60秒过期 Administrator<>.FindByName(String name)<-.Login(String username,String password,Int32 hashTimes)
12:06:39.484 11 W - 完成更新缓存（第2次）：NewLife.YWS.Entities.Admin
12:06:39.515 11 W - 清空实体缓存：NewLife.YWS.Entities.Admin 原因：修改数据后提交事务
12:07:22.249 4 W - 更新实体缓存（第3次）：NewLife.YWS.Entities.Admin 原因：60秒过期 Administrator<>.FindByName(String name)<-.Login(String username,String password,Int32 hashTimes)
12:07:22.249 4 W - 完成更新缓存（第3次）：NewLife.YWS.Entities.Admin
12:07:22.296 4 W - 清空实体缓存：NewLife.YWS.Entities.Admin 原因：修改数据后提交事务
12:07:22.332 7 W - 更新实体缓存（第2次）：NewLife.YWS.Entities.MyRole 原因：60秒过期 Role<>.FindByID(Int32 id)<-
12:07:22.332 7 W - 完成更新缓存（第2次）：NewLife.YWS.Entities.MyRole
12:07:22.332 7 W - 更新实体缓存（第2次）：NewLife.CommonEntity.RoleMenu 原因：60秒过期 RoleMenu<>.FindAllByRoleID(Int32 roleID)<-
12:07:22.342 7 W - 完成更新缓存（第2次）：NewLife.CommonEntity.RoleMenu
12:07:22.342 7 W - 更新实体缓存（第2次）：NewLife.CommonEntity.Menu 原因：60秒过期 Menu<>.FindByID(Int32 id)<-
12:07:22.342 7 W - 完成更新缓存（第2次）：NewLife.CommonEntity.Menu
12:07:25.357 7 W - 初始化Bioinfo.Entites.News数据
12:08:28.014 15 W - 更新实体缓存（第3次）：NewLife.CommonEntity.Menu 原因：60秒过期 Menu<>.GetCurrentMenu()<-.get_Current()
12:08:28.014 15 W - 完成更新缓存（第3次）：NewLife.CommonEntity.Menu
12:12:29.344 18 W - 更新实体缓存（第4次）：NewLife.CommonEntity.Menu 原因：60秒过期 Menu<>.GetCurrentMenu()<-.get_Current()
12:12:29.360 18 W - 完成更新缓存（第4次）：NewLife.CommonEntity.Menu
12:12:36.239 2 N - 清空单对象缓存：NewLife.CommonEntity.Setting

#Software: .
#ProcessID: 6100
#AppDomain: c5a66244-1-129931063643044179
#BaseDirectory: C:\DevelopMent\Bioinfo\BioinfoWebSite\
#Date: 2012-09-26
#Fields: Time ThreadID IsPoolThread ThreadName Message
12:12:45.006 4 W - NewLife.Core v3.8.2012.0803 Build 2012-09-25 12:03:50
12:12:45.037 4 W - 为NewLife.CommonEntity.IManageProvider配置注册YWSManageProvider，标识Identity=，优先级Priority=5！
12:12:46.722 8 W - NewLife.XCode v8.8.2012.0828 Build 2012-09-25 12:01:34
12:12:46.722 8 W - 检查实体NewLife.CommonEntity.Setting的数据表架构，模式：CheckTableWhenFirstUse
12:12:46.847 8 W - 初始化NewLife.CommonEntity.Setting数据
12:12:46.862 8 W - 开始检查连接[Common/MySql]的数据库架构……
12:12:46.940 8 W - [Common]的所有实体类（18个）：Sequence,GuidCategory,Administrator,Menu,Role,RoleMenu,Log,Area,User,Simple,SimpleTree,Setting,Statistics,UserProfile,Attachment,Category,MyRole,Admin
12:12:46.940 8 W - [Common]需要检查架构的实体类（2个）：MyRole,Admin
12:12:46.940 8 W - Common待检查表架构的实体个数：2
12:12:47.050 4 Y - DropDefault(LastLogin)
12:12:47.206 8 W - DropDefault(LastLogin)
12:12:47.284 8 W - 检查连接[Common/MySql]的数据库架构耗时00:00:00.4148910
12:12:47.284 4 Y - 初始化NewLife.YWS.Entities.Admin数据
12:12:47.284 8 W - 一级缓存：关闭缓存
12:12:49.280 8 W - 更新实体缓存（第1次）：NewLife.YWS.Entities.Admin 原因：第一次 Administrator<>.FindByName(String name)<-.Login(String username,String password,Int32 hashTimes)
12:12:49.280 8 W - 完成更新缓存（第1次）：NewLife.YWS.Entities.Admin
12:12:49.334 8 W - 清空实体缓存：NewLife.YWS.Entities.Admin 原因：修改数据后提交事务
12:12:49.357 8 W - 检查实体NewLife.CommonEntity.Log的数据表架构，模式：CheckTableWhenFirstUse
12:12:49.357 8 W - DropDefault(OccurTime)
12:12:49.357 8 W - AddDefault(OccurTime,)
12:12:49.357 8 W - 初始化NewLife.CommonEntity.Log数据
12:12:49.407 4 W - 更新实体缓存（第1次）：NewLife.YWS.Entities.MyRole 原因：第一次 Role<>.FindByID(Int32 id)<-
12:12:49.407 4 W - 初始化NewLife.YWS.Entities.MyRole数据
12:12:49.427 4 W - 检查实体NewLife.CommonEntity.RoleMenu的数据表架构，模式：CheckTableWhenFirstUse
12:12:49.427 4 W - 初始化NewLife.CommonEntity.RoleMenu数据
12:12:49.427 4 W - 如果某一个菜单对应的RoleMenu（角色菜单对应关系）为空或者只有一个，则授权第一个角色访问所有菜单！
12:12:49.443 4 W - 更新实体缓存（第1次）：NewLife.CommonEntity.Menu 原因：第一次 EntityTree<,>.FindAllByParent(EntityTree<,>.TKey parentKey)<-.FindChilds()
12:12:49.443 4 W - 检查实体NewLife.CommonEntity.Menu的数据表架构，模式：CheckTableWhenFirstUse
12:12:49.474 4 W - 初始化NewLife.CommonEntity.Menu数据
12:12:49.490 4 W - 完成更新缓存（第1次）：NewLife.CommonEntity.Menu
12:12:49.505 4 W - 更新实体缓存（第1次）：NewLife.CommonEntity.RoleMenu 原因：第一次 RoleMenu<>.CheckNonePerssion(Int32 menuID)<-Role<,,>.InitData()
12:12:49.505 4 W - 完成更新缓存（第1次）：NewLife.CommonEntity.RoleMenu
12:12:49.521 4 W - 完成更新缓存（第1次）：NewLife.YWS.Entities.MyRole
12:12:52.552 4 W - 初始化Bioinfo.Entites.Setting数据
12:12:52.592 4 W - 初始化Bioinfo.Entites.Category数据
12:12:52.592 4 W - 更新实体缓存（第1次）：Bioinfo.Entites.Category 原因：第一次 Category.FindById(Int32 id)<-Setting.get_Category()
12:12:52.592 4 W - 完成更新缓存（第1次）：Bioinfo.Entites.Category
12:12:53.433 12 W - 初始化Bioinfo.Entites.News数据
12:13:51.811 11 W - 更新实体缓存（第2次）：NewLife.CommonEntity.Menu 原因：60秒过期 Menu<>.GetCurrentMenu()<-.get_Current()
12:13:51.811 11 W - 完成更新缓存（第2次）：NewLife.CommonEntity.Menu
12:14:42.454 2 N - 清空单对象缓存：NewLife.CommonEntity.Setting

#Software: .
#ProcessID: 3332
#AppDomain: c5a66244-1-129931065254524493
#BaseDirectory: C:\DevelopMent\Bioinfo\BioinfoWebSite\
#Date: 2012-09-26
#Fields: Time ThreadID IsPoolThread ThreadName Message
12:15:26.138 4 W - NewLife.Core v3.8.2012.0803 Build 2012-09-25 12:03:50
12:15:26.170 4 W - 为NewLife.CommonEntity.IManageProvider配置注册YWSManageProvider，标识Identity=，优先级Priority=5！
12:15:27.870 8 W - NewLife.XCode v8.8.2012.0828 Build 2012-09-25 12:01:34
12:15:27.870 8 W - 检查实体NewLife.CommonEntity.Setting的数据表架构，模式：CheckTableWhenFirstUse
12:15:27.995 8 W - 初始化NewLife.CommonEntity.Setting数据
12:15:27.995 8 W - 开始检查连接[Common/MySql]的数据库架构……
12:15:28.088 8 W - [Common]的所有实体类（18个）：Sequence,GuidCategory,Administrator,Menu,Role,RoleMenu,Log,Area,User,Simple,SimpleTree,Setting,Statistics,UserProfile,Attachment,Category,MyRole,Admin
12:15:28.088 8 W - [Common]需要检查架构的实体类（2个）：MyRole,Admin
12:15:28.088 8 W - Common待检查表架构的实体个数：2
12:15:28.166 4 Y - DropDefault(LastLogin)
12:15:28.338 8 W - DropDefault(LastLogin)
12:15:28.400 8 W - 检查连接[Common/MySql]的数据库架构耗时00:00:00.3962255
12:15:28.400 4 Y - 初始化NewLife.YWS.Entities.Admin数据
12:15:28.400 8 W - 一级缓存：关闭缓存
12:15:30.241 11 W - 更新实体缓存（第1次）：NewLife.YWS.Entities.Admin 原因：第一次 Administrator<>.FindByName(String name)<-.Login(String username,String password,Int32 hashTimes)
12:15:30.257 11 W - 完成更新缓存（第1次）：NewLife.YWS.Entities.Admin
12:15:30.298 11 W - 清空实体缓存：NewLife.YWS.Entities.Admin 原因：修改数据后提交事务
12:15:30.328 11 W - 检查实体NewLife.CommonEntity.Log的数据表架构，模式：CheckTableWhenFirstUse
12:15:30.394 11 W - DropDefault(OccurTime)
12:15:30.394 11 W - AddDefault(OccurTime,)
12:15:30.394 11 W - 初始化NewLife.CommonEntity.Log数据
12:15:30.440 4 W - 更新实体缓存（第1次）：NewLife.YWS.Entities.MyRole 原因：第一次 Role<>.FindByID(Int32 id)<-
12:15:30.440 4 W - 初始化NewLife.YWS.Entities.MyRole数据
12:15:30.456 4 W - 检查实体NewLife.CommonEntity.RoleMenu的数据表架构，模式：CheckTableWhenFirstUse
12:15:30.456 4 W - 初始化NewLife.CommonEntity.RoleMenu数据
12:15:30.472 4 W - 如果某一个菜单对应的RoleMenu（角色菜单对应关系）为空或者只有一个，则授权第一个角色访问所有菜单！
12:15:30.472 4 W - 更新实体缓存（第1次）：NewLife.CommonEntity.Menu 原因：第一次 EntityTree<,>.FindAllByParent(EntityTree<,>.TKey parentKey)<-.FindChilds()
12:15:30.472 4 W - 检查实体NewLife.CommonEntity.Menu的数据表架构，模式：CheckTableWhenFirstUse
12:15:30.503 4 W - 初始化NewLife.CommonEntity.Menu数据
12:15:30.518 4 W - 完成更新缓存（第1次）：NewLife.CommonEntity.Menu
12:15:30.534 4 W - 更新实体缓存（第1次）：NewLife.CommonEntity.RoleMenu 原因：第一次 RoleMenu<>.CheckNonePerssion(Int32 menuID)<-Role<,,>.InitData()
12:15:30.534 4 W - 完成更新缓存（第1次）：NewLife.CommonEntity.RoleMenu
12:15:30.550 4 W - 完成更新缓存（第1次）：NewLife.YWS.Entities.MyRole
12:15:33.436 11 W - 初始化Bioinfo.Entites.News数据
12:17:44.980 8 W - 更新实体缓存（第2次）：NewLife.CommonEntity.Menu 原因：60秒过期 Menu<>.GetCurrentMenu()<-.get_Current()
12:17:44.996 8 W - 完成更新缓存（第2次）：NewLife.CommonEntity.Menu
12:19:28.692 8 W - 更新实体缓存（第3次）：NewLife.CommonEntity.Menu 原因：60秒过期 Menu<>.GetCurrentMenu()<-.get_Current()
12:19:28.692 8 W - 完成更新缓存（第3次）：NewLife.CommonEntity.Menu
12:21:20.993 13 W - 更新实体缓存（第4次）：NewLife.CommonEntity.Menu 原因：60秒过期 Menu<>.GetCurrentMenu()<-.get_Current()
12:21:20.997 13 W - 完成更新缓存（第4次）：NewLife.CommonEntity.Menu
12:21:27.431 2 N - 清空单对象缓存：NewLife.CommonEntity.Setting
12:21:27.434 2 N - 错误的连接字符串：Server=192.168.1.47;Database=Bioinfodb2;Uid=root;Pwd=yrshabc123
12:21:27.437 2 N - XCode.Exceptions.XDbSessionException: Unable to connect to any of the specified MySQL hosts.[DB:Common/MySql] ---> MySql.Data.MySqlClient.MySqlException: Unable to connect to any of the specified MySQL hosts. ---> System.ApplicationException: 应用程序中的错误。
   在 System.Threading.ThreadPool.RegisterWaitForSingleObjectNative(WaitHandle waitHandle, Object state, UInt32 timeOutInterval, Boolean executeOnlyOnce, RegisteredWaitHandle registeredWaitHandle, StackCrawlMark& stackMark, Boolean compressStack)
   在 System.Threading.ThreadPool.RegisterWaitForSingleObject(WaitHandle waitObject, WaitOrTimerCallback callBack, Object state, UInt32 millisecondsTimeOutInterval, Boolean executeOnlyOnce, StackCrawlMark& stackMark, Boolean compressStack)
   在 System.Threading.ThreadPool.UnsafeRegisterWaitForSingleObject(WaitHandle waitObject, WaitOrTimerCallback callBack, Object state, Int32 millisecondsTimeOutInterval, Boolean executeOnlyOnce)
   在 System.Net.Sockets.Socket.SetAsyncEventSelect(AsyncEventBits blockEventBits)
   在 System.Net.Sockets.Socket.DoBeginConnect(EndPoint endPointSnapshot, SocketAddress socketAddress, LazyAsyncResult asyncResult)
   在 System.Net.Sockets.Socket.BeginConnect(EndPoint remoteEP, AsyncCallback callback, Object state)
   在 MySql.Data.Common.StreamCreator.CreateSocketStream(IPAddress ip, Boolean unix)
   在 MySql.Data.Common.StreamCreator.GetStream(UInt32 timeout)
   在 MySql.Data.MySqlClient.NativeDriver.Open()
   --- 内部异常堆栈跟踪的结尾 ---
   在 MySql.Data.MySqlClient.NativeDriver.Open()
   在 MySql.Data.MySqlClient.Driver.Open()
   在 MySql.Data.MySqlClient.Driver.Create(MySqlConnectionStringBuilder settings)
   在 MySql.Data.MySqlClient.MySqlPool.GetPooledConnection()
   在 MySql.Data.MySqlClient.MySqlPool.TryToGetDriver()
   在 MySql.Data.MySqlClient.MySqlPool.GetConnection()
   在 MySql.Data.MySqlClient.MySqlConnection.Open()
   在 XCode.DataAccessLayer.DbSession.Open()
   在 XCode.DataAccessLayer.DbSession.BeginTransaction()
   --- 内部异常堆栈跟踪的结尾 ---
   在 XCode.DataAccessLayer.DbSession.BeginTransaction()
   在 XCode.DataAccessLayer.DAL.BeginTransaction()
   在 XCode.Entity`1.Meta.BeginTrans()
   在 XCode.Entity`1.DoAction(Func`1 func, Nullable`1 isnew)
   在 XCode.Entity`1.Update()
   在 XCode.Cache.SingleEntityCache`2.<>c__DisplayClass1c.<Clear>b__1b()
   在 XCode.Cache.CacheBase`1.InvokeFill(Func callback)

#Software: .
#ProcessID: 3980
#AppDomain: c5a66244-1-129931102778205740
#BaseDirectory: C:\DevelopMent\Bioinfo\BioinfoWebSite\
#Date: 2012-09-26
#Fields: Time ThreadID IsPoolThread ThreadName Message
13:17:58.491 4 W - NewLife.Core v3.8.2012.0803 Build 2012-09-25 12:03:50
13:17:58.522 4 W - 为NewLife.CommonEntity.IManageProvider配置注册YWSManageProvider，标识Identity=，优先级Priority=5！
13:18:00.191 4 W - NewLife.XCode v8.8.2012.0828 Build 2012-09-25 12:01:34
13:18:00.191 4 W - 检查实体NewLife.CommonEntity.Setting的数据表架构，模式：CheckTableWhenFirstUse
13:18:00.316 4 W - 初始化NewLife.CommonEntity.Setting数据
13:18:00.316 4 W - 开始检查连接[Common/MySql]的数据库架构……
13:18:00.394 4 W - [Common]的所有实体类（18个）：Sequence,GuidCategory,Administrator,Menu,Role,RoleMenu,Log,Area,User,Simple,SimpleTree,Setting,Statistics,UserProfile,Attachment,Category,MyRole,Admin
13:18:00.394 4 W - [Common]需要检查架构的实体类（2个）：MyRole,Admin
13:18:00.394 4 W - Common待检查表架构的实体个数：2
13:18:00.488 8 Y - DropDefault(LastLogin)
13:18:00.644 4 W - DropDefault(LastLogin)
13:18:00.722 4 W - 检查连接[Common/MySql]的数据库架构耗时00:00:00.3965782
13:18:00.722 8 Y - 初始化NewLife.YWS.Entities.Admin数据
13:18:00.722 4 W - 一级缓存：关闭缓存
13:18:02.594 8 W - 更新实体缓存（第1次）：NewLife.YWS.Entities.Admin 原因：第一次 Administrator<>.FindByName(String name)<-.Login(String username,String password,Int32 hashTimes)
13:18:02.594 8 W - 完成更新缓存（第1次）：NewLife.YWS.Entities.Admin
13:18:02.625 8 W - 清空实体缓存：NewLife.YWS.Entities.Admin 原因：修改数据后提交事务
13:18:02.650 8 W - 检查实体NewLife.CommonEntity.Log的数据表架构，模式：CheckTableWhenFirstUse
13:18:02.650 8 W - DropDefault(OccurTime)
13:18:02.650 8 W - AddDefault(OccurTime,)
13:18:02.650 8 W - 初始化NewLife.CommonEntity.Log数据
13:18:02.710 8 W - 更新实体缓存（第1次）：NewLife.YWS.Entities.MyRole 原因：第一次 Role<>.FindByID(Int32 id)<-
13:18:02.710 8 W - 初始化NewLife.YWS.Entities.MyRole数据
13:18:02.720 8 W - 检查实体NewLife.CommonEntity.RoleMenu的数据表架构，模式：CheckTableWhenFirstUse
13:18:02.720 8 W - 初始化NewLife.CommonEntity.RoleMenu数据
13:18:02.730 8 W - 如果某一个菜单对应的RoleMenu（角色菜单对应关系）为空或者只有一个，则授权第一个角色访问所有菜单！
13:18:02.740 8 W - 更新实体缓存（第1次）：NewLife.CommonEntity.Menu 原因：第一次 EntityTree<,>.FindAllByParent(EntityTree<,>.TKey parentKey)<-.FindChilds()
13:18:02.740 8 W - 检查实体NewLife.CommonEntity.Menu的数据表架构，模式：CheckTableWhenFirstUse
13:18:02.772 8 W - 初始化NewLife.CommonEntity.Menu数据
13:18:02.787 8 W - 完成更新缓存（第1次）：NewLife.CommonEntity.Menu
13:18:02.803 8 W - 更新实体缓存（第1次）：NewLife.CommonEntity.RoleMenu 原因：第一次 RoleMenu<>.CheckNonePerssion(Int32 menuID)<-Role<,,>.InitData()
13:18:02.803 8 W - 完成更新缓存（第1次）：NewLife.CommonEntity.RoleMenu
13:18:02.818 8 W - 完成更新缓存（第1次）：NewLife.YWS.Entities.MyRole
13:18:05.627 4 W - 初始化Bioinfo.Entites.News数据
13:19:05.510 7 W - 更新实体缓存（第2次）：NewLife.CommonEntity.Menu 原因：60秒过期 Menu<>.GetCurrentMenu()<-.get_Current()
13:19:05.510 7 W - 完成更新缓存（第2次）：NewLife.CommonEntity.Menu
13:19:08.864 4 W - 清空实体缓存：NewLife.CommonEntity.Menu 原因：修改数据后提交事务
13:19:09.933 4 W - 更新实体缓存（第3次）：NewLife.CommonEntity.Menu 原因：60秒过期 Menu<>.GetCurrentMenu()<-.get_Current()
13:19:09.933 4 W - 完成更新缓存（第3次）：NewLife.CommonEntity.Menu
13:19:18.281 7 W - 更新实体缓存（第2次）：NewLife.YWS.Entities.MyRole 原因：60秒过期 Role<>.FindByID(Int32 id)<-
13:19:18.281 7 W - 完成更新缓存（第2次）：NewLife.YWS.Entities.MyRole
13:19:26.493 11 W - 更新实体缓存（第2次）：NewLife.CommonEntity.RoleMenu 原因：60秒过期 EntityCache<>.XCode.Cache.IEntityCache.get_Entities()<-Pages_RoleMenu.FindByRoleAndMenu(Int32 roleID,Int32 menuID)
13:19:26.493 11 W - 完成更新缓存（第2次）：NewLife.CommonEntity.RoleMenu
13:19:40.783 12 W - 清空实体缓存：NewLife.CommonEntity.Menu 原因：修改数据后提交事务
13:19:42.128 12 W - 更新实体缓存（第4次）：NewLife.CommonEntity.Menu 原因：60秒过期 Menu<>.GetCurrentMenu()<-.get_Current()
13:19:42.138 12 W - 完成更新缓存（第4次）：NewLife.CommonEntity.Menu
13:20:04.145 12 W - 清空实体缓存：NewLife.CommonEntity.Menu 原因：修改数据后提交事务
13:20:05.247 7 W - 更新实体缓存（第5次）：NewLife.CommonEntity.Menu 原因：60秒过期 Menu<>.GetCurrentMenu()<-.get_Current()
13:20:05.255 7 W - 完成更新缓存（第5次）：NewLife.CommonEntity.Menu
13:20:18.717 7 W - 异步更新实体缓存（第1次）：NewLife.CommonEntity.Log 原因：600秒过期
13:20:18.780 7 Y - 完成更新缓存（第1次）：NewLife.CommonEntity.Log
13:20:20.144 7 W - 更新实体缓存（第3次）：NewLife.YWS.Entities.MyRole 原因：60秒过期 Role<>.FindByID(Int32 id)<-
13:20:20.144 7 W - 完成更新缓存（第3次）：NewLife.YWS.Entities.MyRole
13:21:03.647 8 W - 初始化Bioinfo.Entites.Category数据
13:21:04.669 4 W - 初始化Bioinfo.Entites.Messages数据
13:21:05.306 14 W - 更新实体缓存（第6次）：NewLife.CommonEntity.Menu 原因：60秒过期 Menu<>.GetCurrentMenu()<-.get_Current()
13:21:05.306 14 W - 完成更新缓存（第6次）：NewLife.CommonEntity.Menu
13:21:06.101 7 W - 初始化Bioinfo.Entites.Setting数据
13:21:06.121 7 W - 更新实体缓存（第1次）：Bioinfo.Entites.Category 原因：第一次 Category.FindById(Int32 id)<-Setting.get_Category()
13:21:06.121 7 W - 完成更新缓存（第1次）：Bioinfo.Entites.Category
13:27:49.313 2 N - 清空单对象缓存：NewLife.CommonEntity.Setting

#Software: .
#ProcessID: 528
#AppDomain: c5a66244-1-129931111671906571
#BaseDirectory: C:\DevelopMent\Bioinfo\BioinfoWebSite\
#Date: 2012-09-26
#Fields: Time ThreadID IsPoolThread ThreadName Message
13:32:48.735 4 W - NewLife.Core v3.8.2012.0803 Build 2012-09-25 12:03:50
13:32:48.750 4 W - 为NewLife.CommonEntity.IManageProvider配置注册YWSManageProvider，标识Identity=，优先级Priority=5！
13:33:02.738 4 W - NewLife.XCode v8.8.2012.0828 Build 2012-09-25 12:01:34
13:33:02.738 4 W - 检查实体NewLife.CommonEntity.Setting的数据表架构，模式：CheckTableWhenFirstUse
13:33:02.863 4 W - 初始化NewLife.CommonEntity.Setting数据
13:33:02.879 4 W - 开始检查连接[Common/MySql]的数据库架构……
13:33:02.941 4 W - [Common]的所有实体类（22个）：Sequence,GuidCategory,Administrator,Menu,Role,RoleMenu,Log,Area,User,Simple,SimpleTree,Setting,Statistics,UserProfile,Attachment,Category,Category,News,Messages,Setting,MyRole,Admin
13:33:02.941 4 W - [Common]需要检查架构的实体类（6个）：Category,News,Messages,Setting,MyRole,Admin
13:33:02.941 4 W - Common待检查表架构的实体个数：6
13:33:03.035 8 Y - DropDefault(LastLogin)
13:33:03.191 4 W - DropDefault(LastLogin)
13:33:03.269 4 W - 检查连接[Common/MySql]的数据库架构耗时00:00:00.3885645
13:33:03.269 8 Y - 初始化NewLife.YWS.Entities.Admin数据
13:33:03.269 4 W - 一级缓存：关闭缓存
13:33:04.626 4 W - 更新实体缓存（第1次）：NewLife.YWS.Entities.Admin 原因：第一次 Administrator<>.FindByName(String name)<-.Login(String username,String password,Int32 hashTimes)
13:33:04.626 4 W - 完成更新缓存（第1次）：NewLife.YWS.Entities.Admin
13:33:04.677 4 W - 清空实体缓存：NewLife.YWS.Entities.Admin 原因：修改数据后提交事务
13:33:04.697 4 W - 检查实体NewLife.CommonEntity.Log的数据表架构，模式：CheckTableWhenFirstUse
13:33:04.697 4 W - DropDefault(OccurTime)
13:33:04.697 4 W - AddDefault(OccurTime,)
13:33:04.697 4 W - 初始化NewLife.CommonEntity.Log数据
13:33:04.763 10 W - 更新实体缓存（第1次）：NewLife.YWS.Entities.MyRole 原因：第一次 Role<>.FindByID(Int32 id)<-
13:33:04.763 10 W - 初始化NewLife.YWS.Entities.MyRole数据
13:33:04.778 10 W - 检查实体NewLife.CommonEntity.RoleMenu的数据表架构，模式：CheckTableWhenFirstUse
13:33:04.841 10 W - 初始化NewLife.CommonEntity.RoleMenu数据
13:33:04.841 10 W - 如果某一个菜单对应的RoleMenu（角色菜单对应关系）为空或者只有一个，则授权第一个角色访问所有菜单！
13:33:04.856 10 W - 更新实体缓存（第1次）：NewLife.CommonEntity.Menu 原因：第一次 EntityTree<,>.FindAllByParent(EntityTree<,>.TKey parentKey)<-.FindChilds()
13:33:04.856 10 W - 检查实体NewLife.CommonEntity.Menu的数据表架构，模式：CheckTableWhenFirstUse
13:33:04.903 10 W - 初始化NewLife.CommonEntity.Menu数据
13:33:04.903 10 W - 完成更新缓存（第1次）：NewLife.CommonEntity.Menu
13:33:04.919 10 W - 更新实体缓存（第1次）：NewLife.CommonEntity.RoleMenu 原因：第一次 RoleMenu<>.CheckNonePerssion(Int32 menuID)<-Role<,,>.InitData()
13:33:04.919 10 W - 完成更新缓存（第1次）：NewLife.CommonEntity.RoleMenu
13:33:04.934 10 W - 完成更新缓存（第1次）：NewLife.YWS.Entities.MyRole
13:33:07.723 10 W - 初始化Bioinfo.Entites.News数据
13:33:09.141 10 W - 初始化Bioinfo.Entites.Category数据
13:35:25.212 2 N - 清空单对象缓存：NewLife.CommonEntity.Setting
13:35:40.217 2 N - 错误的连接字符串：Server=192.168.1.47;Database=Bioinfodb2;Uid=root;Pwd=yrshabc123
13:35:40.217 2 N - XCode.Exceptions.XDbSessionException: Unable to connect to any of the specified MySQL hosts.[DB:Common/MySql] ---> MySql.Data.MySqlClient.MySqlException: Unable to connect to any of the specified MySQL hosts.
   在 MySql.Data.MySqlClient.NativeDriver.Open()
   在 MySql.Data.MySqlClient.Driver.Open()
   在 MySql.Data.MySqlClient.Driver.Create(MySqlConnectionStringBuilder settings)
   在 MySql.Data.MySqlClient.MySqlPool.GetPooledConnection()
   在 MySql.Data.MySqlClient.MySqlPool.TryToGetDriver()
   在 MySql.Data.MySqlClient.MySqlPool.GetConnection()
   在 MySql.Data.MySqlClient.MySqlConnection.Open()
   在 XCode.DataAccessLayer.DbSession.Open() 位置 C:\X\Src\XCode\DataAccessLayer\Common\DbSession.cs:行号 110
   在 XCode.DataAccessLayer.DbSession.BeginTransaction() 位置 C:\X\Src\XCode\DataAccessLayer\Common\DbSession.cs:行号 227
   --- 内部异常堆栈跟踪的结尾 ---
   在 XCode.DataAccessLayer.DbSession.BeginTransaction() 位置 C:\X\Src\XCode\DataAccessLayer\Common\DbSession.cs:行号 234
   在 XCode.DataAccessLayer.DAL.BeginTransaction() 位置 C:\X\Src\XCode\DataAccessLayer\DAL_DbOperate.cs:行号 289
   在 XCode.Entity`1.Meta.BeginTrans() 位置 C:\X\Src\XCode\Entity\Entity_Meta.cs:行号 462
   在 XCode.Entity`1.DoAction(Func`1 func, Nullable`1 isnew) 位置 C:\X\Src\XCode\Entity\Entity.cs:行号 306
   在 XCode.Entity`1.Update() 位置 C:\X\Src\XCode\Entity\Entity.cs:行号 203
   在 XCode.Cache.SingleEntityCache`2.<>c__DisplayClass1c.<Clear>b__1b() 位置 C:\X\Src\XCode\Cache\SingleEntityCache.cs:行号 383
   在 XCode.Cache.CacheBase`1.InvokeFill(Func callback) 位置 C:\X\Src\XCode\Cache\CacheBase.cs:行号 41

#Software: .
#ProcessID: 528
#AppDomain: c5a66244-2-129931114341017263
#BaseDirectory: C:\DevelopMent\Bioinfo\BioinfoWebSite\
#Date: 2012-09-26
#Fields: Time ThreadID IsPoolThread ThreadName Message
13:37:14.725 10 W - NewLife.Core v3.8.2012.0803 Build 2012-09-25 12:03:50
13:37:14.741 10 W - 为NewLife.CommonEntity.IManageProvider配置注册YWSManageProvider，标识Identity=，优先级Priority=5！
13:37:16.379 10 W - NewLife.XCode v8.8.2012.0828 Build 2012-09-25 12:01:34
13:37:16.379 10 W - 一级缓存：关闭缓存
13:37:16.410 10 W - 更新实体缓存（第1次）：NewLife.YWS.Entities.Admin 原因：第一次 Administrator<>.FindByName(String name)<-.Login(String username,String password,Int32 hashTimes)
13:37:16.909 10 W - DropDefault(LastLogin)
13:37:16.956 10 W - 初始化NewLife.YWS.Entities.Admin数据
13:37:16.972 10 W - 开始检查连接[Common/MySql]的数据库架构……
13:37:17.034 10 W - [Common]的所有实体类（22个）：Sequence,GuidCategory,Administrator,Menu,Role,RoleMenu,Log,Area,User,Simple,SimpleTree,Setting,Statistics,UserProfile,Attachment,Category,Category,News,Messages,Setting,MyRole,Admin
13:37:17.034 10 W - [Common]需要检查架构的实体类（6个）：Category,News,Messages,Setting,MyRole,Admin
13:37:17.034 10 W - Common待检查表架构的实体个数：6
13:37:17.190 10 W - DropDefault(LastLogin)
13:37:17.221 10 W - 检查连接[Common/MySql]的数据库架构耗时00:00:00.2572204
13:37:17.252 10 W - 完成更新缓存（第1次）：NewLife.YWS.Entities.Admin
13:37:17.299 10 W - 清空实体缓存：NewLife.YWS.Entities.Admin 原因：修改数据后提交事务
13:37:17.330 10 W - 检查实体NewLife.CommonEntity.Log的数据表架构，模式：CheckTableWhenFirstUse
13:37:17.330 10 W - DropDefault(OccurTime)
13:37:17.330 10 W - AddDefault(OccurTime,)
13:37:17.330 10 W - 初始化NewLife.CommonEntity.Log数据
13:37:17.362 10 W - 更新实体缓存（第1次）：NewLife.CommonEntity.Menu 原因：第一次 Menu<>.GetCurrentMenu()<-.get_Current()
13:37:17.362 10 W - 检查实体NewLife.CommonEntity.Menu的数据表架构，模式：CheckTableWhenFirstUse
13:37:17.393 10 W - 初始化NewLife.CommonEntity.Menu数据
13:37:17.408 10 W - 完成更新缓存（第1次）：NewLife.CommonEntity.Menu
13:37:17.424 10 W - 更新实体缓存（第1次）：NewLife.YWS.Entities.MyRole 原因：第一次 Role<>.FindByID(Int32 id)<-
13:37:17.424 10 W - 初始化NewLife.YWS.Entities.MyRole数据
13:37:17.440 10 W - 检查实体NewLife.CommonEntity.RoleMenu的数据表架构，模式：CheckTableWhenFirstUse
13:37:17.440 10 W - 初始化NewLife.CommonEntity.RoleMenu数据
13:37:17.440 10 W - 如果某一个菜单对应的RoleMenu（角色菜单对应关系）为空或者只有一个，则授权第一个角色访问所有菜单！
13:37:17.455 10 W - 更新实体缓存（第1次）：NewLife.CommonEntity.RoleMenu 原因：第一次 RoleMenu<>.CheckNonePerssion(Int32 menuID)<-Role<,,>.InitData()
13:37:17.471 10 W - 完成更新缓存（第1次）：NewLife.CommonEntity.RoleMenu
13:37:17.486 10 W - 完成更新缓存（第1次）：NewLife.YWS.Entities.MyRole
13:37:19.167 13 W - 初始化Bioinfo.Entites.News数据
13:38:25.093 15 W - 检查实体NewLife.CommonEntity.Setting的数据表架构，模式：CheckTableWhenFirstUse
13:38:25.205 15 W - 初始化NewLife.CommonEntity.Setting数据
13:38:25.631 10 W - 更新实体缓存（第2次）：NewLife.CommonEntity.Menu 原因：60秒过期 Entity<>.FindWithCache(String name,Object value)<-Entity<>.EntityOperate.FindWithCache(String name,Object value)
13:38:25.672 10 W - 完成更新缓存（第2次）：NewLife.CommonEntity.Menu
13:40:07.765 11 W - 更新实体缓存（第2次）：NewLife.YWS.Entities.Admin 原因：60秒过期 Administrator<>.FindByName(String name)<-.Login(String username,String password,Int32 hashTimes)
13:40:07.781 11 W - 完成更新缓存（第2次）：NewLife.YWS.Entities.Admin
13:40:07.796 11 W - 清空实体缓存：NewLife.YWS.Entities.Admin 原因：修改数据后提交事务
13:40:07.846 10 W - 更新实体缓存（第2次）：NewLife.YWS.Entities.MyRole 原因：60秒过期 Role<>.FindByID(Int32 id)<-
13:40:07.856 10 W - 完成更新缓存（第2次）：NewLife.YWS.Entities.MyRole
13:40:07.856 10 W - 更新实体缓存（第2次）：NewLife.CommonEntity.RoleMenu 原因：60秒过期 RoleMenu<>.FindAllByRoleID(Int32 roleID)<-
13:40:07.856 10 W - 完成更新缓存（第2次）：NewLife.CommonEntity.RoleMenu
13:40:07.856 10 W - 更新实体缓存（第3次）：NewLife.CommonEntity.Menu 原因：60秒过期 Menu<>.FindByID(Int32 id)<-
13:40:07.866 10 W - 完成更新缓存（第3次）：NewLife.CommonEntity.Menu
13:41:47.455 11 W - 更新实体缓存（第4次）：NewLife.CommonEntity.Menu 原因：60秒过期 Menu<>.GetCurrentMenu()<-.get_Current()
13:41:47.470 11 W - 完成更新缓存（第4次）：NewLife.CommonEntity.Menu
13:41:47.470 11 W - 初始化Bioinfo.Entites.Setting数据
13:41:47.502 11 W - 初始化Bioinfo.Entites.Category数据
13:41:47.502 11 W - 更新实体缓存（第1次）：Bioinfo.Entites.Category 原因：第一次 Category.FindById(Int32 id)<-Setting.get_Category()
13:41:47.502 11 W - 完成更新缓存（第1次）：Bioinfo.Entites.Category
13:41:50.138 11 W - 更新实体缓存（第3次）：NewLife.YWS.Entities.MyRole 原因：60秒过期 Role<>.FindByID(Int32 id)<-
13:41:50.140 11 W - 完成更新缓存（第3次）：NewLife.YWS.Entities.MyRole
13:42:10.117 12 W - 初始化Bioinfo.Entites.Messages数据
13:46:09.236 19 W - 更新实体缓存（第5次）：NewLife.CommonEntity.Menu 原因：60秒过期 Entity<>.FindWithCache(String name,Object value)<-Entity<>.EntityOperate.FindWithCache(String name,Object value)
13:46:09.242 19 W - 完成更新缓存（第5次）：NewLife.CommonEntity.Menu
13:46:40.607 11 W - 更新实体缓存（第2次）：Bioinfo.Entites.Category 原因：60秒过期 Category.FindById(Int32 id)<-News.get_Category()
13:46:40.610 11 W - 完成更新缓存（第2次）：Bioinfo.Entites.Category
13:48:13.363 20 W - 实体缓存<Menu>总次数201，一级命中196（97.51%）
13:48:13.364 20 W - 更新实体缓存（第6次）：NewLife.CommonEntity.Menu 原因：60秒过期 Menu<>.GetCurrentMenu()<-.get_Current()
13:48:13.368 20 W - 完成更新缓存（第6次）：NewLife.CommonEntity.Menu
13:50:07.983 2 N - 清空单对象缓存：NewLife.CommonEntity.Setting

#Software: .
#ProcessID: 4140
#AppDomain: c5a66244-1-129931148526019079
#BaseDirectory: C:\DevelopMent\Bioinfo\BioinfoWebSite\
#Date: 2012-09-26
#Fields: Time ThreadID IsPoolThread ThreadName Message
14:34:13.366 4 W - NewLife.Core v3.8.2012.0803 Build 2012-09-25 12:03:50
14:34:13.366 4 W - 为NewLife.CommonEntity.IManageProvider配置注册YWSManageProvider，标识Identity=，优先级Priority=5！
14:34:15.160 8 W - NewLife.XCode v8.8.2012.0828 Build 2012-09-25 12:01:34
14:34:15.160 8 W - 检查实体NewLife.CommonEntity.Setting的数据表架构，模式：CheckTableWhenFirstUse
14:34:15.300 8 W - 初始化NewLife.CommonEntity.Setting数据
14:34:15.316 8 W - 开始检查连接[Common/MySql]的数据库架构……
14:34:15.394 8 W - [Common]的所有实体类（18个）：Sequence,GuidCategory,Administrator,Menu,Role,RoleMenu,Log,Area,User,Simple,SimpleTree,Setting,Statistics,UserProfile,Attachment,Category,MyRole,Admin
14:34:15.394 8 W - [Common]需要检查架构的实体类（2个）：MyRole,Admin
14:34:15.394 8 W - Common待检查表架构的实体个数：2
14:34:15.472 4 Y - DropDefault(LastLogin)
14:34:15.581 8 W - DropDefault(LastLogin)
14:34:15.659 8 W - 检查连接[Common/MySql]的数据库架构耗时00:00:00.3428027
14:34:15.659 4 Y - 初始化NewLife.YWS.Entities.Admin数据
14:34:15.659 8 W - 一级缓存：关闭缓存
14:34:18.389 4 W - 更新实体缓存（第1次）：NewLife.YWS.Entities.Admin 原因：第一次 Administrator<>.FindByName(String name)<-.Login(String username,String password,Int32 hashTimes)
14:34:18.389 4 W - 完成更新缓存（第1次）：NewLife.YWS.Entities.Admin
14:34:18.420 4 W - 清空实体缓存：NewLife.YWS.Entities.Admin 原因：修改数据后提交事务
14:34:18.461 4 W - 检查实体NewLife.CommonEntity.Log的数据表架构，模式：CheckTableWhenFirstUse
14:34:18.461 4 W - DropDefault(OccurTime)
14:34:18.461 4 W - AddDefault(OccurTime,)
14:34:18.461 4 W - 初始化NewLife.CommonEntity.Log数据
14:34:18.521 8 W - 更新实体缓存（第1次）：NewLife.YWS.Entities.MyRole 原因：第一次 Role<>.FindByID(Int32 id)<-
14:34:18.521 8 W - 初始化NewLife.YWS.Entities.MyRole数据
14:34:18.531 8 W - 检查实体NewLife.CommonEntity.RoleMenu的数据表架构，模式：CheckTableWhenFirstUse
14:34:18.541 8 W - 初始化NewLife.CommonEntity.RoleMenu数据
14:34:18.541 8 W - 如果某一个菜单对应的RoleMenu（角色菜单对应关系）为空或者只有一个，则授权第一个角色访问所有菜单！
14:34:18.551 8 W - 更新实体缓存（第1次）：NewLife.CommonEntity.Menu 原因：第一次 EntityTree<,>.FindAllByParent(EntityTree<,>.TKey parentKey)<-.FindChilds()
14:34:18.551 8 W - 检查实体NewLife.CommonEntity.Menu的数据表架构，模式：CheckTableWhenFirstUse
14:34:18.577 8 W - 初始化NewLife.CommonEntity.Menu数据
14:34:18.593 8 W - 完成更新缓存（第1次）：NewLife.CommonEntity.Menu
14:34:18.608 8 W - 更新实体缓存（第1次）：NewLife.CommonEntity.RoleMenu 原因：第一次 RoleMenu<>.CheckNonePerssion(Int32 menuID)<-Role<,,>.InitData()
14:34:18.608 8 W - 完成更新缓存（第1次）：NewLife.CommonEntity.RoleMenu
14:34:18.624 8 W - 完成更新缓存（第1次）：NewLife.YWS.Entities.MyRole
14:34:21.873 8 W - 初始化Bioinfo.Entites.Category数据
14:34:22.677 12 W - 初始化Bioinfo.Entites.Setting数据
14:34:22.707 12 W - 更新实体缓存（第1次）：Bioinfo.Entites.Category 原因：第一次 Category.FindById(Int32 id)<-Setting.get_Category()
14:34:22.717 12 W - 完成更新缓存（第1次）：Bioinfo.Entites.Category
14:35:40.868 11 W - 更新实体缓存（第2次）：NewLife.CommonEntity.Menu 原因：60秒过期 Menu<>.GetCurrentMenu()<-.get_Current()
14:35:40.884 11 W - 完成更新缓存（第2次）：NewLife.CommonEntity.Menu
14:35:56.816 11 W - 初始化Bioinfo.Entites.News数据
14:35:56.836 11 W - 更新实体缓存（第2次）：Bioinfo.Entites.Category 原因：60秒过期 Category.FindById(Int32 id)<-News.get_Category()
14:35:56.836 11 W - 完成更新缓存（第2次）：Bioinfo.Entites.Category
14:43:06.541 8 W - 更新实体缓存（第2次）：NewLife.YWS.Entities.Admin 原因：60秒过期 Administrator<>.FindByName(String name)<-.Login(String username,String password,Int32 hashTimes)
14:43:06.557 8 W - 完成更新缓存（第2次）：NewLife.YWS.Entities.Admin
14:43:06.588 8 W - 清空实体缓存：NewLife.YWS.Entities.Admin 原因：修改数据后提交事务
14:43:06.621 11 W - 更新实体缓存（第2次）：NewLife.YWS.Entities.MyRole 原因：60秒过期 Role<>.FindByID(Int32 id)<-
14:43:06.624 11 W - 完成更新缓存（第2次）：NewLife.YWS.Entities.MyRole
14:43:06.625 11 W - 更新实体缓存（第2次）：NewLife.CommonEntity.RoleMenu 原因：60秒过期 RoleMenu<>.FindAllByRoleID(Int32 roleID)<-
14:43:06.628 11 W - 完成更新缓存（第2次）：NewLife.CommonEntity.RoleMenu
14:43:06.629 11 W - 更新实体缓存（第3次）：NewLife.CommonEntity.Menu 原因：60秒过期 Menu<>.FindByID(Int32 id)<-
14:43:06.629 11 W - 完成更新缓存（第3次）：NewLife.CommonEntity.Menu
14:43:10.427 16 W - 更新实体缓存（第3次）：Bioinfo.Entites.Category 原因：60秒过期 Category.FindById(Int32 id)<-News.get_Category()
14:43:10.427 16 W - 完成更新缓存（第3次）：Bioinfo.Entites.Category
14:46:25.404 7 W - 实体缓存<Menu>总次数151，一级命中148（98.01%）
14:46:25.404 7 W - 更新实体缓存（第4次）：NewLife.CommonEntity.Menu 原因：60秒过期 Menu<>.GetCurrentMenu()<-.get_Current()
14:46:25.420 7 W - 完成更新缓存（第4次）：NewLife.CommonEntity.Menu
14:46:27.159 17 W - 实体缓存<Category>总次数3
14:46:27.159 17 W - 更新实体缓存（第4次）：Bioinfo.Entites.Category 原因：60秒过期 Category.FindById(Int32 id)<-News.get_Category()
14:46:27.159 17 W - 完成更新缓存（第4次）：Bioinfo.Entites.Category
14:47:56.110 17 W - 更新实体缓存（第5次）：NewLife.CommonEntity.Menu 原因：60秒过期 Menu<>.GetCurrentMenu()<-.get_Current()
14:47:56.327 17 W - 完成更新缓存（第5次）：NewLife.CommonEntity.Menu
14:47:56.327 17 W - 更新实体缓存（第5次）：Bioinfo.Entites.Category 原因：60秒过期 Category.FindById(Int32 id)<-Setting.get_Category()
14:47:56.327 17 W - 完成更新缓存（第5次）：Bioinfo.Entites.Category
14:49:04.252 2 N - 清空单对象缓存：NewLife.CommonEntity.Setting

#Software: .
#ProcessID: 1152
#AppDomain: c5a66244-1-129931157562375981
#BaseDirectory: C:\DevelopMent\Bioinfo\BioinfoWebSite\
#Date: 2012-09-26
#Fields: Time ThreadID IsPoolThread ThreadName Message
14:49:17.001 4 W - NewLife.Core v3.8.2012.0803 Build 2012-09-25 12:03:50
14:49:17.001 4 W - 为NewLife.CommonEntity.IManageProvider配置注册YWSManageProvider，标识Identity=，优先级Priority=5！
14:49:17.485 4 W - NewLife.XCode v8.8.2012.0828 Build 2012-09-25 12:01:34
14:49:17.485 4 W - 开始检查连接[Common/MySql]的数据库架构……
14:49:17.579 4 W - [Common]的所有实体类（22个）：Sequence,GuidCategory,Administrator,Menu,Role,RoleMenu,Log,Area,User,Simple,SimpleTree,Setting,Statistics,UserProfile,Attachment,Category,Category,News,Messages,Setting,MyRole,Admin
14:49:17.579 4 W - [Common]需要检查架构的实体类（6个）：Category,News,Messages,Setting,MyRole,Admin
14:49:17.579 4 W - Common待检查表架构的实体个数：6
14:49:18.047 4 W - DropDefault(LastLogin)
14:49:18.078 4 W - 检查连接[Common/MySql]的数据库架构耗时00:00:00.5954543
14:49:18.109 4 W - 初始化Bioinfo.Entites.Setting数据
14:49:18.109 4 W - 一级缓存：关闭缓存
14:49:18.172 4 W - 更新实体缓存（第1次）：Bioinfo.Entites.Setting 原因：60秒过期 Setting.FindById(Int32 id)<-EntityHelper.GetName()
14:49:18.203 4 W - 完成更新缓存（第1次）：Bioinfo.Entites.Setting

#Software: .
#ProcessID: 5032
#AppDomain: c5a66244-1-129931159207368918
#BaseDirectory: C:\DevelopMent\Bioinfo\BioinfoWebSite\
#Date: 2012-09-26
#Fields: Time ThreadID IsPoolThread ThreadName Message
14:52:01.392 4 W - NewLife.Core v3.8.2012.0803 Build 2012-09-25 12:03:50
14:52:01.407 4 W - 为NewLife.CommonEntity.IManageProvider配置注册YWSManageProvider，标识Identity=，优先级Priority=5！
14:52:03.076 4 W - NewLife.XCode v8.8.2012.0828 Build 2012-09-25 12:01:34
14:52:03.076 4 W - 检查实体NewLife.CommonEntity.Setting的数据表架构，模式：CheckTableWhenFirstUse
14:52:03.217 4 W - 初始化NewLife.CommonEntity.Setting数据
14:52:03.217 4 W - 开始检查连接[Common/MySql]的数据库架构……
14:52:03.310 4 W - [Common]的所有实体类（18个）：Sequence,GuidCategory,Administrator,Menu,Role,RoleMenu,Log,Area,User,Simple,SimpleTree,Setting,Statistics,UserProfile,Attachment,Category,MyRole,Admin
14:52:03.310 4 W - [Common]需要检查架构的实体类（2个）：MyRole,Admin
14:52:03.310 4 W - Common待检查表架构的实体个数：2
14:52:03.388 9 Y - DropDefault(LastLogin)
14:52:03.544 4 W - DropDefault(LastLogin)
14:52:03.622 4 W - 检查连接[Common/MySql]的数据库架构耗时00:00:00.3995888
14:52:03.622 9 Y - 初始化NewLife.YWS.Entities.Admin数据
14:52:03.622 4 W - 一级缓存：关闭缓存
14:52:05.775 4 W - 更新实体缓存（第1次）：NewLife.YWS.Entities.Admin 原因：第一次 Administrator<>.FindByName(String name)<-.Login(String username,String password,Int32 hashTimes)
14:52:05.791 4 W - 完成更新缓存（第1次）：NewLife.YWS.Entities.Admin
14:52:05.822 4 W - 清空实体缓存：NewLife.YWS.Entities.Admin 原因：修改数据后提交事务
14:52:05.857 4 W - 检查实体NewLife.CommonEntity.Log的数据表架构，模式：CheckTableWhenFirstUse
14:52:05.858 4 W - DropDefault(OccurTime)
14:52:05.859 4 W - AddDefault(OccurTime,)
14:52:05.859 4 W - 初始化NewLife.CommonEntity.Log数据
14:52:05.901 9 W - 更新实体缓存（第1次）：NewLife.YWS.Entities.MyRole 原因：第一次 Role<>.FindByID(Int32 id)<-
14:52:05.901 9 W - 初始化NewLife.YWS.Entities.MyRole数据
14:52:05.921 9 W - 检查实体NewLife.CommonEntity.RoleMenu的数据表架构，模式：CheckTableWhenFirstUse
14:52:05.931 9 W - 初始化NewLife.CommonEntity.RoleMenu数据
14:52:05.931 9 W - 如果某一个菜单对应的RoleMenu（角色菜单对应关系）为空或者只有一个，则授权第一个角色访问所有菜单！
14:52:05.941 9 W - 更新实体缓存（第1次）：NewLife.CommonEntity.Menu 原因：第一次 EntityTree<,>.FindAllByParent(EntityTree<,>.TKey parentKey)<-.FindChilds()
14:52:05.941 9 W - 检查实体NewLife.CommonEntity.Menu的数据表架构，模式：CheckTableWhenFirstUse
14:52:05.982 9 W - 初始化NewLife.CommonEntity.Menu数据
14:52:05.998 9 W - 完成更新缓存（第1次）：NewLife.CommonEntity.Menu
14:52:05.998 9 W - 更新实体缓存（第1次）：NewLife.CommonEntity.RoleMenu 原因：第一次 RoleMenu<>.CheckNonePerssion(Int32 menuID)<-Role<,,>.InitData()
14:52:06.014 9 W - 完成更新缓存（第1次）：NewLife.CommonEntity.RoleMenu
14:52:06.029 9 W - 完成更新缓存（第1次）：NewLife.YWS.Entities.MyRole
14:52:09.802 11 W - 初始化Bioinfo.Entites.News数据
14:52:09.833 11 W - 初始化Bioinfo.Entites.Category数据
14:52:09.833 11 W - 更新实体缓存（第1次）：Bioinfo.Entites.Category 原因：第一次 Category.FindById(Int32 id)<-News.get_Category()
14:52:09.833 11 W - 完成更新缓存（第1次）：Bioinfo.Entites.Category
14:52:46.725 2 N - 清空单对象缓存：NewLife.CommonEntity.Setting
14:52:46.725 2 N - 错误的连接字符串：Server=192.168.1.47;Database=Bioinfodb2;Uid=root;Pwd=yrshabc123
14:52:46.740 2 N - XCode.Exceptions.XDbSessionException: Unable to connect to any of the specified MySQL hosts.[DB:Common/MySql] ---> MySql.Data.MySqlClient.MySqlException: Unable to connect to any of the specified MySQL hosts. ---> System.ApplicationException: 应用程序中的错误。
   在 System.Threading.ThreadPool.RegisterWaitForSingleObjectNative(WaitHandle waitHandle, Object state, UInt32 timeOutInterval, Boolean executeOnlyOnce, RegisteredWaitHandle registeredWaitHandle, StackCrawlMark& stackMark, Boolean compressStack)
   在 System.Threading.ThreadPool.RegisterWaitForSingleObject(WaitHandle waitObject, WaitOrTimerCallback callBack, Object state, UInt32 millisecondsTimeOutInterval, Boolean executeOnlyOnce, StackCrawlMark& stackMark, Boolean compressStack)
   在 System.Threading.ThreadPool.UnsafeRegisterWaitForSingleObject(WaitHandle waitObject, WaitOrTimerCallback callBack, Object state, Int32 millisecondsTimeOutInterval, Boolean executeOnlyOnce)
   在 System.Net.Sockets.Socket.SetAsyncEventSelect(AsyncEventBits blockEventBits)
   在 System.Net.Sockets.Socket.DoBeginConnect(EndPoint endPointSnapshot, SocketAddress socketAddress, LazyAsyncResult asyncResult)
   在 System.Net.Sockets.Socket.BeginConnect(EndPoint remoteEP, AsyncCallback callback, Object state)
   在 MySql.Data.Common.StreamCreator.CreateSocketStream(IPAddress ip, Boolean unix)
   在 MySql.Data.Common.StreamCreator.GetStream(UInt32 timeout)
   在 MySql.Data.MySqlClient.NativeDriver.Open()
   --- 内部异常堆栈跟踪的结尾 ---
   在 MySql.Data.MySqlClient.NativeDriver.Open()
   在 MySql.Data.MySqlClient.Driver.Open()
   在 MySql.Data.MySqlClient.Driver.Create(MySqlConnectionStringBuilder settings)
   在 MySql.Data.MySqlClient.MySqlPool.GetPooledConnection()
   在 MySql.Data.MySqlClient.MySqlPool.TryToGetDriver()
   在 MySql.Data.MySqlClient.MySqlPool.GetConnection()
   在 MySql.Data.MySqlClient.MySqlConnection.Open()
   在 XCode.DataAccessLayer.DbSession.Open()
   在 XCode.DataAccessLayer.DbSession.BeginTransaction()
   --- 内部异常堆栈跟踪的结尾 ---
   在 XCode.DataAccessLayer.DbSession.BeginTransaction()
   在 XCode.DataAccessLayer.DAL.BeginTransaction()
   在 XCode.Entity`1.Meta.BeginTrans()
   在 XCode.Entity`1.DoAction(Func`1 func, Nullable`1 isnew)
   在 XCode.Entity`1.Update()
   在 XCode.Cache.SingleEntityCache`2.<>c__DisplayClass1c.<Clear>b__1b()
   在 XCode.Cache.CacheBase`1.InvokeFill(Func callback)
