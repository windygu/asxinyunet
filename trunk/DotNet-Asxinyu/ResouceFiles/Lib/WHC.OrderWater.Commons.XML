<?xml version="1.0"?>
<doc>
    <assembly>
        <name>WHC.OrderWater.Commons</name>
    </assembly>
    <members>
        <member name="F:WHC.OrderWater.Commons.StringConstants.Dot">
            <summary></summary>
        </member>
        <member name="F:WHC.OrderWater.Commons.StringConstants.Underscore">
            <summary></summary>
        </member>
        <member name="F:WHC.OrderWater.Commons.StringConstants.CommaSpace">
            <summary></summary>
        </member>
        <member name="F:WHC.OrderWater.Commons.StringConstants.Comma">
            <summary></summary>
        </member>
        <member name="F:WHC.OrderWater.Commons.StringConstants.OpenParen">
            <summary></summary>
        </member>
        <member name="F:WHC.OrderWater.Commons.StringConstants.ClosedParen">
            <summary></summary>
        </member>
        <member name="F:WHC.OrderWater.Commons.StringConstants.SingleQuote">
            <summary></summary>
        </member>
        <member name="T:WHC.OrderWater.Commons.Threading.WorkItem">
            <summary>
            WorkItem that stores the supplied WaitCallback and user state object,
            as well as the current ExecutionContext
            </summary>
        </member>
        <member name="M:WHC.OrderWater.Commons.Threading.WorkItem.#ctor(System.Threading.WaitCallback,System.Object,System.Threading.ExecutionContext)">
            <summary>
            Initializes a new instance of the <see cref="T:WorkItem"/> class.
            </summary>
            <param name="callback">The wc.</param>
            <param name="state">The state.</param>
            <param name="context">The CTX.</param>
        </member>
        <member name="P:WHC.OrderWater.Commons.Threading.WorkItem.Callback">
            <summary>
            a callback method to be executed by a thread pool thread. 
            </summary>
        </member>
        <member name="P:WHC.OrderWater.Commons.Threading.WorkItem.State">
            <summary>
            An object containing information to be used by the callback method. 
            </summary>
        </member>
        <member name="P:WHC.OrderWater.Commons.Threading.WorkItem.Context">
            <summary>
            the execution context for the current thread
            </summary>
        </member>
        <member name="T:WHC.OrderWater.Commons.Threading.QueuedBackgroundWorker">
            <summary>
            A background worker with a work queue.
            </summary>
        </member>
        <member name="M:WHC.OrderWater.Commons.Threading.QueuedBackgroundWorker.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:WHC.OrderWater.Commons.Threading.QueuedBackgroundWorker"/> class.
            </summary>
        </member>
        <member name="M:WHC.OrderWater.Commons.Threading.QueuedBackgroundWorker.RunWorkerAsync(System.Object,System.Int32)">
            <summary>
            Starts processing a new background operation.
            </summary>
            <param name="argument">The argument of an asynchronous operation.</param>
            <param name="priority">A value between 0 and <see cref="P:WHC.OrderWater.Commons.Threading.QueuedBackgroundWorker.PriorityQueues"/> indicating the priority of this item.
            An item with a higher priority will be processed before items with lower priority.</param>
        </member>
        <member name="M:WHC.OrderWater.Commons.Threading.QueuedBackgroundWorker.RunWorkerAsync(System.Object)">
            <summary>
            Starts processing a new background operation.
            </summary>
            <param name="argument">The argument of an asynchronous operation.</param>
        </member>
        <member name="M:WHC.OrderWater.Commons.Threading.QueuedBackgroundWorker.RunWorkerAsync">
            <summary>
            Starts processing a new background operation.
            </summary>
        </member>
        <member name="M:WHC.OrderWater.Commons.Threading.QueuedBackgroundWorker.IsWorkQueueEmpty">
            <summary>
            Determines if the work queue is empty.
            </summary>
            <returns>true if the work queue is empty; otherwise false.</returns>
        </member>
        <member name="M:WHC.OrderWater.Commons.Threading.QueuedBackgroundWorker.AddWork(System.Object,System.Int32)">
            <summary>
            Adds the operation to the work queue.
            </summary>
            <param name="argument">The argument of an asynchronous operation.</param>
            <param name="priority">A value between 0 and <see cref="P:WHC.OrderWater.Commons.Threading.QueuedBackgroundWorker.PriorityQueues"/> indicating the priority of this item.
            An item with a higher priority will be processed before items with lower priority.</param>
        </member>
        <member name="M:WHC.OrderWater.Commons.Threading.QueuedBackgroundWorker.GetWork">
            <summary>
            Gets a pending operation from the work queue.
            </summary>
            <returns>A 2-tuple whose first component is the the pending operation with
            the highest priority from the qork queue and the second component is the
            priority.</returns>
        </member>
        <member name="M:WHC.OrderWater.Commons.Threading.QueuedBackgroundWorker.BuildWorkQueue">
            <summary>
            Rebuilds the work queue.
            </summary>
        </member>
        <member name="M:WHC.OrderWater.Commons.Threading.QueuedBackgroundWorker.ClearWorkQueue">
            <summary>
            Clears the work queue.
            </summary>
        </member>
        <member name="M:WHC.OrderWater.Commons.Threading.QueuedBackgroundWorker.ClearWorkQueue(System.Int32)">
            <summary>
            Clears the work queue with the given priority.
            </summary>
            <param name="priority">A value between 0 and <see cref="P:WHC.OrderWater.Commons.Threading.QueuedBackgroundWorker.PriorityQueues"/>
            indicating the priority queue to cancel.</param>
        </member>
        <member name="M:WHC.OrderWater.Commons.Threading.QueuedBackgroundWorker.CreateThreads">
            <summary>
            Creates the thread array.
            </summary>
        </member>
        <member name="M:WHC.OrderWater.Commons.Threading.QueuedBackgroundWorker.CancelAsync">
            <summary>
            Cancels all pending operations in all queues.
            </summary>
        </member>
        <member name="M:WHC.OrderWater.Commons.Threading.QueuedBackgroundWorker.CancelAsync(System.Int32)">
            <summary>
            Cancels all pending operations in the given queue.
            </summary>
            <param name="priority">A value between 0 and <see cref="P:WHC.OrderWater.Commons.Threading.QueuedBackgroundWorker.PriorityQueues"/>
            indicating the priority queue to cancel.</param>
        </member>
        <member name="M:WHC.OrderWater.Commons.Threading.QueuedBackgroundWorker.CancelAsync(System.Object)">
            <summary>
            Cancels processing the item with the given key.
            </summary>
            <param name="argument">The argument of an asynchronous operation.</param>
        </member>
        <member name="M:WHC.OrderWater.Commons.Threading.QueuedBackgroundWorker.RunWorkerCompletedCallback(System.Object)">
            <summary>
            Used to call <see cref="M:WHC.OrderWater.Commons.Threading.QueuedBackgroundWorker.OnRunWorkerCompleted(WHC.OrderWater.Commons.Threading.QueuedWorkerCompletedEventArgs)"/> by the synchronization context.
            </summary>
            <param name="arg">The argument.</param>
        </member>
        <member name="M:WHC.OrderWater.Commons.Threading.QueuedBackgroundWorker.OnRunWorkerCompleted(WHC.OrderWater.Commons.Threading.QueuedWorkerCompletedEventArgs)">
            <summary>
            Raises the RunWorkerCompleted event.
            </summary>
            <param name="e">A <see cref="T:WHC.OrderWater.Commons.Threading.QueuedWorkerCompletedEventArgs"/> that contains event data.</param>
        </member>
        <member name="M:WHC.OrderWater.Commons.Threading.QueuedBackgroundWorker.OnDoWork(WHC.OrderWater.Commons.Threading.QueuedWorkerDoWorkEventArgs)">
            <summary>
            Raises the DoWork event.
            </summary>
            <param name="e">A <see cref="T:WHC.OrderWater.Commons.Threading.QueuedWorkerDoWorkEventArgs"/> that contains event data.</param>
        </member>
        <member name="M:WHC.OrderWater.Commons.Threading.QueuedBackgroundWorker.GetApartmentState">
            <summary>
            Gets the apartment state of the worker thread.
            </summary>
        </member>
        <member name="M:WHC.OrderWater.Commons.Threading.QueuedBackgroundWorker.SetApartmentState(System.Threading.ApartmentState)">
            <summary>
            Sets the apartment state of the worker thread. The apartment state
            cannot be changed after any work is added to the work queue.
            </summary>
        </member>
        <member name="M:WHC.OrderWater.Commons.Threading.QueuedBackgroundWorker.Run">
            <summary>
            Used by the worker thread to process items.
            </summary>
        </member>
        <member name="M:WHC.OrderWater.Commons.Threading.QueuedBackgroundWorker.Dispose(System.Boolean)">
            <summary>
            Releases the unmanaged resources used by the <see cref="T:System.ComponentModel.Component"/>
            and optionally releases the managed resources.
            </summary>
            <param name="disposing">true to release both managed and unmanaged resources;
            false to release only unmanaged resources.</param>
        </member>
        <member name="P:WHC.OrderWater.Commons.Threading.QueuedBackgroundWorker.ProcessingMode">
            <summary>
            Represents the mode in which the work items are processed.
            Processing mode cannot be changed after any work is added to the work queue.
            </summary>
        </member>
        <member name="P:WHC.OrderWater.Commons.Threading.QueuedBackgroundWorker.PriorityQueues">
            <summary>
            Gets or sets the number of priority queues. Number of queues
            cannot be changed after any work is added to the work queue.
            </summary>
        </member>
        <member name="P:WHC.OrderWater.Commons.Threading.QueuedBackgroundWorker.Started">
            <summary>
            Determines whether the <see cref="T:WHC.OrderWater.Commons.Threading.QueuedBackgroundWorker"/> started working.
            </summary>
        </member>
        <member name="P:WHC.OrderWater.Commons.Threading.QueuedBackgroundWorker.IsBackground">
            <summary>
            Gets or sets a value indicating whether or not the worker thread is a background thread.
            </summary>
        </member>
        <member name="P:WHC.OrderWater.Commons.Threading.QueuedBackgroundWorker.Stopping">
            <summary>
            Determines whether the <see cref="T:WHC.OrderWater.Commons.Threading.QueuedBackgroundWorker"/> is being stopped.
            </summary>
        </member>
        <member name="P:WHC.OrderWater.Commons.Threading.QueuedBackgroundWorker.Threads">
            <summary>
            Gets or sets the number of worker threads. Number of threads
            cannot be changed after any work is added to the work queue.
            </summary>
        </member>
        <member name="E:WHC.OrderWater.Commons.Threading.QueuedBackgroundWorker.RunWorkerCompleted">
            <summary>
            Occurs when the background operation of an item has completed,
            has been canceled, or has raised an exception.
            </summary>
        </member>
        <member name="E:WHC.OrderWater.Commons.Threading.QueuedBackgroundWorker.DoWork">
            <summary>
            Occurs when <see cref="M:WHC.OrderWater.Commons.Threading.QueuedBackgroundWorker.RunWorkerAsync(System.Object,System.Int32)"/> is called.
            </summary>
        </member>
        <member name="T:WHC.OrderWater.Commons.Threading.Tuple">
            <summary>
            Represents a factory class for creating tuples.
            </summary>
        </member>
        <member name="M:WHC.OrderWater.Commons.Threading.Tuple.Create``1(``0)">
            <summary>
            Creates a new 1-tuple.
            </summary>
            <typeparam name="T1">The type of the only component of the tuple.</typeparam>
            <param name="item1">The value of the only component of the tuple.</param>
            <returns>A 1-tuple whose value is (<paramref name="item1"/>).</returns>
        </member>
        <member name="M:WHC.OrderWater.Commons.Threading.Tuple.Create``2(``0,``1)">
            <summary>
            Creates a new 2-tuple.
            </summary>
            <typeparam name="T1">The type of the first component of the tuple.</typeparam>
            <typeparam name="T2">The type of the second component of the tuple.</typeparam>
            <param name="item1">The value of the first component of the tuple.</param>
            <param name="item2">The value of the second component of the tuple.</param>
            <returns>A 2-tuple whose value is (<paramref name="item1"/>, <paramref name="item2"/>).</returns>
        </member>
        <member name="T:WHC.OrderWater.Commons.Threading.Tuple`1">
            <summary>
            Represents a tuple with one element.
            </summary>
        </member>
        <member name="M:WHC.OrderWater.Commons.Threading.Tuple`1.#ctor(`0)">
            <summary>
            Initializes a new instance of the <see cref="T:WHC.OrderWater.Commons.Threading.Tuple`1"/> class.
            </summary>
            <param name="item1">The value of the first component of the tuple.</param>
        </member>
        <member name="P:WHC.OrderWater.Commons.Threading.Tuple`1.Item1">
            <summary>
            Gets the value of the first component.
            </summary>
        </member>
        <member name="T:WHC.OrderWater.Commons.Threading.Tuple`2">
            <summary>
            Represents a tuple with two elements.
            </summary>
        </member>
        <member name="M:WHC.OrderWater.Commons.Threading.Tuple`2.#ctor(`0,`1)">
            <summary>
            Initializes a new instance of the <see cref="T:WHC.OrderWater.Commons.Threading.Tuple`2"/> class.
            </summary>
            <param name="item1">The value of the first component of the tuple.</param>
            <param name="item2">The value of the second component of the tuple.</param>
        </member>
        <member name="P:WHC.OrderWater.Commons.Threading.Tuple`2.Item2">
            <summary>
            Gets the value of the second component.
            </summary>
        </member>
        <member name="T:WHC.OrderWater.Commons.Threading.ProcessingMode">
            <summary>
            Represents the mode in which the work items of <see cref="T:WHC.OrderWater.Commons.Threading.QueuedBackgroundWorker"/> are processed.
            </summary>
        </member>
        <member name="F:WHC.OrderWater.Commons.Threading.ProcessingMode.FIFO">
            <summary>
            Items are processed in the order they are received.
            </summary>
        </member>
        <member name="F:WHC.OrderWater.Commons.Threading.ProcessingMode.LIFO">
            <summary>
            Items are processed in reverse order.
            </summary>
        </member>
        <member name="T:WHC.OrderWater.Commons.DGVCellDrawingEventArgs">
            <summary>
            Class for the ownerdraw event. Provide the caller with the cell data, the current
            graphics context and the location in which to draw the cell.
            </summary>
        </member>
        <member name="T:WHC.OrderWater.Commons.CellOwnerDrawEventHandler">
            <summary>
            Delegate for ownerdraw cells - allow the caller to provide drawing for the cell
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="T:WHC.OrderWater.Commons.Extensions">
            <summary>
            Hold Extension methods
            </summary>
        </member>
        <member name="M:WHC.OrderWater.Commons.Extensions.DrawImbeddedImage``1(System.Collections.Generic.IEnumerable{``0},System.Drawing.Graphics,System.Int32,System.Int32,System.Drawing.Printing.Margins)">
            <summary>
            Extension method to print all the "ImbeddedImages" in a provided list
            </summary>
            <typeparam name="?"></typeparam>
            <param name="list"></param>
            <param name="g"></param>
            <param name="pagewidth"></param>
            <param name="pageheight"></param>
            <param name="margins"></param>
        </member>
        <!-- 对于成员“T:WHC.OrderWater.Commons.DGVPrinter”忽略有格式错误的 XML 注释 -->
        <member name="F:WHC.OrderWater.Commons.DGVPrinter._Owner">
            <summary>
            provide an override for the print preview dialog "owner" field
            Note: Changed style for VS2005 compatibility
            </summary>
        </member>
        <member name="F:WHC.OrderWater.Commons.DGVPrinter._PrintPreviewZoom">
            <summary>
            provide an override for the print preview zoom setting
            Note: Changed style for VS2005 compatibility
            </summary>
        </member>
        <member name="F:WHC.OrderWater.Commons.DGVPrinter.printDialogSettings">
            <summary>
            expose settings for the PrintDialog displayed to the user
            </summary>
        </member>
        <member name="F:WHC.OrderWater.Commons.DGVPrinter.printerName">
            <summary>
            Set Printer Name
            </summary>
        </member>
        <member name="F:WHC.OrderWater.Commons.DGVPrinter.ppvIcon">
            <summary>
            Allow caller to set the upper-left corner icon used
            in the print preview dialog
            </summary>
        </member>
        <member name="F:WHC.OrderWater.Commons.DGVPrinter.printHeader">
            <summary>
            Flag to control whether or not we print the Page Header
            </summary>
        </member>
        <member name="F:WHC.OrderWater.Commons.DGVPrinter.printFooter">
            <summary>
            Flag to control whether or not we print the Page Footer
            </summary>
        </member>
        <member name="F:WHC.OrderWater.Commons.DGVPrinter.printColumnHeaders">
            <summary>
            Flag to control whether or not we print the Column Header line
            </summary>
        </member>
        <member name="F:WHC.OrderWater.Commons.DGVPrinter.printRowHeaders">
            <summary>
            Flag to control whether or not we print the Column Header line
            Defaults to False to match previous functionality
            </summary>
        </member>
        <member name="F:WHC.OrderWater.Commons.DGVPrinter.keepRowsTogether">
            <summary>
            Flag to control whether rows are printed whole or if partial
            rows should be printed to fill the bottom of the page. Turn this
            "Off" (i.e. false) to print cells/rows deeper than one page
            </summary>
        </member>
        <member name="F:WHC.OrderWater.Commons.DGVPrinter.title">
            <summary>
            Title for this report. Default is empty.
            </summary>
        </member>
        <member name="F:WHC.OrderWater.Commons.DGVPrinter.docName">
            <summary>
            Name of the document. Default is report title (can be empty)
            </summary>
        </member>
        <member name="F:WHC.OrderWater.Commons.DGVPrinter.titlefont">
            <summary>
            Font for the title. Default is Tahoma, 18pt.
            </summary>
        </member>
        <member name="F:WHC.OrderWater.Commons.DGVPrinter.titlecolor">
            <summary>
            Foreground color for the title. Default is Black
            </summary>
        </member>
        <member name="F:WHC.OrderWater.Commons.DGVPrinter.titleformat">
            <summary>
            Allow override of the header cell format object
            </summary>
        </member>
        <member name="F:WHC.OrderWater.Commons.DGVPrinter.titlespacing">
            <summary>
            Mandatory spacing between the grid and the footer
            </summary>
        </member>
        <member name="F:WHC.OrderWater.Commons.DGVPrinter.subtitle">
            <summary>
            SubTitle for this report. Default is empty.
            </summary>
        </member>
        <member name="F:WHC.OrderWater.Commons.DGVPrinter.subtitlefont">
            <summary>
            Font for the subtitle. Default is Tahoma, 12pt.
            </summary>
        </member>
        <member name="F:WHC.OrderWater.Commons.DGVPrinter.subtitlecolor">
            <summary>
            Foreground color for the subtitle. Default is Black
            </summary>
        </member>
        <member name="F:WHC.OrderWater.Commons.DGVPrinter.subtitleformat">
            <summary>
            Allow override of the header cell format object
            </summary>
        </member>
        <member name="F:WHC.OrderWater.Commons.DGVPrinter.subtitlespacing">
            <summary>
            Mandatory spacing between the grid and the footer
            </summary>
        </member>
        <member name="F:WHC.OrderWater.Commons.DGVPrinter.footer">
            <summary>
            footer for this report. Default is empty.
            </summary>
        </member>
        <member name="F:WHC.OrderWater.Commons.DGVPrinter.footerfont">
            <summary>
            Font for the footer. Default is Tahoma, 10pt.
            </summary>
        </member>
        <member name="F:WHC.OrderWater.Commons.DGVPrinter.footercolor">
            <summary>
            Foreground color for the footer. Default is Black
            </summary>
        </member>
        <member name="F:WHC.OrderWater.Commons.DGVPrinter.footerformat">
            <summary>
            Allow override of the header cell format object
            </summary>
        </member>
        <member name="F:WHC.OrderWater.Commons.DGVPrinter.footerspacing">
            <summary>
            Mandatory spacing between the grid and the footer
            </summary>
        </member>
        <member name="F:WHC.OrderWater.Commons.DGVPrinter.pageno">
            <summary>
            Include page number in the printout. Default is true.
            </summary>
        </member>
        <member name="F:WHC.OrderWater.Commons.DGVPrinter.pagenofont">
            <summary>
            Font for the page number, Default is Tahoma, 8pt.
            </summary>
        </member>
        <member name="F:WHC.OrderWater.Commons.DGVPrinter.pagenocolor">
            <summary>
            Text color (foreground) for the page number. Default is Black
            </summary>
        </member>
        <member name="F:WHC.OrderWater.Commons.DGVPrinter.pagenumberformat">
            <summary>
            Allow override of the header cell format object
            </summary>
        </member>
        <member name="F:WHC.OrderWater.Commons.DGVPrinter.pagenumberontop">
            <summary>
            Allow the user to select whether to have the page number at the top or bottom
            of the page. Default is false: page numbers on the bottom of the page
            </summary>
        </member>
        <member name="F:WHC.OrderWater.Commons.DGVPrinter.pagenumberonseparateline">
            <summary>
            Should the page number be printed on a separate line, or printed on the
            same line as the header / footer? Default is false;
            </summary>
        </member>
        <member name="F:WHC.OrderWater.Commons.DGVPrinter.totalpages">
            <summary>
            Show the total page number as n of total 
            </summary>
        </member>
        <member name="F:WHC.OrderWater.Commons.DGVPrinter.pageseparator">
            <summary>
            Text separating page number and total page number. Default is ' of '.
            </summary>
        </member>
        <member name="F:WHC.OrderWater.Commons.DGVPrinter.rowheadercellformat">
            <summary>
            Allow override of the row header cell format object
            </summary>
        </member>
        <member name="F:WHC.OrderWater.Commons.DGVPrinter.rowheadercelldefaulttext">
            <summary>
            Default value to show in the row header cell if no value is provided in the DataGridView.
            Defaults to one tab space
            </summary>
        </member>
        <member name="F:WHC.OrderWater.Commons.DGVPrinter.columnheaderstyles">
            <summary>
            Allow override of the header cell format object
            </summary>
        </member>
        <member name="F:WHC.OrderWater.Commons.DGVPrinter.columnheadercellformat">
            <summary>
            Allow override of the header cell format object
            </summary>
        </member>
        <member name="F:WHC.OrderWater.Commons.DGVPrinter.headercellalignment">
            <summary>
            Deprecated - use HeaderCellFormat
            Allow the user to override the header cell string alignment. Default value is 
            Alignment - Near; 
            </summary>
        </member>
        <member name="F:WHC.OrderWater.Commons.DGVPrinter.headercellformatflags">
            <summary>
            Deprecated - use HeaderCellFormat
            Allow the user to override the header cell string format flags. Default values
            are: FormatFlags - NoWrap, LineLimit, NoClip
            </summary>
        </member>
        <member name="F:WHC.OrderWater.Commons.DGVPrinter.cellformat">
            <summary>
            Allow override of the cell printing format
            </summary>
        </member>
        <member name="F:WHC.OrderWater.Commons.DGVPrinter.cellalignment">
            <summary>
            Deprecated - use GetCellFormat
            Allow the user to override the cell string alignment. Default value is 
            Alignment - Near; 
            </summary>
        </member>
        <member name="F:WHC.OrderWater.Commons.DGVPrinter.cellformatflags">
            <summary>
            Deprecated - use GetCellFormat
            Allow the user to override the cell string format flags. Default values
            are: FormatFlags - NoWrap, LineLimit, NoClip
            </summary>
        </member>
        <member name="F:WHC.OrderWater.Commons.DGVPrinter.colwidthsoverride">
            <summary>
            allow the user to override the column width calcs with their own defaults
            </summary>
        </member>
        <member name="F:WHC.OrderWater.Commons.DGVPrinter.colstyles">
            <summary>
            Allow per column style overrides
            </summary>
        </member>
        <member name="F:WHC.OrderWater.Commons.DGVPrinter.porportionalcolumns">
            <summary>
            Spread the columns porportionally accross the page. Default is false.
            </summary>
        </member>
        <member name="F:WHC.OrderWater.Commons.DGVPrinter.tablealignment">
            <summary>
            Center the table on the page. 
            </summary>
        </member>
        <member name="M:WHC.OrderWater.Commons.DGVPrinter.PreviewDisplayWidth">
            <summary>
            calculate the print preview window width to show the entire page
            </summary>
            <returns></returns>
        </member>
        <member name="M:WHC.OrderWater.Commons.DGVPrinter.PreviewDisplayHeight">
            <summary>
            calculate the print preview window height to show the entire page
            </summary>
            <returns></returns>
        </member>
        <member name="M:WHC.OrderWater.Commons.DGVPrinter.OnCellOwnerDraw(WHC.OrderWater.Commons.DGVCellDrawingEventArgs)">
            <summary>
            Invoke any provided cell owner draw routines
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:WHC.OrderWater.Commons.DGVPrinter.#ctor">
            <summary>
            Constructor for DGVPrinter
            </summary>
        </member>
        <member name="M:WHC.OrderWater.Commons.DGVPrinter.PrintDataGridView(System.Windows.Forms.DataGridView)">
            <summary>
            Start the printing process, print to a printer.
            </summary>
            <param name="dgv">The DataGridView to print</param>
            NOTE: Any changes to this method also need to be done in PrintPreviewDataGridView
        </member>
        <member name="M:WHC.OrderWater.Commons.DGVPrinter.PrintPreviewDataGridView(System.Windows.Forms.DataGridView)">
            <summary>
            Start the printing process, print to a print preview dialog
            </summary>
            <param name="dgv">The DataGridView to print</param>
            NOTE: Any changes to this method also need to be done in PrintDataGridView
        </member>
        <member name="M:WHC.OrderWater.Commons.DGVPrinter.DisplayPrintDialog">
            <summary>
            Display a printdialog and return the result. Either this method or 
            the equivalent must be done prior to calling either of the PrintNoDisplay
            or PrintPreviewNoDisplay methods.
            </summary>
            <returns></returns>
        </member>
        <member name="M:WHC.OrderWater.Commons.DGVPrinter.PrintNoDisplay(System.Windows.Forms.DataGridView)">
            <summary>
            Print the provided grid view. Either DisplayPrintDialog() or it's equivalent
            setup must be completed prior to calling this routine
            </summary>
            <param name="dgv"></param>
        </member>
        <member name="M:WHC.OrderWater.Commons.DGVPrinter.PrintPreviewNoDisplay(System.Windows.Forms.DataGridView)">
            <summary>
            Preview the provided grid view. Either DisplayPrintDialog() or it's equivalent
            setup must be completed prior to calling this routine
            </summary>
            <param name="dgv"></param>
        </member>
        <member name="M:WHC.OrderWater.Commons.DGVPrinter.printDoc_BeginPrint(System.Object,System.Drawing.Printing.PrintEventArgs)">
            <summary>
            BeginPrint Event Handler
            Set values at start of print run
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:WHC.OrderWater.Commons.DGVPrinter.printDoc_PrintPage(System.Object,System.Drawing.Printing.PrintPageEventArgs)">
            <summary>
            PrintPage event handler. This routine prints one page. It will
            skip non-printable pages if the user selected the "some pages" option
            on the print dialog.
            </summary>
            <param name="sender">default object from windows</param>
            <param name="e">Event info from Windows about the printing</param>
        </member>
        <member name="M:WHC.OrderWater.Commons.DGVPrinter.SetupPrint">
            <summary>
            Set up the print job. Save information from print dialog
            and print document for easy access. Also sets up the rows
            and columns that will be printed. At this point, we're 
            collecting all columns in colstoprint. This will be broken
            up into pagesets later on 
            </summary>
        </member>
        <member name="M:WHC.OrderWater.Commons.DGVPrinter.buildstringformat(System.Drawing.StringFormat@,System.Windows.Forms.DataGridViewCellStyle,System.Drawing.StringAlignment,System.Drawing.StringAlignment,System.Drawing.StringFormatFlags,System.Drawing.StringTrimming)">
            <summary>
            Centralize the string format settings. Build a string format object
            using passed in settings, (allowing a user override of a single setting)
            and get the alignment from the cell control style.
            </summary>
            <param name="format">String format, ref parameter with return settings</param>
            <param name="controlstyle">DataGridView style to apply (if available)</param>
            <param name="alignment">Override text Alignment</param>
            <param name="linealignment">Override line alignment</param>
            <param name="flags">String format flags</param>
            <param name="trim">Override string trimming flags</param>
            <returns></returns>
        </member>
        <member name="M:WHC.OrderWater.Commons.DGVPrinter.measureprintarea(System.Drawing.Graphics)">
            <summary>
            Scan all the rows and columns to be printed and calculate the 
            overall individual column width (based on largest column value), 
            the header sizes, and determine all the row heights.
            </summary>
            <param name="g">The graphics context for all measurements</param>
        </member>
        <member name="M:WHC.OrderWater.Commons.DGVPrinter.AdjustPageSets(System.Drawing.Graphics,WHC.OrderWater.Commons.DGVPrinter.PageDef)">
            <summary>
            Adjust column widths for fixed and porportional columns, set the 
            margins to enforce the selected tablealignment.
            </summary>
            <param name="g">The graphics context for all measurements</param>
            <param name="pageset">The pageset to adjust</param>
        </member>
        <member name="M:WHC.OrderWater.Commons.DGVPrinter.TotalPages">
            <summary>
            Count the number of pages to print
            </summary>
        </member>
        <member name="M:WHC.OrderWater.Commons.DGVPrinter.DetermineHasMorePages">
            <summary>
            Check for more pages. This is called at the end of printing a page set.
            If there's another page set to print, we return true.
            </summary>
        </member>
        <member name="M:WHC.OrderWater.Commons.DGVPrinter.PrintPage(System.Drawing.Graphics)">
            <summary>
            This routine prints one page. It will skip non-printable pages if the user 
            selected the "some pages" option on the print dialog. This is called during 
            the Print event.
            </summary>
            <param name="g">Graphics object to print to</param>
        </member>
        <member name="M:WHC.OrderWater.Commons.DGVPrinter.printsection(System.Drawing.Graphics,System.Single@,System.String,System.Drawing.Font,System.Drawing.Color,System.Drawing.StringFormat,System.Boolean,System.Drawing.Printing.Margins)">
            <summary>
            Print a header or footer section. Used for page numbers and titles
            </summary>
            <param name="g">Graphic context to print in</param>
            <param name="pos">Track vertical space used; 'y' location</param>
            <param name="text">String to print</param>
            <param name="font">Font to use for printing</param>
            <param name="color">Color to print in</param>
            <param name="format">String format for text</param>
            <param name="useroverride">True if the user overrode the alignment or flags</param>
            <param name="margins">The table's print margins</param>
        </member>
        <member name="M:WHC.OrderWater.Commons.DGVPrinter.printfooter(System.Drawing.Graphics,System.Single@,System.Drawing.Printing.Margins)">
            <summary>
            Print the footer. This handles the footer spacing, and printing the page number
            at the bottom of the page (if the page number is not in the header).
            </summary>
            <param name="g">Graphic context to print in</param>
            <param name="pos">Track vertical space used; 'y' location</param>
            <param name="margins">The table's print margins</param>
        </member>
        <member name="M:WHC.OrderWater.Commons.DGVPrinter.printcolumnheaders(System.Drawing.Graphics,System.Single@,WHC.OrderWater.Commons.DGVPrinter.PageDef)">
            <summary>
            Print the column headers. Most printing format info is retrieved from the 
            source DataGridView.
            </summary>
            <param name="g">Graphics Context to print within</param>
            <param name="pos">Track vertical space used; 'y' location</param>
            <param name="pageset">Current pageset - defines columns and margins</param>
        </member>
        <member name="M:WHC.OrderWater.Commons.DGVPrinter.printrow(System.Drawing.Graphics,System.Single,System.Windows.Forms.DataGridViewRow,WHC.OrderWater.Commons.DGVPrinter.PageDef,System.Single)">
            <summary>
            Print one row of the DataGridView. Most printing format info is retrieved
            from the DataGridView.
            </summary>
            <param name="g">Graphics Context to print within</param>
            <param name="pos">Track vertical space used; 'y' location</param>
            <param name="row">The row that will be printed</param>
            <param name="pageset">Current Pageset - defines columns and margins</param>
            <param name="startline">Line no. in row to start printing text at</param>
        </member>
        <member name="E:WHC.OrderWater.Commons.DGVPrinter.OwnerDraw">
            <summary>
            OwnerDraw Event declaration. Callers can subscribe to this event to override the 
            cell drawing.
            </summary>
        </member>
        <member name="P:WHC.OrderWater.Commons.DGVPrinter.PrintSettings">
            <summary>
            expose printer settings to allow access to calling program
            </summary>
        </member>
        <member name="P:WHC.OrderWater.Commons.DGVPrinter.printDocument">
            <summary>
            Allow access to the underlying print document
            </summary>
        </member>
        <member name="P:WHC.OrderWater.Commons.DGVPrinter.TitleAlignment">
            <summary>
            Allow the user to override the title string alignment. Default value is 
            Alignment - Near; 
            </summary>
        </member>
        <member name="P:WHC.OrderWater.Commons.DGVPrinter.TitleFormatFlags">
            <summary>
            Allow the user to override the title string format flags. Default values
            are: FormatFlags - NoWrap, LineLimit, NoClip
            </summary>
        </member>
        <member name="P:WHC.OrderWater.Commons.DGVPrinter.SubTitleAlignment">
            <summary>
            Allow the user to override the subtitle string alignment. Default value is 
            Alignment - Near; 
            </summary>
        </member>
        <member name="P:WHC.OrderWater.Commons.DGVPrinter.SubTitleFormatFlags">
            <summary>
            Allow the user to override the subtitle string format flags. Default values
            are: FormatFlags - NoWrap, LineLimit, NoClip
            </summary>
        </member>
        <member name="P:WHC.OrderWater.Commons.DGVPrinter.FooterAlignment">
            <summary>
            Allow the user to override the footer string alignment. Default value is 
            Alignment - Center; 
            </summary>
        </member>
        <member name="P:WHC.OrderWater.Commons.DGVPrinter.FooterFormatFlags">
            <summary>
            Allow the user to override the footer string format flags. Default values
            are: FormatFlags - NoWrap, LineLimit, NoClip
            </summary>
        </member>
        <member name="P:WHC.OrderWater.Commons.DGVPrinter.PageNumberAlignment">
            <summary>
            Allow the user to override the page number string alignment. Default value is 
            Alignment - Near; 
            </summary>
        </member>
        <member name="P:WHC.OrderWater.Commons.DGVPrinter.PageNumberFormatFlags">
            <summary>
            Allow the user to override the pagenumber string format flags. Default values
            are: FormatFlags - NoWrap, LineLimit, NoClip
            </summary>
        </member>
        <member name="P:WHC.OrderWater.Commons.DGVPrinter.PrintMargins">
            <summary>
            Page margins override. Default is (60, 60, 40, 40)
            </summary>
        </member>
        <member name="P:WHC.OrderWater.Commons.DGVPrinter.PageSettings">
            <summary>
            Expose the printdocument default page settings to the caller
            </summary>
        </member>
        <member name="T:WHC.OrderWater.Commons.DGVPrinter.RowHeightSetting">
            <summary>
            Change the default row height to either the height of the string or the size of 
            the cell. Added for image cell handling.
            </summary>
        </member>
        <member name="T:WHC.OrderWater.Commons.ByteImageConvertor">
            <summary>
            This class provides the utility method to the convertion between byte array and image.
            </summary>
        </member>
        <member name="M:WHC.OrderWater.Commons.ByteImageConvertor.ByteToImage(System.Byte[])">
            <summary>
            Converts the PO's byte array to VO's image.
            </summary>
            <param name="bytes">The byte array in PO.</param>
            <returns>The Image object.</returns>
        </member>
        <member name="M:WHC.OrderWater.Commons.ByteImageConvertor.ImageToByte(System.Drawing.Image)">
            <summary>
            Converts the VO's image member to PO's bytes.
            </summary>
            <param name="image">The Image object in VO.</param>
            <returns>The byte array.</returns>
        </member>
        <member name="T:WHC.OrderWater.Commons.Threading.Timer">
            <summary>
            This class is a timer that performs some tasks periodically.
            </summary>
        </member>
        <member name="F:WHC.OrderWater.Commons.Threading.Timer._taskTimer">
            <summary>
            This timer is used to perfom the task at spesified intervals.
            </summary>
        </member>
        <member name="F:WHC.OrderWater.Commons.Threading.Timer._running">
            <summary>
            Indicates that whether timer is running or stopped.
            </summary>
        </member>
        <member name="F:WHC.OrderWater.Commons.Threading.Timer._performingTasks">
            <summary>
            Indicates that whether performing the task or _taskTimer is in sleep mode.
            This field is used to wait executing tasks when stopping Timer.
            </summary>
        </member>
        <member name="M:WHC.OrderWater.Commons.Threading.Timer.#ctor(System.Int32)">
            <summary>
            Creates a new Timer.
            </summary>
            <param name="period">Task period of timer (as milliseconds)</param>
        </member>
        <member name="M:WHC.OrderWater.Commons.Threading.Timer.#ctor(System.Int32,System.Boolean)">
            <summary>
            Creates a new Timer.
            </summary>
            <param name="period">Task period of timer (as milliseconds)</param>
            <param name="runOnStart">Indicates whether timer raises Elapsed event on Start method of Timer for once</param>
        </member>
        <member name="M:WHC.OrderWater.Commons.Threading.Timer.Start">
            <summary>
            Starts the timer.
            </summary>
        </member>
        <member name="M:WHC.OrderWater.Commons.Threading.Timer.Stop">
            <summary>
            Stops the timer.
            </summary>
        </member>
        <member name="M:WHC.OrderWater.Commons.Threading.Timer.WaitToStop">
            <summary>
            Waits the service to stop.
            </summary>
        </member>
        <member name="M:WHC.OrderWater.Commons.Threading.Timer.TimerCallBack(System.Object)">
            <summary>
            This method is called by _taskTimer.
            </summary>
            <param name="state">Not used argument</param>
        </member>
        <member name="E:WHC.OrderWater.Commons.Threading.Timer.Elapsed">
            <summary>
            This event is raised periodically according to Period of Timer.
            </summary>
        </member>
        <member name="P:WHC.OrderWater.Commons.Threading.Timer.Period">
            <summary>
            Task period of timer (as milliseconds).
            </summary>
        </member>
        <member name="P:WHC.OrderWater.Commons.Threading.Timer.RunOnStart">
            <summary>
            Indicates whether timer raises Elapsed event on Start method of Timer for once.
            Default: False.
            </summary>
        </member>
        <member name="M:WHC.OrderWater.Commons.ProxyHelper.SetIESupportWap">
            <summary>
            让IE支持WAP
            </summary>
        </member>
        <member name="M:WHC.OrderWater.Commons.ProxyHelper.SetIEProxy(System.String,System.Int32)">
            <summary>
            设置代理
            </summary>
            <param name="ProxyServer"></param>
            <param name="EnableProxy"></param>
            <returns></returns>
        </member>
        <member name="M:WHC.OrderWater.Commons.ProxyHelper.TestProxy(WHC.OrderWater.Commons.ProxySettingEntity,WHC.OrderWater.Commons.TestEntity)">
            <summary>
            测试代理配置
            </summary>
            <param name="setting">代理信息</param>
        </member>
        <member name="M:WHC.OrderWater.Commons.ProxyHelper.SetProxySetting(System.Net.WebRequest,WHC.OrderWater.Commons.ProxySettingEntity)">
            <summary>
            代理设置
            </summary>
            <param name="request"></param>
        </member>
        <member name="P:WHC.OrderWater.Commons.TestEntity.TestUrl">
            <summary>
            测试网站地址
            </summary>
        </member>
        <member name="P:WHC.OrderWater.Commons.TestEntity.TestWebTitle">
            <summary>
            测试网站Title
            </summary>
        </member>
        <member name="T:WHC.OrderWater.Commons.ProxySettingEntity">
            <summary>
            代理设置
            </summary>
        </member>
        <member name="P:WHC.OrderWater.Commons.ProxySettingEntity.Ip">
            <summary>
            代理服务器IP
            </summary>
        </member>
        <member name="P:WHC.OrderWater.Commons.ProxySettingEntity.Port">
            <summary>
            代理服务器端口
            </summary>
        </member>
        <member name="P:WHC.OrderWater.Commons.ProxySettingEntity.UserName">
            <summary>
            代理用户名
            </summary>
        </member>
        <member name="P:WHC.OrderWater.Commons.ProxySettingEntity.Password">
            <summary>
            代理密码
            </summary>
        </member>
        <member name="T:WHC.OrderWater.Commons.LogHelper">
            <summary>
            Log4Net日志记录辅助类
            </summary>
        </member>
        <member name="T:WHC.OrderWater.Commons.LogTextHelper">
            <summary>
            文本日志记录辅助类
            </summary>
        </member>
        <member name="T:WHC.OrderWater.Commons.CommandArgs">
            <summary>
            Contains the parsed command line arguments.  This consists of two
            lists, one of argument pairs, and one of stand-alone arguments.
            </summary>
        </member>
        <member name="P:WHC.OrderWater.Commons.CommandArgs.ArgPairs">
            <summary>
            Returns the dictionary of argument/value pairs.  
            </summary>
        </member>
        <member name="P:WHC.OrderWater.Commons.CommandArgs.Params">
            <summary>
            Returns the list of stand-alone parameters.
            </summary>
        </member>
        <member name="T:WHC.OrderWater.Commons.CommandLine">
            <summary>
            Implements command line parsing
            </summary>
        </member>
        <member name="M:WHC.OrderWater.Commons.CommandLine.Parse(System.String[])">
            <summary>
            Parses the passed command line arguments and returns the result
            in a CommandArgs object.
            </summary>
            The command line is assumed to be in the format:
            
                CMD [param] [[-|--|\]&lt;arg&gt;[[=]&lt;value&gt;]] [param]
            
            Basically, stand-alone parameters can appear anywhere on the command line.
            Arguments are defined as key/value pairs. The argument key must begin
            with a '-', '--', or '\'.  Between the argument and the value must be at
            least one space or a single '='.  Extra spaces are ignored.  Arguments MAY
            be followed by a value or, if no value supplied, the string 'true' is used.
            You must enclose argument values in quotes if they contain a space, otherwise
            they will not parse correctly.
            
            Example command lines are:
            
            cmd first -o outfile.txt --compile second \errors=errors.txt third fourth --test = "the value" fifth
            
            <param name="args">array of command line arguments</param>
            <returns>CommandArgs object containing the parsed command line</returns>
        </member>
        <member name="M:WHC.OrderWater.Commons.CommandLine.IsArg(System.String)">
            <summary>
            Returns True if the passed string is an argument (starts with 
            '-', '--', or '\'.)
            </summary>
            <param name="arg">the string token to test</param>
            <returns>true if the passed string is an argument, else false if a parameter</returns>
        </member>
        <member name="M:WHC.OrderWater.Commons.CommandLine.NextToken(System.String[],System.Int32@)">
            <summary>
            Returns the next string token in the argument list
            </summary>
            <param name="args">list of string tokens</param>
            <param name="ii">index of the current token in the array</param>
            <returns>the next string token, or null if no more tokens in array</returns>
        </member>
        <member name="T:WHC.OrderWater.Commons.ChineseCalendar">
            <summary>
            中国农历年处理类
            </summary>
        </member>
        <member name="F:WHC.OrderWater.Commons.ChineseCalendar.cCalendar">
            <summary>
            实例化一个  ChineseLunisolarCalendar
            </summary>
        </member>
        <member name="M:WHC.OrderWater.Commons.ChineseCalendar.GetChineseDateTimeNow">
            <summary>
            获取农历当前日期
            </summary>
            <returns></returns>
        </member>
        <member name="M:WHC.OrderWater.Commons.ChineseCalendar.GetChineseDateTime(System.DateTime)">
            <summary>
            根据公历获取农历日期
            </summary>
            <param name="datetime">公历日期</param>
            <returns></returns>
        </member>
        <member name="M:WHC.OrderWater.Commons.ChineseCalendar.GetShengXiao(System.DateTime)">
            <summary>
            返回生肖
            </summary>
            <param name="datetime">公历日期</param>
            <returns></returns>
        </member>
        <member name="F:WHC.OrderWater.Commons.ChineseCalendar.tiangan">
            <summary>
            十天干
            </summary>
        </member>
        <member name="F:WHC.OrderWater.Commons.ChineseCalendar.dizhi">
            <summary>
            十二地支
            </summary>
        </member>
        <member name="F:WHC.OrderWater.Commons.ChineseCalendar.shengxiao">
            <summary>
            十二生肖
            </summary>
        </member>
        <member name="M:WHC.OrderWater.Commons.ChineseCalendar.GetLunisolarYear(System.Int32)">
            <summary>
            返回农历天干地支年
            </summary>
            <param name="year">农历年</param>
            <returns></returns>
        </member>
        <member name="F:WHC.OrderWater.Commons.ChineseCalendar.months">
            <summary>
            农历月
            </summary>
        </member>
        <member name="M:WHC.OrderWater.Commons.ChineseCalendar.GetLunisolarMonth(System.Int32)">
            <summary>
            返回农历月
            </summary>
            <param name="month">月份</param>
            <returns></returns>
        </member>
        <member name="F:WHC.OrderWater.Commons.ChineseCalendar.days1">
             <summary>
            
             </summary>
        </member>
        <member name="F:WHC.OrderWater.Commons.ChineseCalendar.days">
            <summary>
            日
            </summary>
        </member>
        <member name="M:WHC.OrderWater.Commons.ChineseCalendar.GetLunisolarDay(System.Int32)">
            <summary>
            返回农历日
            </summary>
            <param name="day"></param>
            <returns></returns>
        </member>
        <member name="P:WHC.OrderWater.Commons.ChineseCalendar.Now">
            <summary>
            返回农历日期
            </summary>
        </member>
        <member name="P:WHC.OrderWater.Commons.ChineseCalendar.MaxSupportedDateTime">
            <summary>
            最大支持日期
            </summary>
        </member>
        <member name="P:WHC.OrderWater.Commons.ChineseCalendar.MinSupportedDateTime">
            <summary>
            最小支持日期
            </summary>
        </member>
        <member name="T:WHC.OrderWater.Commons.Camera">
            <summary>
            摄像头操作辅助类，包括开启、关闭、抓图、设置等功能
            </summary>
        </member>
        <member name="M:WHC.OrderWater.Commons.Camera.CloseWebcam">
            <summary>
            关闭摄像头
            </summary>
        </member>
        <member name="M:WHC.OrderWater.Commons.Camera.StartWebCam">
            <summary>
            开启摄像头
            </summary>
        </member>
        <member name="M:WHC.OrderWater.Commons.Camera.GrabImage(System.String)">
            <summary>
            抓图到文件
            </summary>
            <param name="path"></param>
        </member>
        <member name="M:WHC.OrderWater.Commons.Camera.GrabImageToClipBoard">
            <summary>
            抓图到剪切板
            </summary>
            <returns></returns>
        </member>
        <member name="M:WHC.OrderWater.Commons.Camera.SetCaptureSource">
            <summary>
            弹出色彩设置对话框
            </summary>
        </member>
        <member name="M:WHC.OrderWater.Commons.Camera.SetCaptureFormat">
            <summary>
            弹出视频格式设置对话框
            </summary>
        </member>
        <member name="T:WHC.OrderWater.Commons.AviCapture">
            <summary>
            视频辅助类
            </summary>
        </member>
        <member name="M:WHC.OrderWater.Commons.ValidateUtil.GetStringLength(System.String)">
            <summary>
            返回字符串真实长度, 1个汉字长度为2
            </summary>
            <returns>字符长度</returns>
        </member>
        <member name="M:WHC.OrderWater.Commons.ValidateUtil.IsValidUserName(System.String)">
            <summary>
            检测用户名格式是否有效
            </summary>
            <param name="userName"></param>
            <returns></returns>
        </member>
        <member name="M:WHC.OrderWater.Commons.ValidateUtil.IsValidPassword(System.String)">
            <summary>
            密码有效性
            </summary>
            <param name="password"></param>
            <returns></returns>
        </member>
        <member name="M:WHC.OrderWater.Commons.ValidateUtil.IsValidInt(System.String)">
            <summary>
            int有效性
            </summary>
            <param name="val"></param>
            <returns></returns>
        </member>
        <member name="M:WHC.OrderWater.Commons.ValidateUtil.IsNumber(System.String)">
            <summary>
            是否数字字符串
            </summary>
            <param name="inputData">输入字符串</param>
            <returns></returns>
        </member>
        <member name="M:WHC.OrderWater.Commons.ValidateUtil.IsNumberSign(System.String)">
            <summary>
            是否数字字符串 可带正负号
            </summary>
            <param name="inputData">输入字符串</param>
            <returns></returns>
        </member>
        <member name="M:WHC.OrderWater.Commons.ValidateUtil.IsDecimal(System.String)">
            <summary>
            是否是浮点数
            </summary>
            <param name="inputData">输入字符串</param>
            <returns></returns>
        </member>
        <member name="M:WHC.OrderWater.Commons.ValidateUtil.IsDecimalSign(System.String)">
            <summary>
            是否是浮点数 可带正负号
            </summary>
            <param name="inputData">输入字符串</param>
            <returns></returns>
        </member>
        <member name="M:WHC.OrderWater.Commons.ValidateUtil.IsHasCHZN(System.String)">
            <summary>
            检测是否有中文字符
            </summary>
            <param name="inputData"></param>
            <returns></returns>
        </member>
        <member name="M:WHC.OrderWater.Commons.ValidateUtil.GetCHZNLength(System.String)">
            <summary> 
            检测含有中文字符串的实际长度 
            </summary> 
            <param name="str">字符串</param> 
        </member>
        <member name="M:WHC.OrderWater.Commons.ValidateUtil.IsIdCard(System.String)">
            <summary>
            验证身份证是否合法  15 和  18位两种
            </summary>
            <param name="idCard">要验证的身份证</param>
        </member>
        <member name="M:WHC.OrderWater.Commons.ValidateUtil.IsEmail(System.String)">
            <summary>
            是否是邮件地址
            </summary>
            <param name="inputData">输入字符串</param>
            <returns></returns>
        </member>
        <member name="M:WHC.OrderWater.Commons.ValidateUtil.IsValidZip(System.String)">
            <summary>
            邮编有效性
            </summary>
            <param name="zip"></param>
            <returns></returns>
        </member>
        <member name="M:WHC.OrderWater.Commons.ValidateUtil.IsValidPhone(System.String)">
            <summary>
            固定电话有效性
            </summary>
            <param name="phone"></param>
            <returns></returns>
        </member>
        <member name="M:WHC.OrderWater.Commons.ValidateUtil.IsValidMobile(System.String)">
            <summary>
            手机有效性
            </summary>
            <param name="strMobile"></param>
            <returns></returns>
        </member>
        <member name="M:WHC.OrderWater.Commons.ValidateUtil.IsValidPhoneAndMobile(System.String)">
            <summary>
            电话有效性（固话和手机 ）
            </summary>
            <param name="strVla"></param>
            <returns></returns>
        </member>
        <member name="M:WHC.OrderWater.Commons.ValidateUtil.IsValidURL(System.String)">
            <summary>
            Url有效性
            </summary>
            <param name="url"></param>
            <returns></returns>
        </member>
        <member name="M:WHC.OrderWater.Commons.ValidateUtil.IsValidIP(System.String)">
            <summary>
            IP有效性
            </summary>
            <param name="ip"></param>
            <returns></returns>
        </member>
        <member name="M:WHC.OrderWater.Commons.ValidateUtil.IsValidDomain(System.String)">
            <summary>
            domain 有效性
            </summary>
            <param name="host">域名</param>
            <returns></returns>
        </member>
        <member name="M:WHC.OrderWater.Commons.ValidateUtil.IsBase64String(System.String)">
            <summary>
            判断是否为base64字符串
            </summary>
            <param name="str"></param>
            <returns></returns>
        </member>
        <member name="M:WHC.OrderWater.Commons.ValidateUtil.IsGuid(System.String)">
            <summary>
            验证字符串是否是GUID
            </summary>
            <param name="guid">字符串</param>
            <returns></returns>
        </member>
        <member name="M:WHC.OrderWater.Commons.ValidateUtil.IsDate(System.String)">
            <summary>
            判断输入的字符是否为日期
            </summary>
            <param name="strValue"></param>
            <returns></returns>
        </member>
        <member name="M:WHC.OrderWater.Commons.ValidateUtil.IsDateHourMinute(System.String)">
            <summary>
            判断输入的字符是否为日期,如2004-07-12 14:25|||1900-01-01 00:00|||9999-12-31 23:59
            </summary>
            <param name="strValue"></param>
            <returns></returns>
        </member>
        <member name="M:WHC.OrderWater.Commons.ValidateUtil.CheckMathLength(System.String,System.Int32)">
            <summary>
            检查字符串最大长度，返回指定长度的串
            </summary>
            <param name="sqlInput">输入字符串</param>
            <param name="maxLength">最大长度</param>
            <returns></returns>			
        </member>
        <member name="M:WHC.OrderWater.Commons.ValidateUtil.Encode(System.String)">
            <summary>
            转换成 HTML code
            </summary>
            <param name="str">string</param>
            <returns>string</returns>
        </member>
        <member name="M:WHC.OrderWater.Commons.ValidateUtil.Decode(System.String)">
             <summary>
            解析html成 普通文本
             </summary>
             <param name="str">string</param>
             <returns>string</returns>
        </member>
        <member name="M:WHC.OrderWater.Commons.SQLInjectionHelper.ValidUrlPostData">
            <summary>
            获取Post的数据
            </summary>
        </member>
        <member name="M:WHC.OrderWater.Commons.SQLInjectionHelper.ValidUrlGetData">
            <summary>
            获取QueryString中的数据
            </summary>
        </member>
        <member name="M:WHC.OrderWater.Commons.SQLInjectionHelper.ValidData(System.String)">
            <summary>
            验证是否存在注入代码
            </summary>
            <param name="inputData"></param>
        </member>
        <member name="M:WHC.OrderWater.Commons.SQLInjectionHelper.GetRegexString">
            <summary>
            获取正则表达式
            </summary>
            <param name="queryConditions"></param>
            <returns></returns>
        </member>
        <member name="T:WHC.OrderWater.Commons.Serializer">
            <summary>
            Summary description for Serializer.
            </summary>
            
        </member>
        <member name="T:WHC.OrderWater.Commons.RegistryHelper">
            <summary>
            注册表操作辅助类
            </summary>
        </member>
        <member name="M:WHC.OrderWater.Commons.RegistryHelper.GetValue(System.String)">
            <summary>
            Gets the value by registry key. If the key does not exist, return empty string.
            </summary>
            <param name="key">registry key</param>
            <returns>Returns the value of the specified key.</returns>
        </member>
        <member name="M:WHC.OrderWater.Commons.RegistryHelper.GetValue(System.String,System.String)">
            <summary>
            Gets the value by registry key. If the key does not exist, return empty string.
            </summary>
            <param name="key">registry key</param>
            <returns>Returns the value of the specified key.</returns>
        </member>
        <member name="M:WHC.OrderWater.Commons.RegistryHelper.SaveValue(System.String,System.String)">
            <summary>
            Saves the key and the value to registry.
            </summary>
            <param name="key">registry key</param>
            <param name="value">the value of the key</param>
            <returns>Returns true if successful, otherwise return false.</returns>
        </member>
        <member name="M:WHC.OrderWater.Commons.RegistryHelper.SaveValue(System.String,System.String,System.String)">
            <summary>
            Saves the key and the value to registry.
            </summary>
            <param name="key">registry key</param>
            <param name="value">the value of the key</param>
            <returns>Returns true if successful, otherwise return false.</returns>
        </member>
        <member name="M:WHC.OrderWater.Commons.MyDateTime.GetTheDay(System.Nullable{System.Int32})">
            <summary>
            哪天
            </summary>
            <param name="days">7天前:-7 7天后:+7</param>
            <returns></returns>
        </member>
        <member name="M:WHC.OrderWater.Commons.MyDateTime.GetSunday(System.Nullable{System.Int32})">
            <summary>
            周日
            </summary>
            <param name="weeks">上周-1 下周+1 本周0</param>
            <returns></returns>
        </member>
        <member name="M:WHC.OrderWater.Commons.MyDateTime.GetSaturday(System.Nullable{System.Int32})">
            <summary>
            周六
            </summary>
            <param name="weeks">上周-1 下周+1 本周0</param>
            <returns></returns>
        </member>
        <member name="M:WHC.OrderWater.Commons.MyDateTime.GetFirstDayOfMonth(System.Nullable{System.Int32})">
            <summary>
            月第一天
            </summary>
            <param name="months">上月-1 本月0 下月1</param>
            <returns></returns>
        </member>
        <member name="M:WHC.OrderWater.Commons.MyDateTime.GetLastDayOfMonth(System.Nullable{System.Int32})">
            <summary>
            月最后一天
            </summary>
            <param name="months">上月0 本月1 下月2</param>
            <returns></returns>
        </member>
        <member name="M:WHC.OrderWater.Commons.MyDateTime.GetFirstDayOfYear(System.Nullable{System.Int32})">
            <summary>
            年度第一天
            </summary>
            <param name="years">上年度-1 下年度+1</param>
            <returns></returns>
        </member>
        <member name="M:WHC.OrderWater.Commons.MyDateTime.GetLastDayOfYear(System.Nullable{System.Int32})">
            <summary>
            年度最后一天
            </summary>
            <param name="years">上年度0 本年度1 下年度2</param>
            <returns></returns>
        </member>
        <member name="M:WHC.OrderWater.Commons.MyDateTime.GetFirstDayOfQuarter(System.Nullable{System.Int32})">
            <summary>
            季度第一天
            </summary>
            <param name="quarters">上季度-1 下季度+1</param>
            <returns></returns>
        </member>
        <member name="M:WHC.OrderWater.Commons.MyDateTime.GetLastDayOfQuarter(System.Nullable{System.Int32})">
            <summary>
            季度最后一天
            </summary>
            <param name="quarters">上季度0 本季度1 下季度2</param>
            <returns></returns>
        </member>
        <member name="M:WHC.OrderWater.Commons.MyDateTime.GetDayOfWeekCN">
            <summary>
            中文星期
            </summary>
            <returns></returns>
        </member>
        <member name="M:WHC.OrderWater.Commons.MyDateTime.GetDayOfWeekNum">
            <summary>
            获取星期数字形式,周一开始
            </summary>
            <returns></returns>
        </member>
        <member name="T:WHC.OrderWater.Commons.SearchCondition">
            <summary>
            查询条件组合辅助类
            </summary>
        </member>
        <member name="M:WHC.OrderWater.Commons.SearchCondition.AddCondition(System.String,System.Object,WHC.OrderWater.Commons.SqlOperator)">
            <summary>
            为查询添加条件
            <example>
            用法一：
            SearchCondition searchObj = new SearchCondition();
            searchObj.AddCondition("Test", 1, SqlOperator.NotEqual);
            searchObj.AddCondition("Test2", "Test2Value", SqlOperator.Like);
            string conditionSql = searchObj.BuildConditionSql();
            
            用法二：AddCondition函数可以串起来添加多个条件
            SearchCondition searchObj = new SearchCondition();
            searchObj.AddCondition("Test", 1, SqlOperator.NotEqual).AddCondition("Test2", "Test2Value", SqlOperator.Like);
            string conditionSql = searchObj.BuildConditionSql();
            </example>
            </summary>
            <param name="fielName">字段名称</param>
            <param name="fieldValue">字段值</param>
            <param name="sqlOperator">SqlOperator枚举类型</param>
            <returns>增加条件后的Hashtable</returns>
        </member>
        <member name="M:WHC.OrderWater.Commons.SearchCondition.AddCondition(System.String,System.Object,WHC.OrderWater.Commons.SqlOperator,System.Boolean)">
            <summary>
            为查询添加条件
            <example>
            用法一：
            SearchCondition searchObj = new SearchCondition();
            searchObj.AddCondition("Test", 1, SqlOperator.NotEqual, false);
            searchObj.AddCondition("Test2", "Test2Value", SqlOperator.Like, true);
            string conditionSql = searchObj.BuildConditionSql();
            
            用法二：AddCondition函数可以串起来添加多个条件
            SearchCondition searchObj = new SearchCondition();
            searchObj.AddCondition("Test", 1, SqlOperator.NotEqual, false).AddCondition("Test2", "Test2Value", SqlOperator.Like, true);
            string conditionSql = searchObj.BuildConditionSql();
            </example>
            </summary>
            <param name="fielName">字段名称</param>
            <param name="fieldValue">字段值</param>
            <param name="sqlOperator">SqlOperator枚举类型</param>
            <param name="excludeIfEmpty">如果字段为空或者Null则不作为查询条件</param>
            <returns></returns>
        </member>
        <member name="M:WHC.OrderWater.Commons.SearchCondition.AddCondition(System.String,System.Object,WHC.OrderWater.Commons.SqlOperator,System.Boolean,System.String)">
            <summary>
            将多个条件分组归类作为一个条件来查询，
            如需构造一个括号内的条件 ( Test = "AA1" OR Test = "AA2")
            </summary>
            <param name="fielName">字段名称</param>
            <param name="fieldValue">字段值</param>
            <param name="sqlOperator">SqlOperator枚举类型</param>
            <param name="excludeIfEmpty">如果字段为空或者Null则不作为查询条件</param>
            <param name="groupName">分组的名称，如需构造一个括号内的条件 ( Test = "AA1" OR Test = "AA2"), 定义一个组名集中条件</param>
            <returns></returns>
        </member>
        <member name="M:WHC.OrderWater.Commons.SearchCondition.BuildConditionSql(WHC.OrderWater.Commons.DatabaseType)">
            <summary>
            根据对象构造相关的条件语句（不使用参数），如返回的语句是:
            <![CDATA[
            Where (1=1)  AND Test4  <  'Value4' AND Test6  >=  'Value6' AND Test7  <=  'value7' AND Test  <>  '1' AND Test5  >  'Value5' AND Test2  Like  '%Value2%' AND Test3  =  'Value3'
            ]]>
            </summary>
            <returns></returns> 
        </member>
        <member name="M:WHC.OrderWater.Commons.SearchCondition.BuildGroupCondiction(WHC.OrderWater.Commons.DatabaseType)">
            <summary>
            建立分组条件
            </summary>
            <returns></returns>
        </member>
        <member name="M:WHC.OrderWater.Commons.SearchCondition.GetGroupNames">
            <summary>
            获取给定条件集合的组别对象集合
            </summary>
            <returns></returns>
        </member>
        <member name="M:WHC.OrderWater.Commons.SearchCondition.ConvertSqlOperator(WHC.OrderWater.Commons.SqlOperator)">
            <summary>
            转换枚举类型为对应的Sql语句操作符号
            </summary>
            <param name="sqlOperator">SqlOperator枚举对象</param>
            <returns><![CDATA[对应的Sql语句操作符号（如 ">" "<>" ">=")]]></returns>
        </member>
        <member name="M:WHC.OrderWater.Commons.SearchCondition.GetFieldDbType(System.Object)">
            <summary>
            根据传入对象的值类型获取其对应的DbType类型
            </summary>
            <param name="fieldValue">对象的值</param>
            <returns>DbType类型</returns>
        </member>
        <member name="M:WHC.OrderWater.Commons.SearchCondition.IsDate(System.String)">
            <summary>
            判断输入的字符是否为日期
            </summary>
            <param name="strValue"></param>
            <returns></returns>
        </member>
        <member name="M:WHC.OrderWater.Commons.SearchCondition.IsDateHourMinute(System.String)">
            <summary>
            判断输入的字符是否为日期,如2004-07-12 14:25|||1900-01-01 00:00|||9999-12-31 23:59
            </summary>
            <param name="strValue"></param>
            <returns></returns>
        </member>
        <member name="P:WHC.OrderWater.Commons.SearchCondition.ConditionTable">
            <summary>
            查询条件列表
            </summary>
        </member>
        <member name="T:WHC.OrderWater.Commons.StringUtil">
            <summary>
            Summary description for TextHelper.
            </summary>
        </member>
        <member name="M:WHC.OrderWater.Commons.StringUtil.RemovePrefix(System.String,System.String)">
            <summary>
            去除指定字符串前缀的算法
            </summary>
            <param name="content">待除去特定字符串的内容</param>
            <param name="prefixString">特定字符串列表(以逗号,分号,空格等标识)</param>
            <returns></returns>
        </member>
        <member name="M:WHC.OrderWater.Commons.UnicodeHelper.StringToUnicode(System.String)">
            <summary>
            将原始字串转换为unicode,格式为\u.\u.
            </summary>
            <param name="srcText"></param>
            <returns></returns>
        </member>
        <member name="M:WHC.OrderWater.Commons.UnicodeHelper.UnicodeToString(System.String)">
            <summary>
            将Unicode字串\u.\u.格式字串转换为原始字符串
            </summary>
            <param name="str"></param>
            <returns></returns>
        </member>
        <member name="M:WHC.OrderWater.Commons.UnicodeHelper.GB2Unicode(System.String)">
            <summary>
            GB2312转换成unicode编码 
            </summary>
            <param name="str"></param>
            <returns></returns>
        </member>
        <member name="M:WHC.OrderWater.Commons.UnicodeHelper.GetByte(System.Char)">
            <summary>
            得到单个字符的值
            </summary>
            <param name="ch"></param>
            <returns></returns>
        </member>
        <member name="M:WHC.OrderWater.Commons.UnicodeHelper.ConvertSingle(System.String)">
            <summary>
            转换一个字符，输入如"Π"中的"03a0"
            </summary>
            <param name="unicodeSingle"></param>
            <returns></returns>
        </member>
        <member name="M:WHC.OrderWater.Commons.UnicodeHelper.UtoGB(System.String)">
            <summary>
            unicode编码转换成GB2312汉字 
            </summary>
            <param name="str"></param>
            <returns></returns>
        </member>
        <member name="T:WHC.OrderWater.Commons.Threading.TargetInfo">
            <summary>
            Used internally to call delegate in Thread Pool
            </summary>
        </member>
        <member name="M:WHC.OrderWater.Commons.Threading.TargetInfo.#ctor(System.Delegate,System.Object[])">
            <summary>
            Initializes a new instance of the <see cref="T:WHC.OrderWater.Commons.Threading.TargetInfo"/> class.
            </summary>
            <param name="target">The target.</param>
            <param name="args">The args.</param>
        </member>
        <member name="T:WHC.OrderWater.Commons.Threading.QueueServer`1">
            <summary>
            提供一个队列的线程处理
            </summary>
            <typeparam name="T"></typeparam>
        </member>
        <member name="T:WHC.OrderWater.Commons.Threading.DisposableObject">
            <summary>
            Class that implements <see cref="T:System.IDisposable"/> to provide disposing 
            functions to inherited classes.
            </summary>
        </member>
        <member name="M:WHC.OrderWater.Commons.Threading.DisposableObject.Finalize">
            <summary>
            This is called when the object is garbage collected unless the Dispose() method is called.
            </summary>
        </member>
        <member name="M:WHC.OrderWater.Commons.Threading.DisposableObject.Dispose">
            <summary>
            Performs application-defined tasks associated with freeing, releasing,
            or resetting unmanaged resources.
            </summary>
        </member>
        <member name="F:WHC.OrderWater.Commons.Threading.DisposableObject._disposeState">
            <summary>
            Track whether Dispose has been called.
            </summary>
        </member>
        <member name="M:WHC.OrderWater.Commons.Threading.DisposableObject.CheckDisposed">
            <summary>
            Method for checking the disposed flag and raising the 
            <see cref="T:System.ObjectDisposedException"/> exception
            </summary>
            <exception cref="T:System.ObjectDisposedException">
            	Thrown when a Object is Disposing Or Disposed
            </exception>
        </member>
        <member name="M:WHC.OrderWater.Commons.Threading.DisposableObject.OnDisposed">
            <summary>
            Raises the <see cref="E:WHC.OrderWater.Commons.Threading.DisposableObject.Disposed"/> event.
            </summary>
            <remarks>
            	<note type="inheritinfo">
                   When overriding <see ref="M:SmartCore.DisposableObject.OnDisposed"/>
            	   in a derived class, be sure to call the base class's 
            	   <see cref="M:WHC.OrderWater.Commons.Threading.DisposableObject.OnDisposed"/> method so that
            	   registered delegates receive the event.
            	</note>
            </remarks>
        </member>
        <member name="M:WHC.OrderWater.Commons.Threading.DisposableObject.DisposeManagedResources">
            <summary>
            Override This Method To Dispose Unmanaged Resources.
            </summary>
        </member>
        <member name="M:WHC.OrderWater.Commons.Threading.DisposableObject.DisposeUnmanagedResources">
            <summary>
            Override This Method To Dispose Managed Resources.
            </summary>
        </member>
        <member name="M:WHC.OrderWater.Commons.Threading.DisposableObject.Dispose(System.Boolean)">
            <summary>
            Used Internally To Dipose Object.
            </summary>
            <param name="disposing">If true, this method is called because the object is being disposed with the Dispose() method. If false, the object is being disposed by the garbage collector.</param>
        </member>
        <member name="E:WHC.OrderWater.Commons.Threading.DisposableObject.Disposed">
            <summary>
            Occurs When the Object is disposed.
            </summary>
        </member>
        <member name="P:WHC.OrderWater.Commons.Threading.DisposableObject.IsDisposed">
            <summary>
            Get Whether Object is Disposed.
            </summary>
            <value>True If Object is disposed else false.</value>
        </member>
        <member name="P:WHC.OrderWater.Commons.Threading.DisposableObject.IsDisposing">
            <summary>
            Get Whether Object is Disposing.
            </summary>
            <value>True If Object is Disposing.</value>
        </member>
        <member name="M:WHC.OrderWater.Commons.INIFileUtil.IniWriteValue(System.String,System.String,System.String)">
            <summary>
            写INI文件
            </summary>
            <param name="Section"></param>
            <param name="Key"></param>
            <param name="Value"></param>
        </member>
        <member name="M:WHC.OrderWater.Commons.INIFileUtil.IniReadValue(System.String,System.String)">
            <summary>
            读取INI文件
            </summary>
            <param name="Section"></param>
            <param name="Key"></param>
            <returns></returns>
        </member>
        <member name="M:WHC.OrderWater.Commons.INIFileUtil.ClearAllSection">
            <summary>
            删除ini文件下所有段落
            </summary>
        </member>
        <member name="M:WHC.OrderWater.Commons.INIFileUtil.ClearSection(System.String)">
            <summary>
            删除ini文件下personal段落下的所有键
            </summary>
            <param name="Section"></param>
        </member>
        <member name="T:WHC.OrderWater.Commons.GZipUtil">
            <summary>
            压缩文本、字节或者文件的压缩辅助类
            </summary>
        </member>
        <member name="M:WHC.OrderWater.Commons.GZipUtil.Compress(System.String)">
            <summary>
            压缩字符串
            </summary>
            <param name="text"></param>
            <returns></returns>
        </member>
        <member name="M:WHC.OrderWater.Commons.GZipUtil.Uncompress(System.String)">
            <summary>
            解压字符串
            </summary>
            <param name="compressedText"></param>
            <returns></returns>
        </member>
        <member name="M:WHC.OrderWater.Commons.GZipUtil.Compress(System.Byte[])">
            <summary>
            压缩字节
            </summary>
            <param name="bytData"></param>
            <returns></returns>
        </member>
        <member name="M:WHC.OrderWater.Commons.GZipUtil.Decompress(System.Byte[])">
            <summary>
            解压字节
            </summary>
            <param name="bytData"></param>
            <returns></returns>
        </member>
        <member name="M:WHC.OrderWater.Commons.GZipUtil.ObjectToGZip(System.Object)">
            <summary>
            压缩Object对象到字节数组
            </summary>
            <param name="obj"></param>
            <returns></returns>
        </member>
        <member name="M:WHC.OrderWater.Commons.GZipUtil.GZipToObject(System.Byte[])">
            <summary>
            从压缩的字节数组转换到Object对象
            </summary>
            <param name="byteArray"></param>
            <returns></returns>
        </member>
        <member name="M:WHC.OrderWater.Commons.GZipUtil.CompressFile(System.String,System.String)">
            <summary>
            压缩文件
            </summary>
            <param name="sourceFile">源文件</param>
            <param name="destinationFile">目标文件</param>
        </member>
        <member name="M:WHC.OrderWater.Commons.GZipUtil.DecompressFile(System.String,System.String)">
            <summary>
            解压文件
            </summary>
            <param name="sourceFile">源文件</param>
            <param name="destinationFile">目标文件</param>
        </member>
        <member name="M:WHC.OrderWater.Commons.GZipUtil.Exists">
            <summary>
            是否安装了Winrar
            </summary>
            <returns></returns>
        </member>
        <member name="M:WHC.OrderWater.Commons.GZipUtil.CompressRAR(System.String,System.String,System.String)">
            <summary>
            打包成Rar
            </summary>
            <param name="patch"></param>
            <param name="rarPatch"></param>
            <param name="rarName"></param>
        </member>
        <member name="M:WHC.OrderWater.Commons.GZipUtil.UnCompressRAR(System.String,System.String,System.String)">
            <summary>
            解压
            </summary>
            <param name="unRarPatch">解压缩到</param>
            <param name="rarPatch">RAR文件所在路径</param>
            <param name="rarName">RAR文件名</param>
            <returns></returns>
        </member>
        <member name="T:WHC.OrderWater.Commons.FileDialogHelper">
            <summary>
            Class <c>FileDialogHelper</c>
            Description:文件打开保存的帮助工具类
            </summary>
        </member>
        <member name="M:WHC.OrderWater.Commons.FileDialogHelper.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:WHC.OrderWater.Commons.FileDialogHelper"/> class.
            </summary>
        </member>
        <member name="M:WHC.OrderWater.Commons.FileDialogHelper.OpenText">
            <summary>
            打开Txt对话框
            </summary>
            <returns></returns>
        </member>
        <member name="M:WHC.OrderWater.Commons.FileDialogHelper.SaveText">
            <summary>
            保存Excel对话框,并返回保存全路径
            </summary>
            <returns></returns>
        </member>
        <member name="M:WHC.OrderWater.Commons.FileDialogHelper.SaveText(System.String)">
            <summary>
            保存Excel对话框,并返回保存全路径
            </summary>
            <returns></returns>
        </member>
        <member name="M:WHC.OrderWater.Commons.FileDialogHelper.SaveText(System.String,System.String)">
            <summary>
            保存Excel对话框,并返回保存全路径
            </summary>
            <returns></returns>
        </member>
        <member name="M:WHC.OrderWater.Commons.FileDialogHelper.OpenExcel">
            <summary>
            打开Excel对话框
            </summary>
            <returns></returns>
        </member>
        <member name="M:WHC.OrderWater.Commons.FileDialogHelper.SaveExcel">
            <summary>
            保存Excel对话框,并返回保存全路径
            </summary>
            <returns></returns>
        </member>
        <member name="M:WHC.OrderWater.Commons.FileDialogHelper.SaveExcel(System.String)">
            <summary>
            保存Excel对话框,并返回保存全路径
            </summary>
            <returns></returns>
        </member>
        <member name="M:WHC.OrderWater.Commons.FileDialogHelper.SaveExcel(System.String,System.String)">
            <summary>
            保存Excel对话框,并返回保存全路径
            </summary>
            <returns></returns>
        </member>
        <member name="M:WHC.OrderWater.Commons.FileDialogHelper.OpenHtml">
            <summary>
            打开Html对话框
            </summary>
            <returns></returns>
        </member>
        <member name="M:WHC.OrderWater.Commons.FileDialogHelper.SaveHtml">
            <summary>
            保存Html对话框,并返回保存全路径
            </summary>
            <returns></returns>
        </member>
        <member name="M:WHC.OrderWater.Commons.FileDialogHelper.SaveHtml(System.String)">
            <summary>
            保存Html对话框,并返回保存全路径
            </summary>
            <returns></returns>
        </member>
        <member name="M:WHC.OrderWater.Commons.FileDialogHelper.SaveHtml(System.String,System.String)">
            <summary>
            保存Html对话框,并返回保存全路径
            </summary>
            <returns></returns>
        </member>
        <member name="M:WHC.OrderWater.Commons.FileDialogHelper.OpenZip">
            <summary>
            Opens the Zip.
            </summary>
            <returns></returns>
        </member>
        <member name="M:WHC.OrderWater.Commons.FileDialogHelper.OpenZip(System.String)">
            <summary>
            Opens the Zip.
            </summary>
            <returns></returns>
        </member>
        <member name="M:WHC.OrderWater.Commons.FileDialogHelper.SaveZip">
            <summary>
            Save the Zip
            </summary>
            <returns></returns>
        </member>
        <member name="M:WHC.OrderWater.Commons.FileDialogHelper.SaveZip(System.String)">
            <summary>
            Save the Zip
            </summary>
            <returns></returns>
        </member>
        <member name="M:WHC.OrderWater.Commons.FileDialogHelper.SaveZip(System.String,System.String)">
            <summary>
            Save the Zip
            </summary>
            <returns></returns>
        </member>
        <member name="M:WHC.OrderWater.Commons.FileDialogHelper.OpenImage">
            <summary>
            Opens the image.
            </summary>
            <returns></returns>
        </member>
        <member name="M:WHC.OrderWater.Commons.FileDialogHelper.SaveImage">
            <summary>
            保存图片对话框,并返回保存全路径
            </summary>
            <returns></returns>
        </member>
        <member name="M:WHC.OrderWater.Commons.FileDialogHelper.SaveImage(System.String)">
            <summary>
            保存图片对话框并设置默认文件名,并返回保存全路径
            </summary>
            <returns></returns>
        </member>
        <member name="M:WHC.OrderWater.Commons.FileDialogHelper.SaveImage(System.String,System.String)">
            <summary>
            保存图片对话框并设置默认文件名,并返回保存全路径
            </summary>
            <returns></returns>
        </member>
        <member name="M:WHC.OrderWater.Commons.FileDialogHelper.SaveAccessDb">
            <summary>
            保存数据库备份对话框
            </summary>
            <returns>数据库备份路径</returns>
        </member>
        <member name="M:WHC.OrderWater.Commons.FileDialogHelper.OpenAccessDb">
            <summary>
            数据库还原对话框
            </summary>
            <returns>数据库还原路径</returns>
        </member>
        <member name="M:WHC.OrderWater.Commons.FileDialogHelper.SaveConfig">
            <summary>
            保存配置文件备份对话框
            </summary>
            <returns>配置文件备份路径</returns>
        </member>
        <member name="M:WHC.OrderWater.Commons.FileDialogHelper.OpenConfig">
            <summary>
            配置文件还原对话框
            </summary>
            <returns>配置文件还原路径</returns>
        </member>
        <member name="M:WHC.OrderWater.Commons.FileDialogHelper.Open(System.String,System.String,System.String)">
            <summary>
            Opens the specified title.
            </summary>
            <param name="title">The title.</param>
            <param name="filter">The filter.</param>
            <returns></returns>
        </member>
        <member name="M:WHC.OrderWater.Commons.FileDialogHelper.Open(System.String,System.String)">
            <summary>
            Opens the specified title.
            </summary>
            <param name="title">The title.</param>
            <param name="filter">The filter.</param>
            <returns></returns>
        </member>
        <member name="M:WHC.OrderWater.Commons.FileDialogHelper.Save(System.String,System.String,System.String)">
            <summary>
            Saves the specified tile.
            </summary>
            <param name="tile">The tile.</param>
            <param name="filter">The filter.</param>
            <returns></returns>
        </member>
        <member name="M:WHC.OrderWater.Commons.FileDialogHelper.Save(System.String,System.String,System.String,System.String)">
            <summary>
            Saves the specified tile.
            </summary>
            <param name="tile">The tile.</param>
            <param name="filter">The filter.</param>
            <returns></returns>
        </member>
        <member name="M:WHC.OrderWater.Commons.FileDialogHelper.Save(System.String,System.String)">
            <summary>
            Saves the specified tile.
            </summary>
            <param name="tile">The tile.</param>
            <param name="filter">The filter.</param>
            <returns></returns>
        </member>
        <member name="M:WHC.OrderWater.Commons.CText.GetLinks(System.String,System.String)">
            <summary>
            获取所有有效链接，过滤广告
            </summary>
            <param name="sContent"></param>
            <returns></returns>
        </member>
        <member name="M:WHC.OrderWater.Commons.CText.GetLinksByKey(System.Collections.Generic.Dictionary{System.String,System.String},System.Collections.Generic.List{System.String})">
            <summary>
            在现有链接中用关键字过滤
            </summary>
            <param name="listA"></param>
            <param name="listKey"></param>
            <returns></returns>
        </member>
        <member name="M:WHC.OrderWater.Commons.CText.GetLinksFromRss(System.String,System.String)">
            <summary>
            从RSS FEED中读取
            </summary>
            <param name="sContent"></param>
            <param name="listKey"></param>
            <returns></returns>
        </member>
        <member name="M:WHC.OrderWater.Commons.CText.GetLinksByKeyFromRss(System.String,System.Collections.Generic.List{System.String})">
            <summary>
            从RSS FEED中读取
            </summary>
            <param name="sContent"></param>
            <param name="listKey"></param>
            <returns></returns>
        </member>
        <member name="M:WHC.OrderWater.Commons.CText.GetUrlByRelative(System.String,System.String)">
            <summary>
            获得链接的绝对路径
            </summary>
            <param name="sUrl"></param>
            <param name="sRUrl"></param>
            <returns></returns>
        </member>
        <member name="M:WHC.OrderWater.Commons.CText.GetTxtFromHtml2(System.String)">
            <summary>
            和GetTxtFromHtml功能一样，不过保留换行符号
            </summary>
            <param name="sHtml"></param>
            <returns></returns>
        </member>
        <member name="T:WHC.OrderWater.Commons.CString">
            <summary>
            CString 的摘要说明。
            </summary>
        </member>
        <member name="M:WHC.OrderWater.Commons.CString.TransformPrice(System.Double)">
            <summary>
            把价格精确至小数点两位
            </summary>
            <param name="str"></param>
            <returns></returns>
        </member>
        <member name="M:WHC.OrderWater.Commons.CString.GetLength(System.String)">
            <summary> 
            检测含有中文字符串的实际长度 
            </summary> 
            <param name="str">字符串</param> 
        </member>
        <member name="M:WHC.OrderWater.Commons.CString.DelHtmlString(System.String)">
            <summary>
            删除所有的html标记 
            </summary>
            <param name="str"></param>
            <returns></returns>
        </member>
        <member name="M:WHC.OrderWater.Commons.CString.DelTag(System.String,System.String,System.Boolean)">
            <summary>
            删除字符串中的特定标记 
            </summary>
            <param name="str"></param>
            <param name="tag"></param>
            <param name="isContent">是否清除内容 </param>
            <returns></returns>
        </member>
        <member name="M:WHC.OrderWater.Commons.CString.DelTagArray(System.String,System.String,System.Boolean)">
            <summary>
            删除字符串中的一组标记 
            </summary>
            <param name="str"></param>
            <param name="tagA"></param>
            <param name="isContent">是否清除内容 </param>
            <returns></returns>
        </member>
        <member name="M:WHC.OrderWater.Commons.CString.SetVersionFormat(System.String)">
            <summary>
            格式化为版本号字符串
            </summary>
            <param name="sVersion"></param>
            <returns></returns>
        </member>
        <member name="M:WHC.OrderWater.Commons.CString.GetSQLFildList(System.String)">
            <summary>
            格式化字符串为 SQL 语句字段
            </summary>
            <param name="fldList"></param>
            <returns></returns>
        </member>
        <member name="M:WHC.OrderWater.Commons.CString.AddZero(System.Int32,System.Int32)">
            <summary>
            在前面补0
            </summary>
            <returns></returns>
        </member>
        <member name="M:WHC.OrderWater.Commons.CString.AddZero(System.String,System.Int32)">
            <summary>
            在前面补0
            </summary>
            <returns></returns>
        </member>
        <member name="M:WHC.OrderWater.Commons.CString.GetUniqueString">
            <summary>
            简介：获得唯一的字符串
            </summary>
            <returns></returns>
        </member>
        <member name="M:WHC.OrderWater.Commons.CString.GetAllURL(System.String)">
            <summary>
            取得所有链接URL
            </summary>
            <param name="html"></param>
            <returns></returns>
        </member>
        <member name="M:WHC.OrderWater.Commons.CString.GetAllLinkText(System.String)">
            <summary>
            获取所有连接文本
            </summary>
            <param name="html"></param>
            <returns></returns>
        </member>
        <member name="T:WHC.OrderWater.Commons.ChildWinManagement">
            <summary>
            窗口管理类
            </summary>
        </member>
        <member name="M:WHC.OrderWater.Commons.ChildWinManagement.WinCaption(System.String)">
            <summary> 
            获取窗口标题
            </summary>
            <returns></returns> 
        </member>
        <member name="M:WHC.OrderWater.Commons.ChildWinManagement.ExistWin(System.Windows.Forms.Form,System.String)">
            <summary> 
            获取MDI父窗口是否有窗口标题为指定字符串的子窗口（如果已经存在把此子窗口推向前台） 
            </summary> 
            <param name="MDIwin">MDI父窗口</param> 
            <param name="caption">窗口标题</param> 
            <returns></returns> 
        </member>
        <member name="M:WHC.OrderWater.Commons.ChildWinManagement.PopControlForm(System.Type,System.String)">
            <summary>
            把控件附加到窗体上弹出
            </summary>
            <param name="control"></param>
            <param name="caption"></param>
        </member>
        <member name="M:WHC.OrderWater.Commons.ChildWinManagement.PopDialogForm(System.Type)">
            <summary>
            弹出窗体
            </summary>
            <param name="type"></param>
        </member>
        <member name="M:WHC.OrderWater.Commons.NetworkUtil.GetLocalIP">
            <summary>
            获取本地机器IP地址
            </summary>
            <returns></returns>
        </member>
        <member name="M:WHC.OrderWater.Commons.NetworkUtil.GetValidIP(System.String)">
            <summary>
            检查设置的IP地址是否正确，并返回正确的IP地址,无效IP地址返回"-1"。
            </summary>
            <param name="ip">设置的IP地址</param>
            <returns>非法IP 则返回 -1 </returns>
        </member>
        <member name="M:WHC.OrderWater.Commons.NetworkUtil.GetValidPort(System.String)">
            <summary>
            检查设置的端口号是否正确，并返回正确的端口号,无效端口号返回-1。
            </summary>
            <param name="port">设置的端口号</param>        
        </member>
        <member name="M:WHC.OrderWater.Commons.NetworkUtil.StringToIPAddress(System.String)">
            <summary>
            将字符串形式的IP地址转换成IPAddress对象
            </summary>
            <param name="ip">字符串形式的IP地址</param>        
        </member>
        <member name="M:WHC.OrderWater.Commons.NetworkUtil.GetClientIP(System.Net.Sockets.Socket)">
            <summary>
            获取远程客户机的IP地址
            </summary>
            <param name="clientSocket">客户端的socket对象</param>        
        </member>
        <member name="M:WHC.OrderWater.Commons.NetworkUtil.CreateIPEndPoint(System.String,System.Int32)">
            <summary>
            创建一个IPEndPoint对象
            </summary>
            <param name="ip">IP地址</param>
            <param name="port">端口号</param>        
        </member>
        <member name="M:WHC.OrderWater.Commons.NetworkUtil.CreateTcpListener">
            <summary>
            创建一个自动分配IP和端口的TcpListener对象
            </summary>        
        </member>
        <member name="M:WHC.OrderWater.Commons.NetworkUtil.CreateTcpListener(System.String,System.Int32)">
            <summary>
            创建一个TcpListener对象
            </summary>
            <param name="ip">IP地址</param>
            <param name="port">端口</param>        
        </member>
        <member name="M:WHC.OrderWater.Commons.NetworkUtil.CreateTcpSocket">
            <summary>
            创建一个基于TCP协议的Socket对象
            </summary>        
        </member>
        <member name="M:WHC.OrderWater.Commons.NetworkUtil.CreateUdpSocket">
            <summary>
            创建一个基于UDP协议的Socket对象
            </summary>        
        </member>
        <member name="M:WHC.OrderWater.Commons.NetworkUtil.GetLocalPoint(System.Net.Sockets.TcpListener)">
            <summary>
            获取TcpListener对象的本地终结点
            </summary>
            <param name="tcpListener">TcpListener对象</param>        
        </member>
        <member name="M:WHC.OrderWater.Commons.NetworkUtil.GetLocalPoint_IP(System.Net.Sockets.TcpListener)">
            <summary>
            获取TcpListener对象的本地终结点的IP地址
            </summary>
            <param name="tcpListener">TcpListener对象</param>        
        </member>
        <member name="M:WHC.OrderWater.Commons.NetworkUtil.GetLocalPoint_Port(System.Net.Sockets.TcpListener)">
            <summary>
            获取TcpListener对象的本地终结点的端口号
            </summary>
            <param name="tcpListener">TcpListener对象</param>        
        </member>
        <member name="M:WHC.OrderWater.Commons.NetworkUtil.GetLocalPoint(System.Net.Sockets.Socket)">
            <summary>
            获取Socket对象的本地终结点
            </summary>
            <param name="socket">Socket对象</param>        
        </member>
        <member name="M:WHC.OrderWater.Commons.NetworkUtil.GetLocalPoint_IP(System.Net.Sockets.Socket)">
            <summary>
            获取Socket对象的本地终结点的IP地址
            </summary>
            <param name="socket">Socket对象</param>        
        </member>
        <member name="M:WHC.OrderWater.Commons.NetworkUtil.GetLocalPoint_Port(System.Net.Sockets.Socket)">
            <summary>
            获取Socket对象的本地终结点的端口号
            </summary>
            <param name="socket">Socket对象</param>        
        </member>
        <member name="M:WHC.OrderWater.Commons.NetworkUtil.BindEndPoint(System.Net.Sockets.Socket,System.Net.IPEndPoint)">
            <summary>
            绑定终结点
            </summary>
            <param name="socket">Socket对象</param>
            <param name="endPoint">要绑定的终结点</param>
        </member>
        <member name="M:WHC.OrderWater.Commons.NetworkUtil.BindEndPoint(System.Net.Sockets.Socket,System.String,System.Int32)">
            <summary>
            绑定终结点
            </summary>
            <param name="socket">Socket对象</param>        
            <param name="ip">服务器IP地址</param>
            <param name="port">服务器端口</param>
        </member>
        <member name="M:WHC.OrderWater.Commons.NetworkUtil.StartListen(System.Net.Sockets.Socket,System.Int32)">
            <summary>
            指定Socket对象执行监听，默认允许的最大挂起连接数为100
            </summary>
            <param name="socket">执行监听的Socket对象</param>
            <param name="port">监听的端口号</param>
        </member>
        <member name="M:WHC.OrderWater.Commons.NetworkUtil.StartListen(System.Net.Sockets.Socket,System.Int32,System.Int32)">
            <summary>
            指定Socket对象执行监听
            </summary>
            <param name="socket">执行监听的Socket对象</param>
            <param name="port">监听的端口号</param>
            <param name="maxConnection">允许的最大挂起连接数</param>
        </member>
        <member name="M:WHC.OrderWater.Commons.NetworkUtil.StartListen(System.Net.Sockets.Socket,System.String,System.Int32,System.Int32)">
            <summary>
            指定Socket对象执行监听
            </summary>
            <param name="socket">执行监听的Socket对象</param>
            <param name="ip">监听的IP地址</param>
            <param name="port">监听的端口号</param>
            <param name="maxConnection">允许的最大挂起连接数</param>
        </member>
        <member name="M:WHC.OrderWater.Commons.NetworkUtil.Connect(System.Net.Sockets.Socket,System.String,System.Int32)">
            <summary>
            连接到基于TCP协议的服务器,连接成功返回true，否则返回false
            </summary>
            <param name="socket">Socket对象</param>
            <param name="ip">服务器IP地址</param>
            <param name="port">服务器端口号</param>     
        </member>
        <member name="M:WHC.OrderWater.Commons.NetworkUtil.SendMsg(System.Net.Sockets.Socket,System.Byte[])">
            <summary>
            以同步方式向指定的Socket对象发送消息
            </summary>
            <param name="socket">socket对象</param>
            <param name="msg">发送的消息</param>
        </member>
        <member name="M:WHC.OrderWater.Commons.NetworkUtil.SendMsg(System.Net.Sockets.Socket,System.String)">
            <summary>
            使用UTF8编码格式以同步方式向指定的Socket对象发送消息
            </summary>
            <param name="socket">socket对象</param>
            <param name="msg">发送的消息</param>
        </member>
        <member name="M:WHC.OrderWater.Commons.NetworkUtil.ReceiveMsg(System.Net.Sockets.Socket,System.Byte[])">
            <summary>
            以同步方式接收消息
            </summary>
            <param name="socket">socket对象</param>
            <param name="buffer">接收消息的缓冲区</param>
        </member>
        <member name="M:WHC.OrderWater.Commons.NetworkUtil.ReceiveMsg(System.Net.Sockets.Socket)">
            <summary>
            以同步方式接收消息，并转换为UTF8编码格式的字符串,使用5000字节的默认缓冲区接收。
            </summary>
            <param name="socket">socket对象</param>        
        </member>
        <member name="M:WHC.OrderWater.Commons.NetworkUtil.Close(System.Net.Sockets.Socket)">
            <summary>
            关闭基于Tcp协议的Socket对象
            </summary>
            <param name="socket">要关闭的Socket对象</param>
        </member>
        <member name="M:WHC.OrderWater.Commons.NetworkUtil.IsConnectedInternet">
            <summary>
            检测本机是否联网
            </summary>
            <returns></returns>
        </member>
        <member name="P:WHC.OrderWater.Commons.NetworkUtil.LocalHostName">
            <summary>
            获取本机的计算机名
            </summary>
        </member>
        <member name="P:WHC.OrderWater.Commons.NetworkUtil.LANIP">
            <summary>
            获取本机的局域网IP
            </summary>        
        </member>
        <member name="P:WHC.OrderWater.Commons.NetworkUtil.WANIP">
            <summary>
            获取本机在Internet网络的广域网IP
            </summary>        
        </member>
        <member name="T:WHC.OrderWater.Commons.KeyboardHook">
            <summary>
            The global keyboard hook. This can be used to globally capture keyboard input.
            </summary>
        </member>
        <member name="F:WHC.OrderWater.Commons.KeyboardHook.Control">
            <summary>
            Check to see if either Control modifier is active.
            </summary>
        </member>
        <member name="F:WHC.OrderWater.Commons.KeyboardHook.Shift">
            <summary>
            Check to see if either Shift modifier is active.
            </summary>
        </member>
        <member name="F:WHC.OrderWater.Commons.KeyboardHook.Alt">
            <summary>
            Check to see if either Alt modifier is active.
            </summary>
        </member>
        <member name="F:WHC.OrderWater.Commons.KeyboardHook.Win">
            <summary>
            Check to see if either Win modifier is active.
            </summary>
        </member>
        <member name="F:WHC.OrderWater.Commons.KeyboardHook.handledKeysDown">
            <summary>
            Keys handled and their callbacks
            </summary>
        </member>
        <member name="F:WHC.OrderWater.Commons.KeyboardHook.KeyDown">
            <summary>
            Add a HookHandler delegate to this to activate hotkeys.
            </summary>
        </member>
        <member name="F:WHC.OrderWater.Commons.KeyboardHook.Enabled">
            <summary>
            Keep track of the hook state.
            </summary>
        </member>
        <member name="M:WHC.OrderWater.Commons.KeyboardHook.Enable">
            <summary>
            Start the keyboard hook.
            </summary>
            <returns>True if no exceptions.</returns>
        </member>
        <member name="M:WHC.OrderWater.Commons.KeyboardHook.Disable">
            <summary>
            Disable keyboard hooking.
            </summary>
            <returns>True if disabled correctly.</returns>
        </member>
        <member name="M:WHC.OrderWater.Commons.KeyboardHook.AddKeyDown(System.Windows.Forms.Keys,WHC.OrderWater.Commons.KeyboardHook.KeyPressed)">
            <summary>
            Adds a key down to the hook.
            </summary>
            <param name="key">The key to be added.</param>
            <param name="callback">The function to be called when the key is pressed.</param>
        </member>
        <member name="M:WHC.OrderWater.Commons.KeyboardHook.AddKeyUp(System.Windows.Forms.Keys,WHC.OrderWater.Commons.KeyboardHook.KeyPressed)">
            <summary>
            Adds a key up to the hook.
            </summary>
            <param name="key">The key to be added.</param>
            <param name="callback">The function to be called when the key is pressed.</param>
        </member>
        <member name="M:WHC.OrderWater.Commons.KeyboardHook.Add(System.Windows.Forms.Keys,WHC.OrderWater.Commons.KeyboardHook.KeyPressed)">
            <summary>
            AddKeyDown wrapper
            </summary>
            <param name="key">The key to be added.</param>
            <param name="callback">The function to be called when the key is pressed.</param>
        </member>
        <member name="M:WHC.OrderWater.Commons.KeyboardHook.RemoveDown(System.Windows.Forms.Keys)">
            <summary>
            Removes a key down from the hook.
            </summary>
            <param name="key">The key to be removed.</param>
        </member>
        <member name="M:WHC.OrderWater.Commons.KeyboardHook.RemoveUp(System.Windows.Forms.Keys)">
            <summary>
            Removes a key up from the hook.
            </summary>
            <param name="key">The key to be removed.</param>
        </member>
        <member name="M:WHC.OrderWater.Commons.KeyboardHook.Remove(System.Windows.Forms.Keys)">
            <summary>
            Removes a key from the hook.
            </summary>
            <param name="key">The key to be removed.</param>
        </member>
        <member name="M:WHC.OrderWater.Commons.KeyboardHook.KeyToString(System.Windows.Forms.Keys)">
            <summary>
            Return a string representation of the given key based on current modifiers.
            </summary>
            <param name="key"></param>
            <returns></returns>
        </member>
        <member name="T:WHC.OrderWater.Commons.KeyboardHook.KeyPressed">
            <summary>
            The function prototype for keypresses.
            </summary>
        </member>
        <member name="T:WHC.OrderWater.Commons.KeyboardHook.KeyboardHookHandler">
            <summary>
            Delegate for handling a key down event.
            </summary>
            <param name="key">The key that was pressed. Check Control, Shift, Alt, and Win for modifiers.</param>
            <returns>True if you want the key to pass through
            (be recognized for the app), False if you want it
            to be trapped (app never sees it).</returns>
        </member>
        <member name="T:WHC.OrderWater.Commons.IconReaderHelper">
            <summary>
            Provides static methods to read system icons for both folders and files.
            </summary>
            <example>
            <code>IconReaderHelper.GetFileIcon("c:\\general.xls");</code>
            </example>
        </member>
        <member name="M:WHC.OrderWater.Commons.IconReaderHelper.GetFileIcon(System.String,WHC.OrderWater.Commons.IconReaderHelper.IconSize,System.Boolean)">
            <summary>
            Returns an icon for a given file - indicated by the name parameter.
            </summary>
            <param name="name">Pathname for file.</param>
            <param name="size">Large or small</param>
            <param name="linkOverlay">Whether to include the link icon</param>
            <returns>System.Drawing.Icon</returns>
        </member>
        <member name="M:WHC.OrderWater.Commons.IconReaderHelper.GetFolderIcon(WHC.OrderWater.Commons.IconReaderHelper.IconSize,WHC.OrderWater.Commons.IconReaderHelper.FolderType)">
            <summary>
            Used to access system folder icons.
            </summary>
            <param name="size">Specify large or small icons.</param>
            <param name="folderType">Specify open or closed FolderType.</param>
            <returns>System.Drawing.Icon</returns>
        </member>
        <member name="M:WHC.OrderWater.Commons.IconReaderHelper.GetAssociatedIcon(System.String,System.Boolean)">
            <summary>
            获取后缀名的关联图标
            </summary>
            <param name="stubPath"></param>
            <param name="large"></param>
            <returns></returns>
        </member>
        <member name="T:WHC.OrderWater.Commons.IconReaderHelper.IconSize">
            <summary>
            Options to specify the size of icons to return.
            </summary>
        </member>
        <member name="F:WHC.OrderWater.Commons.IconReaderHelper.IconSize.Large">
            <summary>
            Specify large icon - 32 pixels by 32 pixels.
            </summary>
        </member>
        <member name="F:WHC.OrderWater.Commons.IconReaderHelper.IconSize.Small">
            <summary>
            Specify small icon - 16 pixels by 16 pixels.
            </summary>
        </member>
        <member name="T:WHC.OrderWater.Commons.IconReaderHelper.FolderType">
            <summary>
            Options to specify whether folders should be in the open or closed state.
            </summary>
        </member>
        <member name="F:WHC.OrderWater.Commons.IconReaderHelper.FolderType.Open">
            <summary>
            Specify open folder.
            </summary>
        </member>
        <member name="F:WHC.OrderWater.Commons.IconReaderHelper.FolderType.Closed">
            <summary>
            Specify closed folder.
            </summary>
        </member>
        <member name="T:WHC.OrderWater.Commons.Shell32">
            <summary>
            Wraps necessary Shell32.dll structures and functions required to retrieve Icon Handles using SHGetFileInfo. Code
            courtesy of MSDN Cold Rooster Consulting case study.
            </summary> 
        </member>
        <member name="T:WHC.OrderWater.Commons.User32">
            <summary>
            Wraps necessary functions imported from User32.dll. Code courtesy of MSDN Cold Rooster Consulting example.
            </summary>
        </member>
        <member name="M:WHC.OrderWater.Commons.User32.DestroyIcon(System.IntPtr)">
            <summary>
            Provides access to function required to delete handle. This method is used internally
            and is not required to be called separately.
            </summary>
            <param name="hIcon">Pointer to icon handle.</param>
            <returns>N/A</returns>
        </member>
        <member name="T:WHC.OrderWater.Commons.HardwareInfoHelper">
            <summary>
            HardDiskVal 的摘要说明。
            读取指定盘符的硬盘序列号
            功能：读取指定盘符的硬盘序列号
            </summary>
        </member>
        <member name="M:WHC.OrderWater.Commons.HardwareInfoHelper.HDVal(System.String)">
            <summary>
            获得盘符为drvID的硬盘序列号，缺省为C
            </summary>
            <param name="drvID"></param>
            <returns></returns>
        </member>
        <member name="M:WHC.OrderWater.Commons.HardwareInfoHelper.GetDiskID">
            <summary>
            获取硬盘ID
            </summary>
            <returns></returns>
        </member>
        <member name="M:WHC.OrderWater.Commons.HardwareInfoHelper.GetCPUId">
            <summary>
            获取CPU的ID
            </summary>
            <returns></returns>
        </member>
        <member name="M:WHC.OrderWater.Commons.HardwareInfoHelper.GetCPUName">
            <summary>
            获取CPU的名称
            </summary>
            <returns></returns>
        </member>
        <member name="M:WHC.OrderWater.Commons.HardwareInfoHelper.GetUSBDriveLetters">
            <summary>
            Returns a List of drive letters of USB storage devices attached to the computer.
            Drive letter format is of the format X:
            </summary>
            <returns>List of USB Drive letters</returns>
        </member>
        <member name="M:WHC.OrderWater.Commons.HardwareInfoHelper.GetMacAddress">
            <summary>
            获取MAC地址
            </summary>
            <returns></returns>
        </member>
        <member name="M:WHC.OrderWater.Commons.HardwareInfoHelper.GetIPAddress">
            <summary>
            获取IP地址
            </summary>
            <returns></returns>
        </member>
        <member name="M:WHC.OrderWater.Commons.HardwareInfoHelper.GetUserName">
            <summary>
            获取操作系统的登录用户名
            </summary>
            <returns></returns>
        </member>
        <member name="M:WHC.OrderWater.Commons.HardwareInfoHelper.GetComputerName">
            <summary>
            获取计算机名
            </summary>
            <returns></returns>
        </member>
        <member name="M:WHC.OrderWater.Commons.HardwareInfoHelper.GetSystemType">
            <summary>
            获取PC类型
            </summary>
            <returns></returns>
        </member>
        <member name="M:WHC.OrderWater.Commons.HardwareInfoHelper.GetTotalPhysicalMemory">
            <summary>
            获取物理内存
            </summary>
            <returns></returns>
        </member>
        <member name="M:WHC.OrderWater.Commons.HardwareInfoHelper.GetHDInfo(System.Byte)">
            <summary>
            获得硬盘信息
            </summary>
        </member>
        <member name="M:WHC.OrderWater.Commons.HardwareInfoHelper.GetHddInfo9x(System.Byte)">
            <summary>
            获取9X架构的硬盘信息
            </summary>
            <param name="driveIndex"></param>
            <returns></returns>
        </member>
        <member name="M:WHC.OrderWater.Commons.HardwareInfoHelper.GetHddInfoNT(System.Byte)">
            <summary>
            获取NT架构的硬盘信息
            </summary>
            <param name="driveIndex"></param>
            <returns></returns>
        </member>
        <member name="M:WHC.OrderWater.Commons.HardwareInfoHelper.GetHardDiskInfo(WHC.OrderWater.Commons.HardwareInfoHelper.IdSector)">
            <summary>
            获取硬盘信息的细节
            </summary>
            <param name="phdinfo"></param>
            <returns></returns>
        </member>
        <member name="M:WHC.OrderWater.Commons.HardwareInfoHelper.ChangeByteOrder(System.Byte[])">
            <summary>
            将byte数组中保存的信息转换成字符串
            </summary>
            <param name="charArray"></param>
        </member>
        <member name="F:WHC.OrderWater.Commons.HardwareInfoHelper.HardDiskInfo.ModuleNumber">
            <summary>
            型号
            </summary>
        </member>
        <member name="F:WHC.OrderWater.Commons.HardwareInfoHelper.HardDiskInfo.Firmware">
            <summary>
            固件版本
            </summary>
        </member>
        <member name="F:WHC.OrderWater.Commons.HardwareInfoHelper.HardDiskInfo.SerialNumber">
            <summary>
            序列号
            </summary>
        </member>
        <member name="F:WHC.OrderWater.Commons.HardwareInfoHelper.HardDiskInfo.Capacity">
            <summary>
            容量，以M为单位
            </summary>
        </member>
        <member name="T:WHC.OrderWater.Commons.ZoomMode">
            <summary>
            Specifies the zoom mode for the <see cref="T:WHC.OrderWater.Commons.CoolPrintPreviewControl"/> control.
            </summary>
        </member>
        <member name="F:WHC.OrderWater.Commons.ZoomMode.ActualSize">
            <summary>
            Show the preview in actual size.
            </summary>
        </member>
        <member name="F:WHC.OrderWater.Commons.ZoomMode.FullPage">
            <summary>
            Show a full page.
            </summary>
        </member>
        <member name="F:WHC.OrderWater.Commons.ZoomMode.PageWidth">
            <summary>
            Show a full page width.
            </summary>
        </member>
        <member name="F:WHC.OrderWater.Commons.ZoomMode.TwoPages">
            <summary>
            Show two full pages.
            </summary>
        </member>
        <member name="F:WHC.OrderWater.Commons.ZoomMode.Custom">
            <summary>
            Use the zoom factor specified by the <see cref="P:WHC.OrderWater.Commons.CoolPrintPreviewControl.Zoom"/> property.
            </summary>
        </member>
        <member name="T:WHC.OrderWater.Commons.CoolPrintPreviewControl">
            <summary>
            Represents a preview of one or two pages in a <see cref="T:System.Drawing.Printing.PrintDocument"/>.
            </summary>
            <remarks>
            This control is similar to the standard <see cref="T:System.Windows.Forms.PrintPreviewControl"/> but
            it displays pages as they are rendered. By contrast, the standard control 
            waits until the entire document is rendered before it displays anything.
            </remarks>
        </member>
        <member name="M:WHC.OrderWater.Commons.CoolPrintPreviewControl.#ctor">
            <summary>
            Initializes a new instance of a <see cref="T:WHC.OrderWater.Commons.CoolPrintPreviewControl"/> control.
            </summary>
        </member>
        <member name="M:WHC.OrderWater.Commons.CoolPrintPreviewControl.RefreshPreview">
            <summary>
            Regenerates the preview to reflect changes in the document layout.
            </summary>
        </member>
        <member name="M:WHC.OrderWater.Commons.CoolPrintPreviewControl.Cancel">
            <summary>
            Stops rendering the <see cref="P:WHC.OrderWater.Commons.CoolPrintPreviewControl.Document"/>.
            </summary>
        </member>
        <member name="M:WHC.OrderWater.Commons.CoolPrintPreviewControl.Print">
            <summary>
            Prints the current document honoring the selected page range.
            </summary>
        </member>
        <member name="M:WHC.OrderWater.Commons.CoolPrintPreviewControl.OnStartPageChanged(System.EventArgs)">
            <summary>
            Raises the <see cref="E:WHC.OrderWater.Commons.CoolPrintPreviewControl.StartPageChanged"/> event.
            </summary>
            <param name="e"><see cref="T:System.EventArgs"/> that provides the event data.</param>
        </member>
        <member name="M:WHC.OrderWater.Commons.CoolPrintPreviewControl.OnPageCountChanged(System.EventArgs)">
            <summary>
            Raises the <see cref="E:WHC.OrderWater.Commons.CoolPrintPreviewControl.PageCountChanged"/> event.
            </summary>
            <param name="e"><see cref="T:System.EventArgs"/> that provides the event data/</param>
        </member>
        <member name="M:WHC.OrderWater.Commons.CoolPrintPreviewControl.OnZoomModeChanged(System.EventArgs)">
            <summary>
            Raises the <see cref="E:WHC.OrderWater.Commons.CoolPrintPreviewControl.ZoomModeChanged"/> event.
            </summary>
            <param name="e"><see cref="T:System.EventArgs"/> that contains the event data.</param>
        </member>
        <member name="P:WHC.OrderWater.Commons.CoolPrintPreviewControl.Document">
            <summary>
            Gets or sets the <see cref="T:System.Drawing.Printing.PrintDocument"/> being previewed.
            </summary>
        </member>
        <member name="P:WHC.OrderWater.Commons.CoolPrintPreviewControl.IsRendering">
            <summary>
            Gets a value that indicates whether the <see cref="P:WHC.OrderWater.Commons.CoolPrintPreviewControl.Document"/> is being rendered.
            </summary>
        </member>
        <member name="P:WHC.OrderWater.Commons.CoolPrintPreviewControl.ZoomMode">
            <summary>
            Gets or sets how the zoom should be adjusted when the control is resized.
            </summary>
        </member>
        <member name="P:WHC.OrderWater.Commons.CoolPrintPreviewControl.Zoom">
            <summary>
            Gets or sets a custom zoom factor used when the <see cref="P:WHC.OrderWater.Commons.CoolPrintPreviewControl.ZoomMode"/> property
            is set to <b>Custom</b>.
            </summary>
        </member>
        <member name="P:WHC.OrderWater.Commons.CoolPrintPreviewControl.StartPage">
            <summary>
            Gets or sets the first page being previewed.
            </summary>
            <remarks>
            There may be one or two pages visible depending on the setting of the
            <see cref="P:WHC.OrderWater.Commons.CoolPrintPreviewControl.ZoomMode"/> property.
            </remarks>
        </member>
        <member name="P:WHC.OrderWater.Commons.CoolPrintPreviewControl.PageCount">
            <summary>
            Gets the number of pages available for preview.
            </summary>
            <remarks>
            This number increases as the document is rendered into the control.
            </remarks>
        </member>
        <member name="P:WHC.OrderWater.Commons.CoolPrintPreviewControl.BackColor">
            <summary>
            Gets or sets the control's background color.
            </summary>
        </member>
        <member name="P:WHC.OrderWater.Commons.CoolPrintPreviewControl.PageImages">
            <summary>
            Gets a list containing the images of the pages in the document.
            </summary>
        </member>
        <member name="E:WHC.OrderWater.Commons.CoolPrintPreviewControl.StartPageChanged">
            <summary>
            Occurs when the value of the <see cref="P:WHC.OrderWater.Commons.CoolPrintPreviewControl.StartPage"/> property changes.
            </summary>
        </member>
        <member name="E:WHC.OrderWater.Commons.CoolPrintPreviewControl.PageCountChanged">
            <summary>
            Occurs when the value of the <see cref="P:WHC.OrderWater.Commons.CoolPrintPreviewControl.PageCount"/> property changes.
            </summary>
        </member>
        <member name="E:WHC.OrderWater.Commons.CoolPrintPreviewControl.ZoomModeChanged">
            <summary>
            Occurs when the value of the <see cref="P:WHC.OrderWater.Commons.CoolPrintPreviewControl.ZoomMode"/> property changes.
            </summary>
        </member>
        <member name="M:WHC.OrderWater.Commons.CookieManger.InternetSetCookie(System.String,System.String,System.String)">
            <summary>
            设置系统Cookie
            </summary>
            <param name="lpszUrlName">Cookie域</param>
            <param name="lbszCookieName">Cookie名</param>
            <param name="lpszCookieData">Cookie数据</param>
            <returns>设置成功与否</returns>
        </member>
        <member name="M:WHC.OrderWater.Commons.CookieManger.GetCKS(System.String)">
            <summary>
            获取cookie数组
            </summary>
            <param name="ck"></param>
            <returns></returns>
        </member>
        <member name="M:WHC.OrderWater.Commons.CookieManger.GetCK(System.Windows.Forms.WebBrowser)">
            <summary>
            获得浏览器里的Cookie字符串
            </summary>
            <param name="browser">浏览器</param>
            <returns>剔除重复值后的Cookie字符串</returns>
        </member>
        <member name="M:WHC.OrderWater.Commons.CookieManger.GetCK(System.String[])">
            <summary>
            从Cookie数组中转换成不重复的Cookie字符串，相同的Cookie取前面的
            </summary>
            <param name="cks">Cookie数组</param>
            <returns>剔除重复的Cookie字符串</returns>
        </member>
        <member name="M:WHC.OrderWater.Commons.CookieManger.GetCK(System.Net.CookieCollection)">
            <summary>
            从CookieCollection中获取Cookie字符串
            </summary>
            <param name="cc">CookieCollection，一般用在WebRequest中</param>
            <returns>转换后的Cookie字符串</returns>
        </member>
        <member name="M:WHC.OrderWater.Commons.CookieManger.GetCK(System.String,System.String)">
            <summary>
            将Cookie字符串填充到CookieCollection中
            </summary>
            <param name="ck">Cookie字符串</param>
            <param name="url">Cookie的域</param>
            <returns>添加后的CookieCollection</returns>
        </member>
        <member name="M:WHC.OrderWater.Commons.CookieManger.GetDomains(System.String)">
            <summary>
            获取所有可能的Cookie域
            </summary>
            <param name="url">域的全称</param>
            <returns>所有可能的域</returns>
        </member>
        <member name="M:WHC.OrderWater.Commons.CookieManger.GetDomains(System.Windows.Forms.WebBrowser)">
            <summary>
            获取浏览器的所有可能的Cookie域
            </summary>
            <param name="browser">浏览器</param>
            <returns>所有可能的域</returns>
        </member>
        <member name="M:WHC.OrderWater.Commons.CookieManger.SetCKToBrowser(System.Windows.Forms.WebBrowser,System.String)">
            <summary>
            将定制的Cookie字符串发给浏览器
            </summary>
            <param name="browser">浏览器</param>
            <param name="ck">Cookie字符串</param>
        </member>
        <member name="M:WHC.OrderWater.Commons.CookieManger.SetCKAppendToCC(System.Net.CookieCollection,System.String,System.String)">
            <summary>
            将Cookie字符串描述的Cookie追加到CookieCoollection
            </summary>
            <param name="cc">CookieCoollection</param>
            <param name="ck">Cookie字符串</param>
            <param name="url">Cookie的域</param>
        </member>
        <member name="M:WHC.OrderWater.Commons.CookieManger.SetCKToSystem(System.String,System.String)">
            <summary>
            将Cookie字符串设置到系统中，便于浏览器使用
            </summary>
            <param name="ck">Cookie字符串</param>
            <param name="url">Cookie的域</param>
        </member>
        <member name="M:WHC.OrderWater.Commons.CookieManger.SetCKToSystem(System.Net.CookieCollection,System.String)">
            <summary>
            将CookieCollection中的Cookie设置到系统中，便于浏览器使用
            </summary>
            <param name="cc">CookieCollection</param>
            <param name="url">Cookie的域</param>
        </member>
        <member name="M:WHC.OrderWater.Commons.CookieManger.ClearCookiesFiles">
            <summary>
            清除系统的Cookie文件
            </summary>
        </member>
        <member name="M:WHC.OrderWater.Commons.CookieManger.ClearCookies(System.String,System.String)">
            <summary>
            清除系统指定的Cookie
            </summary>
            <param name="ck">指定的Cookie</param>
            <param name="url">Cookie的域</param>
        </member>
        <member name="M:WHC.OrderWater.Commons.CookieManger.ClearCookies(System.Windows.Forms.WebBrowser)">
            <summary>
            将浏览器中的Cookie清除
            </summary>
            <param name="browser">浏览器</param>
        </member>
        <member name="M:WHC.OrderWater.Commons.CookieManger.IncludeCK(System.Collections.Generic.List{System.String},System.String)">
            <summary>
            检查Cookie集合中是否包含指定的Cookie值
            </summary>
            <param name="cks">Cookie集合</param>
            <param name="ck">待判断的Cookie</param>
            <returns>Cookie集合中是否包含指定的Cookie</returns>
        </member>
        <member name="T:WHC.OrderWater.Commons.Collections.SyncList`1">
            <summary>
            Syncronized List
            </summary>
            <typeparam name="T">The type of elements in the list.</typeparam>
        </member>
        <member name="T:WHC.OrderWater.Commons.Collections.List`1">
            <summary>
            Represents a strongly typed list of objects that 
            can be accessed by index. Provides methods to search, sort, 
            and manipulate lists. 
            </summary>
            <typeparam name="T">The type of elements in the list.</typeparam>
        </member>
        <member name="T:WHC.OrderWater.Commons.Collections.ICloneable`1">
            <summary>Defines a generalized clone method that a 
            value type or class implements to create a 
            type-specific clone method to supports cloning.</summary>
            <typeparam name="T">The type of object to clone.</typeparam>
        </member>
        <member name="M:WHC.OrderWater.Commons.Collections.ICloneable`1.Clone">
            <summary>Creates a new object that is a copy of the current instance.</summary>
            <returns>A new object that is a copy of this instance. </returns>
        </member>
        <member name="M:WHC.OrderWater.Commons.Collections.List`1.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:WHC.OrderWater.Commons.Collections.List`1"></see> class that is empty and has the default initial capacity.
            </summary>
        </member>
        <member name="M:WHC.OrderWater.Commons.Collections.List`1.#ctor(System.Collections.Generic.IEnumerable{`0})">
            <summary>
            Initializes a new instance of the <see cref="T:WHC.OrderWater.Commons.Collections.List`1"></see> class that contains elements copied from the specified collection and has sufficient capacity to accommodate the number of elements copied.
            </summary>
            <param name="collection">The collection whose elements are copied to the new list.</param>
            <exception cref="T:System.ArgumentNullException">collection is null.</exception>
        </member>
        <member name="M:WHC.OrderWater.Commons.Collections.List`1.#ctor(System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:WHC.OrderWater.Commons.Collections.List`1"></see> class that is empty and has the specified initial capacity.
            </summary>
            <param name="capacity">The number of elements that the new list can initially store.</param>
            <exception cref="T:System.ArgumentOutOfRangeException">capacity is less than 0. </exception>
        </member>
        <member name="M:WHC.OrderWater.Commons.Collections.List`1.Synchronized``1(WHC.OrderWater.Commons.Collections.List{``0})">
            <summary>Returns an list wrapper that is synchronized (thread safe).</summary>
            <returns>An List wrapper that is synchronized (thread safe).</returns>
            <param name="list">The list to synchronize. </param>
            <exception cref="T:System.ArgumentNullException">list is null. </exception>
            <typeparam name="V">The type of elements in the list.</typeparam>
        </member>
        <member name="M:WHC.OrderWater.Commons.Collections.List`1.Repeat``1(``0,System.Int32)">
            <summary>Returns an <see cref="T:System.Collections.ArrayList"></see> whose elements are copies of the specified value.</summary>
            <returns>An <see cref="T:System.Collections.ArrayList"></see> with count number of elements, all of which are copies of value.</returns>
            <param name="count">The number of times value should be copied. </param>
            <param name="value">The <see cref="T:System.Object"></see> to copy multiple times in the new <see cref="T:System.Collections.ArrayList"></see>. The value can be null. </param>
            <exception cref="T:System.ArgumentOutOfRangeException">count is less than zero. </exception>
            <typeparam name="V">The type of elements in the list.</typeparam>
        </member>
        <member name="M:WHC.OrderWater.Commons.Collections.List`1.Clone">
            <summary>
            Creates a new object that is a copy of the current instance.
            </summary>
            <returns>
            A new object that is a copy of this instance.
            </returns>
        </member>
        <member name="M:WHC.OrderWater.Commons.Collections.List`1.System#ICloneable#Clone">
            <summary>
            Creates a new object that is a copy of the current instance.
            </summary>
            <returns>
            A new object that is a copy of this instance.
            </returns>
        </member>
        <member name="P:WHC.OrderWater.Commons.Collections.List`1.IsSynchronized">
            <summary>
            Gets a value indicating whether access to the <see cref="T:System.Collections.ICollection"></see> is synchronized (thread safe).
            </summary>
            <value>true if access to the Dictionary is synchronized (thread safe); otherwise, false. The default is false. </value>
            <returns>true if access to the <see cref="T:System.Collections.ICollection"></see> is synchronized (thread safe); otherwise, false.</returns>
        </member>
        <member name="M:WHC.OrderWater.Commons.Collections.SyncList`1.#ctor(WHC.OrderWater.Commons.Collections.List{`0})">
            <summary>
            Initializes a new instance of the <see cref="T:SyncList"/> class.
            </summary>
            <param name="list">The list.</param>
        </member>
        <member name="M:WHC.OrderWater.Commons.Collections.SyncList`1.Add(`0)">
            <summary>Adds an object to the end of the <see cref="T:System.Collections.Generic.List`1"></see>.</summary>
            <param name="item">The object to be added to the end of the <see cref="T:System.Collections.Generic.List`1"></see>. The value can be null for reference types.</param>
        </member>
        <member name="M:WHC.OrderWater.Commons.Collections.SyncList`1.AddRange(System.Collections.Generic.IEnumerable{`0})">
            <summary>Adds the elements of the specified collection to the end of the <see cref="T:System.Collections.Generic.List`1"></see>.</summary>
            <param name="collection">The collection whose elements should be added to the end of the <see cref="T:System.Collections.Generic.List`1"></see>. The collection itself cannot be null, but it can contain elements that are null, if type TKey is a reference type.</param>
            <exception cref="T:System.ArgumentNullException">collection is null.</exception>
        </member>
        <member name="M:WHC.OrderWater.Commons.Collections.SyncList`1.AsReadOnly">
            <summary>
            Returns a read-only <see cref="T:System.Collections.Generic.IList`1"></see> wrapper for the current collection.
            </summary>
            <returns>
            A <see cref="T:System.Collections.ObjectModel.ReadOnlyCollection`1"></see> that acts as a read-only wrapper around the current <see cref="T:System.Collections.Generic.List`1"></see>.
            </returns>
        </member>
        <member name="M:WHC.OrderWater.Commons.Collections.SyncList`1.Clear">
            <summary>Removes all elements from the <see cref="T:System.Collections.Generic.List`1"></see>.</summary>
        </member>
        <member name="M:WHC.OrderWater.Commons.Collections.SyncList`1.Contains(`0)">
            <summary>Determines whether an element is in the <see cref="T:System.Collections.Generic.List`1"></see>.</summary>
            <returns>true if item is found in the <see cref="T:System.Collections.Generic.List`1"></see>; otherwise, false.</returns>
            <param name="item">The object to locate in the <see cref="T:System.Collections.Generic.List`1"></see>. The value can be null for reference types.</param>
        </member>
        <member name="M:WHC.OrderWater.Commons.Collections.SyncList`1.ConvertAll``1(System.Converter{`0,``0})">
            <summary>Converts the elements in the current <see cref="T:System.Collections.Generic.List`1"></see> to another type, and returns a list containing the converted elements.</summary>
            <returns>A <see cref="T:System.Collections.Generic.List`1"></see> of the target type containing the converted elements from the current <see cref="T:System.Collections.Generic.List`1"></see>.</returns>
            <param name="converter">A delegate that converts each element from one type to another type.</param>
            <exception cref="T:System.ArgumentNullException">converter is null.</exception>
        </member>
        <member name="M:WHC.OrderWater.Commons.Collections.SyncList`1.CopyTo(`0[])">
            <summary>Copies the entire <see cref="T:System.Collections.Generic.List`1"></see> to a compatible one-dimensional array, starting at the beginning of the target array.</summary>
            <param name="array">The one-dimensional <see cref="T:System.Array"></see> that is the destination of the elements copied from <see cref="T:System.Collections.Generic.List`1"></see>. The <see cref="T:System.Array"></see> must have zero-based indexing.</param>
            <exception cref="T:System.ArgumentException">The number of elements in the source <see cref="T:System.Collections.Generic.List`1"></see> is greater than the number of elements that the destination array can contain.</exception>
            <exception cref="T:System.ArgumentNullException">array is null.</exception>
        </member>
        <member name="M:WHC.OrderWater.Commons.Collections.SyncList`1.CopyTo(`0[],System.Int32)">
            <summary>Copies the entire <see cref="T:System.Collections.Generic.List`1"></see> to a compatible one-dimensional array, starting at the specified index of the target array.</summary>
            <param name="array">The one-dimensional <see cref="T:System.Array"></see> that is the destination of the elements copied from <see cref="T:System.Collections.Generic.List`1"></see>. The <see cref="T:System.Array"></see> must have zero-based indexing.</param>
            <param name="arrayIndex">The zero-based index in array at which copying begins.</param>
            <exception cref="T:System.ArgumentException">arrayIndex is equal to or greater than the length of array.-or-The number of elements in the source <see cref="T:System.Collections.Generic.List`1"></see> is greater than the available space from arrayIndex to the end of the destination array.</exception>
            <exception cref="T:System.ArgumentOutOfRangeException">arrayIndex is less than 0.</exception>
            <exception cref="T:System.ArgumentNullException">array is null.</exception>
        </member>
        <member name="M:WHC.OrderWater.Commons.Collections.SyncList`1.CopyTo(System.Int32,`0[],System.Int32,System.Int32)">
            <summary>Copies a range of elements from the <see cref="T:System.Collections.Generic.List`1"></see> to a compatible one-dimensional array, starting at the specified index of the target array.</summary>
            <param name="array">The one-dimensional <see cref="T:System.Array"></see> that is the destination of the elements copied from <see cref="T:System.Collections.Generic.List`1"></see>. The <see cref="T:System.Array"></see> must have zero-based indexing.</param>
            <param name="count">The number of elements to copy.</param>
            <param name="arrayIndex">The zero-based index in array at which copying begins.</param>
            <param name="index">The zero-based index in the source <see cref="T:System.Collections.Generic.List`1"></see> at which copying begins.</param>
            <exception cref="T:System.ArgumentNullException">array is null. </exception>
            <exception cref="T:System.ArgumentOutOfRangeException">index is less than 0.-or-arrayIndex is less than 0.-or-count is less than 0. </exception>
            <exception cref="T:System.ArgumentException">index is equal to or greater than the <see cref="P:System.Collections.Generic.List&lt;T&gt;.Count"></see> of the source <see cref="T:System.Collections.Generic.List`1"></see>.-or-arrayIndex is equal to or greater than the length of array.-or-The number of elements from index to the end of the source <see cref="T:System.Collections.Generic.List`1"></see> is greater than the available space from arrayIndex to the end of the destination array. </exception>
        </member>
        <member name="M:WHC.OrderWater.Commons.Collections.SyncList`1.Exists(System.Predicate{`0})">
            <summary>Determines whether the <see cref="T:System.Collections.Generic.List`1"></see> contains elements that match the conditions defined by the specified predicate.</summary>
            <returns>true if the <see cref="T:System.Collections.Generic.List`1"></see> contains one or more elements that match the conditions defined by the specified predicate; otherwise, false.</returns>
            <param name="match">The <see cref="T:System.Predicate`1"></see> delegate that defines the conditions of the elements to search for.</param>
            <exception cref="T:System.ArgumentNullException">match is null.</exception>
        </member>
        <member name="M:WHC.OrderWater.Commons.Collections.SyncList`1.Find(System.Predicate{`0})">
            <summary>Searches for an element that matches the conditions defined by the specified predicate, and returns the first occurrence within the entire <see cref="T:System.Collections.Generic.List`1"></see>.</summary>
            <returns>The first element that matches the conditions defined by the specified predicate, if found; otherwise, the default value for type TKey.</returns>
            <param name="match">The <see cref="T:System.Predicate`1"></see> delegate that defines the conditions of the element to search for.</param>
            <exception cref="T:System.ArgumentNullException">match is null.</exception>
        </member>
        <member name="M:WHC.OrderWater.Commons.Collections.SyncList`1.FindAll(System.Predicate{`0})">
            <summary>Retrieves the all the elements that match the conditions defined by the specified predicate.</summary>
            <returns>A <see cref="T:System.Collections.Generic.List`1"></see> containing all the elements that match the conditions defined by the specified predicate, if found; otherwise, an empty <see cref="T:System.Collections.Generic.List`1"></see>.</returns>
            <param name="match">The <see cref="T:System.Predicate`1"></see> delegate that defines the conditions of the elements to search for.</param>
            <exception cref="T:System.ArgumentNullException">match is null.</exception>
        </member>
        <member name="M:WHC.OrderWater.Commons.Collections.SyncList`1.FindIndex(System.Predicate{`0})">
            <summary>Searches for an element that matches the conditions defined by the specified predicate, and returns the zero-based index of the first occurrence within the entire <see cref="T:System.Collections.Generic.List`1"></see>.</summary>
            <returns>The zero-based index of the first occurrence of an element that matches the conditions defined by match, if found; otherwise, –1.</returns>
            <param name="match">The <see cref="T:System.Predicate`1"></see> delegate that defines the conditions of the element to search for.</param>
            <exception cref="T:System.ArgumentNullException">match is null.</exception>
        </member>
        <member name="M:WHC.OrderWater.Commons.Collections.SyncList`1.FindIndex(System.Int32,System.Predicate{`0})">
            <summary>Searches for an element that matches the conditions defined by the specified predicate, and returns the zero-based index of the first occurrence within the range of elements in the <see cref="T:System.Collections.Generic.List`1"></see> that extends from the specified index to the last element.</summary>
            <returns>The zero-based index of the first occurrence of an element that matches the conditions defined by match, if found; otherwise, –1.</returns>
            <param name="startIndex">The zero-based starting index of the search.</param>
            <param name="match">The <see cref="T:System.Predicate`1"></see> delegate that defines the conditions of the element to search for.</param>
            <exception cref="T:System.ArgumentOutOfRangeException">startIndex is outside the range of valid indexes for the <see cref="T:System.Collections.Generic.List`1"></see>.</exception>
            <exception cref="T:System.ArgumentNullException">match is null.</exception>
        </member>
        <member name="M:WHC.OrderWater.Commons.Collections.SyncList`1.FindIndex(System.Int32,System.Int32,System.Predicate{`0})">
            <summary>Searches for an element that matches the conditions defined by the specified predicate, and returns the zero-based index of the first occurrence within the range of elements in the <see cref="T:System.Collections.Generic.List`1"></see> that starts at the specified index and contains the specified number of elements.</summary>
            <returns>The zero-based index of the first occurrence of an element that matches the conditions defined by match, if found; otherwise, –1.</returns>
            <param name="count">The number of elements in the section to search.</param>
            <param name="startIndex">The zero-based starting index of the search.</param>
            <param name="match">The <see cref="T:System.Predicate`1"></see> delegate that defines the conditions of the element to search for.</param>
            <exception cref="T:System.ArgumentOutOfRangeException">startIndex is outside the range of valid indexes for the <see cref="T:System.Collections.Generic.List`1"></see>.-or-count is less than 0.-or-startIndex and count do not specify a valid section in the <see cref="T:System.Collections.Generic.List`1"></see>.</exception>
            <exception cref="T:System.ArgumentNullException">match is null.</exception>
        </member>
        <member name="M:WHC.OrderWater.Commons.Collections.SyncList`1.FindLast(System.Predicate{`0})">
            <summary>Searches for an element that matches the conditions defined by the specified predicate, and returns the last occurrence within the entire <see cref="T:System.Collections.Generic.List`1"></see>.</summary>
            <returns>The last element that matches the conditions defined by the specified predicate, if found; otherwise, the default value for type TKey.</returns>
            <param name="match">The <see cref="T:System.Predicate`1"></see> delegate that defines the conditions of the element to search for.</param>
            <exception cref="T:System.ArgumentNullException">match is null.</exception>
        </member>
        <member name="M:WHC.OrderWater.Commons.Collections.SyncList`1.FindLastIndex(System.Predicate{`0})">
            <summary>Searches for an element that matches the conditions defined by the specified predicate, and returns the zero-based index of the last occurrence within the entire <see cref="T:System.Collections.Generic.List`1"></see>.</summary>
            <returns>The zero-based index of the last occurrence of an element that matches the conditions defined by match, if found; otherwise, –1.</returns>
            <param name="match">The <see cref="T:System.Predicate`1"></see> delegate that defines the conditions of the element to search for.</param>
            <exception cref="T:System.ArgumentNullException">match is null.</exception>
        </member>
        <member name="M:WHC.OrderWater.Commons.Collections.SyncList`1.FindLastIndex(System.Int32,System.Predicate{`0})">
            <summary>Searches for an element that matches the conditions defined by the specified predicate, and returns the zero-based index of the last occurrence within the range of elements in the <see cref="T:System.Collections.Generic.List`1"></see> that extends from the first element to the specified index.</summary>
            <returns>The zero-based index of the last occurrence of an element that matches the conditions defined by match, if found; otherwise, –1.</returns>
            <param name="startIndex">The zero-based starting index of the backward search.</param>
            <param name="match">The <see cref="T:System.Predicate`1"></see> delegate that defines the conditions of the element to search for.</param>
            <exception cref="T:System.ArgumentOutOfRangeException">startIndex is outside the range of valid indexes for the <see cref="T:System.Collections.Generic.List`1"></see>.</exception>
            <exception cref="T:System.ArgumentNullException">match is null.</exception>
        </member>
        <member name="M:WHC.OrderWater.Commons.Collections.SyncList`1.FindLastIndex(System.Int32,System.Int32,System.Predicate{`0})">
            <summary>Searches for an element that matches the conditions defined by the specified predicate, and returns the zero-based index of the last occurrence within the range of elements in the <see cref="T:System.Collections.Generic.List`1"></see> that contains the specified number of elements and ends at the specified index.</summary>
            <returns>The zero-based index of the last occurrence of an element that matches the conditions defined by match, if found; otherwise, –1.</returns>
            <param name="count">The number of elements in the section to search.</param>
            <param name="startIndex">The zero-based starting index of the backward search.</param>
            <param name="match">The <see cref="T:System.Predicate`1"></see> delegate that defines the conditions of the element to search for.</param>
            <exception cref="T:System.ArgumentOutOfRangeException">startIndex is outside the range of valid indexes for the <see cref="T:System.Collections.Generic.List`1"></see>.-or-count is less than 0.-or-startIndex and count do not specify a valid section in the <see cref="T:System.Collections.Generic.List`1"></see>.</exception>
            <exception cref="T:System.ArgumentNullException">match is null.</exception>
        </member>
        <member name="M:WHC.OrderWater.Commons.Collections.SyncList`1.ForEach(System.Action{`0})">
            <summary>Performs the specified action on each element of the <see cref="T:System.Collections.Generic.List`1"></see>.</summary>
            <param name="action">The <see cref="T:System.Action`1"></see> delegate to perform on each element of the <see cref="T:System.Collections.Generic.List`1"></see>.</param>
            <exception cref="T:System.ArgumentNullException">action is null.</exception>
        </member>
        <member name="M:WHC.OrderWater.Commons.Collections.SyncList`1.GetEnumerator">
            <summary>Returns an enumerator that iterates through the <see cref="T:System.Collections.Generic.List`1"></see>.</summary>
            <returns>A <see cref="T:System.Collections.Generic.List`1.Enumerator"></see> for the <see cref="T:System.Collections.Generic.List`1"></see>.</returns>
        </member>
        <member name="M:WHC.OrderWater.Commons.Collections.SyncList`1.GetRange(System.Int32,System.Int32)">
            <summary>Creates a shallow copy of a range of elements in the source <see cref="T:System.Collections.Generic.List`1"></see>.</summary>
            <returns>A shallow copy of a range of elements in the source <see cref="T:System.Collections.Generic.List`1"></see>.</returns>
            <param name="count">The number of elements in the range.</param>
            <param name="index">The zero-based <see cref="T:System.Collections.Generic.List`1"></see> index at which the range starts.</param>
            <exception cref="T:System.ArgumentOutOfRangeException">index is less than 0.-or-count is less than 0.</exception>
            <exception cref="T:System.ArgumentException">index and count do not denote a valid range of elements in the <see cref="T:System.Collections.Generic.List`1"></see>.</exception>
        </member>
        <member name="M:WHC.OrderWater.Commons.Collections.SyncList`1.IndexOf(`0)">
            <summary>Searches for the specified object and returns the zero-based index of the first occurrence within the entire <see cref="T:System.Collections.Generic.List`1"></see>.</summary>
            <returns>The zero-based index of the first occurrence of item within the entire <see cref="T:System.Collections.Generic.List`1"></see>, if found; otherwise, –1.</returns>
            <param name="item">The object to locate in the <see cref="T:System.Collections.Generic.List`1"></see>. The value can be null for reference types.</param>
        </member>
        <member name="M:WHC.OrderWater.Commons.Collections.SyncList`1.IndexOf(`0,System.Int32)">
            <summary>Searches for the specified object and returns the zero-based index of the first occurrence within the range of elements in the <see cref="T:System.Collections.Generic.List`1"></see> that extends from the specified index to the last element.</summary>
            <returns>The zero-based index of the first occurrence of item within the range of elements in the <see cref="T:System.Collections.Generic.List`1"></see> that extends from index to the last element, if found; otherwise, –1.</returns>
            <param name="item">The object to locate in the <see cref="T:System.Collections.Generic.List`1"></see>. The value can be null for reference types.</param>
            <param name="index">The zero-based starting index of the search.</param>
            <exception cref="T:System.ArgumentOutOfRangeException">index is outside the range of valid indexes for the <see cref="T:System.Collections.Generic.List`1"></see>.</exception>
        </member>
        <member name="M:WHC.OrderWater.Commons.Collections.SyncList`1.IndexOf(`0,System.Int32,System.Int32)">
            <summary>Searches for the specified object and returns the zero-based index of the first occurrence within the range of elements in the <see cref="T:System.Collections.Generic.List`1"></see> that starts at the specified index and contains the specified number of elements.</summary>
            <returns>The zero-based index of the first occurrence of item within the range of elements in the <see cref="T:System.Collections.Generic.List`1"></see> that starts at index and contains count number of elements, if found; otherwise, –1.</returns>
            <param name="count">The number of elements in the section to search.</param>
            <param name="item">The object to locate in the <see cref="T:System.Collections.Generic.List`1"></see>. The value can be null for reference types.</param>
            <param name="index">The zero-based starting index of the search.</param>
            <exception cref="T:System.ArgumentOutOfRangeException">index is outside the range of valid indexes for the <see cref="T:System.Collections.Generic.List`1"></see>.-or-count is less than 0.-or-index and count do not specify a valid section in the <see cref="T:System.Collections.Generic.List`1"></see>.</exception>
        </member>
        <member name="M:WHC.OrderWater.Commons.Collections.SyncList`1.Insert(System.Int32,`0)">
            <summary>Inserts an element into the <see cref="T:System.Collections.Generic.List`1"></see> at the specified index.</summary>
            <param name="item">The object to insert. The value can be null for reference types.</param>
            <param name="index">The zero-based index at which item should be inserted.</param>
            <exception cref="T:System.ArgumentOutOfRangeException">index is less than 0.-or-index is greater than <see cref="P:System.Collections.Generic.List&lt;T&gt;.Count"></see>.</exception>
        </member>
        <member name="M:WHC.OrderWater.Commons.Collections.SyncList`1.InsertRange(System.Int32,System.Collections.Generic.IEnumerable{`0})">
            <summary>Inserts the elements of a collection into the <see cref="T:System.Collections.Generic.List`1"></see> at the specified index.</summary>
            <param name="collection">The collection whose elements should be inserted into the <see cref="T:System.Collections.Generic.List`1"></see>. The collection itself cannot be null, but it can contain elements that are null, if type TKey is a reference type.</param>
            <param name="index">The zero-based index at which the new elements should be inserted.</param>
            <exception cref="T:System.ArgumentOutOfRangeException">index is less than 0.-or-index is greater than <see cref="P:System.Collections.Generic.List&lt;T&gt;.Count"></see>.</exception>
            <exception cref="T:System.ArgumentNullException">collection is null.</exception>
        </member>
        <member name="M:WHC.OrderWater.Commons.Collections.SyncList`1.LastIndexOf(`0)">
            <summary>Searches for the specified object and returns the zero-based index of the last occurrence within the entire <see cref="T:System.Collections.Generic.List`1"></see>.</summary>
            <returns>The zero-based index of the last occurrence of item within the entire the <see cref="T:System.Collections.Generic.List`1"></see>, if found; otherwise, –1.</returns>
            <param name="item">The object to locate in the <see cref="T:System.Collections.Generic.List`1"></see>. The value can be null for reference types.</param>
        </member>
        <member name="M:WHC.OrderWater.Commons.Collections.SyncList`1.LastIndexOf(`0,System.Int32)">
            <summary>Searches for the specified object and returns the zero-based index of the last occurrence within the range of elements in the <see cref="T:System.Collections.Generic.List`1"></see> that extends from the first element to the specified index.</summary>
            <returns>The zero-based index of the last occurrence of item within the range of elements in the <see cref="T:System.Collections.Generic.List`1"></see> that extends from the first element to index, if found; otherwise, –1.</returns>
            <param name="item">The object to locate in the <see cref="T:System.Collections.Generic.List`1"></see>. The value can be null for reference types.</param>
            <param name="index">The zero-based starting index of the backward search.</param>
            <exception cref="T:System.ArgumentOutOfRangeException">index is outside the range of valid indexes for the <see cref="T:System.Collections.Generic.List`1"></see>. </exception>
        </member>
        <member name="M:WHC.OrderWater.Commons.Collections.SyncList`1.LastIndexOf(`0,System.Int32,System.Int32)">
            <summary>Searches for the specified object and returns the zero-based index of the last occurrence within the range of elements in the <see cref="T:System.Collections.Generic.List`1"></see> that contains the specified number of elements and ends at the specified index.</summary>
            <returns>The zero-based index of the last occurrence of item within the range of elements in the <see cref="T:System.Collections.Generic.List`1"></see> that contains count number of elements and ends at index, if found; otherwise, –1.</returns>
            <param name="count">The number of elements in the section to search.</param>
            <param name="item">The object to locate in the <see cref="T:System.Collections.Generic.List`1"></see>. The value can be null for reference types.</param>
            <param name="index">The zero-based starting index of the backward search.</param>
            <exception cref="T:System.ArgumentOutOfRangeException">index is outside the range of valid indexes for the <see cref="T:System.Collections.Generic.List`1"></see>.-or-count is less than 0.-or-index and count do not specify a valid section in the <see cref="T:System.Collections.Generic.List`1"></see>. </exception>
        </member>
        <member name="M:WHC.OrderWater.Commons.Collections.SyncList`1.Remove(`0)">
            <summary>Removes the first occurrence of a specific object from the <see cref="T:System.Collections.Generic.List`1"></see>.</summary>
            <returns>true if item is successfully removed; otherwise, false.  This method also returns false if item was not found in the <see cref="T:System.Collections.Generic.List`1"></see>.</returns>
            <param name="item">The object to remove from the <see cref="T:System.Collections.Generic.List`1"></see>. The value can be null for reference types.</param>
        </member>
        <member name="M:WHC.OrderWater.Commons.Collections.SyncList`1.RemoveAll(System.Predicate{`0})">
            <summary>Removes the all the elements that match the conditions defined by the specified predicate.</summary>
            <returns>The number of elements removed from the <see cref="T:System.Collections.Generic.List`1"></see> .</returns>
            <param name="match">The <see cref="T:System.Predicate`1"></see> delegate that defines the conditions of the elements to remove.</param>
            <exception cref="T:System.ArgumentNullException">match is null.</exception>
        </member>
        <member name="M:WHC.OrderWater.Commons.Collections.SyncList`1.RemoveAt(System.Int32)">
            <summary>Removes the element at the specified index of the <see cref="T:System.Collections.Generic.List`1"></see>.</summary>
            <param name="index">The zero-based index of the element to remove.</param>
            <exception cref="T:System.ArgumentOutOfRangeException">index is less than 0.-or-index is equal to or greater than <see cref="P:System.Collections.Generic.List&lt;T&gt;.Count"></see>.</exception>
        </member>
        <member name="M:WHC.OrderWater.Commons.Collections.SyncList`1.RemoveRange(System.Int32,System.Int32)">
            <summary>Removes a range of elements from the <see cref="T:System.Collections.Generic.List`1"></see>.</summary>
            <param name="count">The number of elements to remove.</param>
            <param name="index">The zero-based starting index of the range of elements to remove.</param>
            <exception cref="T:System.ArgumentOutOfRangeException">index is less than 0.-or-count is less than 0.</exception>
            <exception cref="T:System.ArgumentException">index and count do not denote a valid range of elements in the <see cref="T:System.Collections.Generic.List`1"></see>.</exception>
        </member>
        <member name="M:WHC.OrderWater.Commons.Collections.SyncList`1.Reverse">
            <summary>Reverses the order of the elements in the entire <see cref="T:System.Collections.Generic.List`1"></see>.</summary>
        </member>
        <member name="M:WHC.OrderWater.Commons.Collections.SyncList`1.Reverse(System.Int32,System.Int32)">
            <summary>Reverses the order of the elements in the specified range.</summary>
            <param name="count">The number of elements in the range to reverse.</param>
            <param name="index">The zero-based starting index of the range to reverse.</param>
            <exception cref="T:System.ArgumentException">index and count do not denote a valid range of elements in the <see cref="T:System.Collections.Generic.List`1"></see>. </exception>
            <exception cref="T:System.ArgumentOutOfRangeException">index is less than 0.-or-count is less than 0. </exception>
        </member>
        <member name="M:WHC.OrderWater.Commons.Collections.SyncList`1.Sort">
            <summary>Sorts the elements in the entire <see cref="T:System.Collections.Generic.List`1"></see> using the default comparer.</summary>
            <exception cref="T:System.InvalidOperationException">The default comparer <see cref="P:System.Collections.Generic.Comparer&lt;T&gt;.Default"></see> cannot find an implementation of the <see cref="T:System.IComparable`1"></see> generic interface or the <see cref="T:System.IComparable"></see> interface for type TKey.</exception>
        </member>
        <member name="M:WHC.OrderWater.Commons.Collections.SyncList`1.Sort(System.Collections.Generic.IComparer{`0})">
            <summary>Sorts the elements in the entire <see cref="T:System.Collections.Generic.List`1"></see> using the specified comparer.</summary>
            <param name="comparer">The <see cref="T:System.Collections.Generic.IComparer`1"></see> implementation to use when comparing elements, or null to use the default comparer <see cref="P:System.Collections.Generic.Comparer&lt;T&gt;.Default"></see>.</param>
            <exception cref="T:System.ArgumentException">The implementation of comparer caused an error during the sort. For example, comparer might not return 0 when comparing an item with itself.</exception>
            <exception cref="T:System.InvalidOperationException">comparer is null, and the default comparer <see cref="P:System.Collections.Generic.Comparer&lt;T&gt;.Default"></see> cannot find implementation of the <see cref="T:System.IComparable`1"></see> generic interface or the <see cref="T:System.IComparable"></see> interface for type TKey.</exception>
        </member>
        <member name="M:WHC.OrderWater.Commons.Collections.SyncList`1.Sort(System.Comparison{`0})">
            <summary>Sorts the elements in the entire <see cref="T:System.Collections.Generic.List`1"></see> using the specified <see cref="T:System.Comparison`1"></see>.</summary>
            <param name="comparison">The <see cref="T:System.Comparison`1"></see> to use when comparing elements.</param>
            <exception cref="T:System.ArgumentException">The implementation of comparison caused an error during the sort. For example, comparison might not return 0 when comparing an item with itself.</exception>
            <exception cref="T:System.ArgumentNullException">comparison is null.</exception>
        </member>
        <member name="M:WHC.OrderWater.Commons.Collections.SyncList`1.Sort(System.Int32,System.Int32,System.Collections.Generic.IComparer{`0})">
            <summary>Sorts the elements in a range of elements in <see cref="T:System.Collections.Generic.List`1"></see> using the specified comparer.</summary>
            <param name="count">The length of the range to sort.</param>
            <param name="index">The zero-based starting index of the range to sort.</param>
            <param name="comparer">The <see cref="T:System.Collections.Generic.IComparer`1"></see> implementation to use when comparing elements, or null to use the default comparer <see cref="P:System.Collections.Generic.Comparer&lt;T&gt;.Default"></see>.</param>
            <exception cref="T:System.ArgumentException">index and count do not specify a valid range in the <see cref="T:System.Collections.Generic.List`1"></see>.-or-The implementation of comparer caused an error during the sort. For example, comparer might not return 0 when comparing an item with itself.</exception>
            <exception cref="T:System.ArgumentOutOfRangeException">index is less than 0.-or-count is less than 0.</exception>
            <exception cref="T:System.InvalidOperationException">comparer is null, and the default comparer <see cref="P:System.Collections.Generic.Comparer&lt;T&gt;.Default"></see> cannot find implementation of the <see cref="T:System.IComparable`1"></see> generic interface or the <see cref="T:System.IComparable"></see> interface for type TKey.</exception>
        </member>
        <member name="M:WHC.OrderWater.Commons.Collections.SyncList`1.ToArray">
            <summary>Copies the elements of the <see cref="T:System.Collections.Generic.List`1"></see> to a new array.</summary>
            <returns>An array containing copies of the elements of the <see cref="T:System.Collections.Generic.List`1"></see>.</returns>
        </member>
        <member name="M:WHC.OrderWater.Commons.Collections.SyncList`1.TrimExcess">
            <summary>Sets the capacity to the actual number of elements in the <see cref="T:System.Collections.Generic.List`1"></see>, if that number is less than a threshold value.</summary>
        </member>
        <member name="M:WHC.OrderWater.Commons.Collections.SyncList`1.TrueForAll(System.Predicate{`0})">
            <summary>Determines whether every element in the <see cref="T:System.Collections.Generic.List`1"></see> matches the conditions defined by the specified predicate.</summary>
            <returns>true if every element in the <see cref="T:System.Collections.Generic.List`1"></see> matches the conditions defined by the specified predicate; otherwise, false. If the list has no elements, the return value is true.</returns>
            <param name="match">The <see cref="T:System.Predicate`1"></see> delegate that defines the conditions to check against the elements.</param>
            <exception cref="T:System.ArgumentNullException">match is null.</exception>
        </member>
        <member name="P:WHC.OrderWater.Commons.Collections.SyncList`1.IsSynchronized">
            <summary>
            Gets a value indicating whether access to the <see cref="T:System.Collections.ICollection"></see> is synchronized (thread safe).
            </summary>
            <value>true if access to the Dictionary is synchronized (thread safe); otherwise, false. The default is false. </value>
            <returns>true if access to the <see cref="T:System.Collections.ICollection"></see> is synchronized (thread safe); otherwise, false.</returns>
        </member>
        <member name="P:WHC.OrderWater.Commons.Collections.SyncList`1.Capacity">
            <summary>Gets or sets the total number of elements the internal data structure can hold without resizing.</summary>
            <returns>The number of elements that the <see cref="T:System.Collections.Generic.List`1"></see> can contain before resizing is required.</returns>
            <exception cref="T:System.ArgumentOutOfRangeException"><see cref="P:System.Collections.Generic.List&lt;T&gt;.Capacity"></see> is set to a value that is less than <see cref="P:System.Collections.Generic.List&lt;T&gt;.Count"></see>. </exception>
        </member>
        <member name="P:WHC.OrderWater.Commons.Collections.SyncList`1.Count">
            <summary>Gets the number of elements actually contained in the <see cref="T:System.Collections.Generic.List`1"></see>.</summary>
            <returns>The number of elements actually contained in the <see cref="T:System.Collections.Generic.List`1"></see>.</returns>
        </member>
        <member name="P:WHC.OrderWater.Commons.Collections.SyncList`1.Item(System.Int32)">
            <summary>Gets or sets the element at the specified index.</summary>
            <returns>The element at the specified index.</returns>
            <param name="index">The zero-based index of the element to get or set.</param>
            <exception cref="T:System.ArgumentOutOfRangeException">index is less than 0.-or-index is equal to or greater than <see cref="P:System.Collections.Generic.List&lt;T&gt;.Count"></see>. </exception>
        </member>
        <member name="T:WHC.OrderWater.Commons.MyFileSystemWatcher">
            <summary>
            坚实文件变化的类，包括创建、修改、删除等
            <code>
                        MyFileSystemWatcher fsw = new MyFileSystemWatcher(@"C:\Test", "Test.txt");
                        fsw.Created += new System.IO.FileSystemEventHandler(fsw_Created);
                        fsw.Changed += new System.IO.FileSystemEventHandler(fsw_Changed);
                        fsw.Deleted += new System.IO.FileSystemEventHandler(fsw_Deleted);
                        fsw.Renamed += new System.IO.RenamedEventHandler(fsw_Renamed);
                        fsw.EnableRaisingEvents = true;
            </code>
            </summary>
        </member>
        <member name="M:WHC.OrderWater.Commons.MyFileSystemWatcher.InitializeMembers">
            <summary>
            This Method Initializes the private members.
            Interval is set to its default value of 100 millisecond
            FilterRecentEvents is set to true, _lastFileEvent dictionary is initialized
            We subscribe to the base class events.
            </summary>
        </member>
        <member name="M:WHC.OrderWater.Commons.MyFileSystemWatcher.HasAnotherFileEventOccuredRecently(System.String)">
            <summary>
            This method searches the dictionary to find out when the last event occured 
            for a particular file. If that event occured within the specified timespan
            it returns true, else false
            </summary>
            <param name="FileName">The filename to be checked</param>
            <returns>True if an event has occured within the specified interval, False otherwise</returns>
        </member>
        <member name="P:WHC.OrderWater.Commons.MyFileSystemWatcher.Interval">
            <summary>
            Interval, in milliseconds, within which events are considered "recent"
            </summary>
        </member>
        <member name="P:WHC.OrderWater.Commons.MyFileSystemWatcher.FilterRecentEvents">
            <summary>
            Allows user to set whether to filter recent events. If this is set a false,
            this class behaves like System.IO.FileSystemWatcher class
            </summary>
        </member>
        <member name="T:WHC.OrderWater.Commons.FullscreenHelper">
            <summary>
            窗体全屏操作辅助类
            </summary>
        </member>
        <member name="M:WHC.OrderWater.Commons.FullscreenHelper.#ctor(System.Windows.Forms.Form)">
            <summary>
            构造函数，传入需要进行全屏操作的窗体
            </summary>
            <param name="form">需要进行全屏操作的窗体</param>
        </member>
        <member name="M:WHC.OrderWater.Commons.FullscreenHelper.Toggle">
            <summary>
            全屏切换操作
            </summary>
        </member>
        <member name="P:WHC.OrderWater.Commons.FullscreenHelper.Fullscreen">
            <summary>
            设置窗体是否为全屏显示
            </summary>
        </member>
        <member name="M:WHC.OrderWater.Commons.EncodeHelper.DesEncrypt(System.String)">
            <summary>
            使用默认加密
            </summary>
            <param name="strText"></param>
            <returns></returns>
        </member>
        <member name="M:WHC.OrderWater.Commons.EncodeHelper.DesDecrypt(System.String)">
            <summary>
            使用默认解密
            </summary>
            <param name="strText"></param>
            <returns></returns>
        </member>
        <member name="M:WHC.OrderWater.Commons.EncodeHelper.DesEncrypt(System.String,System.String)">
            <summary> 
            Encrypt the string 
            Attention:key must be 8 bits 
            </summary> 
            <param name="strText">string</param> 
            <param name="strEncrKey">key</param> 
            <returns></returns> 
        </member>
        <member name="M:WHC.OrderWater.Commons.EncodeHelper.DesDecrypt(System.String,System.String)">
            <summary> 
            Decrypt string 
            Attention:key must be 8 bits 
            </summary> 
            <param name="strText">Decrypt string</param> 
            <param name="sDecrKey">key</param> 
            <returns>output string</returns> 
        </member>
        <member name="M:WHC.OrderWater.Commons.EncodeHelper.DesEncrypt(System.String,System.String,System.String)">
            <summary> 
            Encrypt files 
            Attention:key must be 8 bits 
            </summary> 
            <param name="m_InFilePath">Encrypt file path</param> 
            <param name="m_OutFilePath">output file</param> 
            <param name="strEncrKey">key</param> 
        </member>
        <member name="M:WHC.OrderWater.Commons.EncodeHelper.DesDecrypt(System.String,System.String,System.String)">
            <summary> 
            Decrypt files 
            Attention:key must be 8 bits 
            </summary> 
            <param name="m_InFilePath">Decrypt filepath</param> 
            <param name="m_OutFilePath">output filepath</param> 
            <param name="sDecrKey">key</param> 
        </member>
        <member name="M:WHC.OrderWater.Commons.EncodeHelper.AES_Encrypt(System.String)">
            <summary>
            对称加密算法AES RijndaelManaged加密(RijndaelManaged（AES）算法是块式加密算法)
            </summary>
            <param name="encryptString">待加密字符串</param>
            <returns>加密结果字符串</returns>
        </member>
        <member name="M:WHC.OrderWater.Commons.EncodeHelper.AES_Encrypt(System.String,System.String)">
            <summary>
            对称加密算法AES RijndaelManaged加密(RijndaelManaged（AES）算法是块式加密算法)
            </summary>
            <param name="encryptString">待加密字符串</param>
            <param name="encryptKey">加密密钥，须半角字符</param>
            <returns>加密结果字符串</returns>
        </member>
        <member name="M:WHC.OrderWater.Commons.EncodeHelper.AES_Decrypt(System.String)">
            <summary>
            对称加密算法AES RijndaelManaged解密字符串
            </summary>
            <param name="decryptString">待解密的字符串</param>
            <returns>解密成功返回解密后的字符串,失败返源串</returns>
        </member>
        <member name="M:WHC.OrderWater.Commons.EncodeHelper.AES_Decrypt(System.String,System.String)">
            <summary>
            对称加密算法AES RijndaelManaged解密字符串
            </summary>
            <param name="decryptString">待解密的字符串</param>
            <param name="decryptKey">解密密钥,和加密密钥相同</param>
            <returns>解密成功返回解密后的字符串,失败返回空</returns>
        </member>
        <member name="M:WHC.OrderWater.Commons.EncodeHelper.GetSubString(System.String,System.Int32,System.String)">
            <summary>
            按字节长度(按字节,一个汉字为2个字节)取得某字符串的一部分
            </summary>
            <param name="sourceString">源字符串</param>
            <param name="length">所取字符串字节长度</param>
            <param name="tailString">附加字符串(当字符串不够长时，尾部所添加的字符串，一般为"...")</param>
            <returns>某字符串的一部分</returns>
        </member>
        <member name="M:WHC.OrderWater.Commons.EncodeHelper.GetSubString(System.String,System.Int32,System.Int32,System.String)">
            <summary>
            按字节长度(按字节,一个汉字为2个字节)取得某字符串的一部分
            </summary>
            <param name="sourceString">源字符串</param>
            <param name="startIndex">索引位置，以0开始</param>
            <param name="length">所取字符串字节长度</param>
            <param name="tailString">附加字符串(当字符串不够长时，尾部所添加的字符串，一般为"...")</param>
            <returns>某字符串的一部分</returns>
        </member>
        <member name="M:WHC.OrderWater.Commons.EncodeHelper.AES_EncryptStrream(System.IO.FileStream,System.String)">
            <summary>
            加密文件流
            </summary>
            <param name="fs"></param>
            <returns></returns>
        </member>
        <member name="M:WHC.OrderWater.Commons.EncodeHelper.AES_DecryptStream(System.IO.FileStream,System.String)">
            <summary>
            解密文件流
            </summary>
            <param name="fs"></param>
            <returns></returns>
        </member>
        <member name="M:WHC.OrderWater.Commons.EncodeHelper.AES_EncryptFile(System.String,System.String)">
            <summary>
            对指定文件加密
            </summary>
            <param name="InputFile"></param>
            <param name="OutputFile"></param>
            <returns></returns>
        </member>
        <member name="M:WHC.OrderWater.Commons.EncodeHelper.AES_DecryptFile(System.String,System.String)">
            <summary>
            对指定的文件解压缩
            </summary>
            <param name="InputFile"></param>
            <param name="OutputFile"></param>
            <returns></returns>
        </member>
        <member name="M:WHC.OrderWater.Commons.EncodeHelper.Base64Encrypt(System.String)">
            <summary>
            Base64是一種使用64基的位置計數法。它使用2的最大次方來代表僅可列印的ASCII 字元。
            這使它可用來作為電子郵件的傳輸編碼。在Base64中的變數使用字元A-Z、a-z和0-9 ，
            這樣共有62個字元，用來作為開始的64個數字，最後兩個用來作為數字的符號在不同的
            系統中而不同。
            Base64加密
            </summary>
            <param name="str"></param>
            <returns></returns>
        </member>
        <member name="M:WHC.OrderWater.Commons.EncodeHelper.Base64Decrypt(System.String)">
            <summary>
            Base64解密
            </summary>
            <param name="str"></param>
            <returns></returns>
        </member>
        <member name="M:WHC.OrderWater.Commons.EncodeHelper.MD5Encrypt(System.String)">
            <summary> 
            MD5 Encrypt 
            </summary> 
            <param name="strText">text</param> 
            <returns>md5 Encrypt string</returns> 
        </member>
        <member name="M:WHC.OrderWater.Commons.EncodeHelper.EncyptMD5_3_16(System.String)">
            <summary>
            MD5 三次加密算法.计算过程: (QQ使用)
            1. 验证码转为大写
            2. 将密码使用这个方法进行三次加密后,与验证码进行叠加
            3. 然后将叠加后的内容再次MD5一下,得到最终验证码的值
            </summary>
            <param name="s"></param>
            <returns></returns>
        </member>
        <member name="M:WHC.OrderWater.Commons.EncodeHelper.SHA256(System.String)">
            <summary>
            SHA256函数
            </summary>
            <param name="str">原始字符串</param>
            <returns>SHA256结果(返回长度为44字节的字符串)</returns>
        </member>
        <member name="M:WHC.OrderWater.Commons.EncodeHelper.EncryptString(System.String)">
            <summary>
            加密字符串
            </summary>
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:WHC.OrderWater.Commons.EncodeHelper.DecryptString(System.String,System.Boolean)">
            <summary>
            解密加过密的字符串
            </summary>
            <param name="input"></param>
            <param name="throwException">解密失败是否抛异常</param>
            <returns></returns>
        </member>
        <member name="T:WHC.OrderWater.Commons.XmlConvertor">
            <summary>
            This class provides some utility methods to convert the xml and object.
            </summary>
        </member>
        <member name="M:WHC.OrderWater.Commons.XmlConvertor.XmlToObject(System.String,System.Type)">
            <summary>
            Converts the xml string to the specified object.
            </summary>
            <param name="xml">The xml string.</param>
            <param name="type">The object type.</param>
            <returns>The object deserialized from the xml string.</returns>
        </member>
        <member name="M:WHC.OrderWater.Commons.XmlConvertor.ObjectToXml(System.Object,System.Boolean)">
            <summary>
            Converts the object to xml string.
            </summary>
            <param name="obj">The object to be serialized</param>
            <param name="toBeIndented"><c>true</c> if wants the xml string was indented, otherwise <c>false</c>.</param>
            <returns>The xml string.</returns>
        </member>
        <member name="T:WHC.OrderWater.Commons.SafeNativeMethods">
            <summary>
            Has suppress unmanaged code attribute. These methods are safe and can be 
            used fairly safely and the caller is not needed to do full security reviews 
            even though no stack walk will be performed.
            </summary>
        </member>
        <member name="M:WHC.OrderWater.Commons.SafeNativeMethods.GetVersionEx(WHC.OrderWater.Commons.SafeNativeMethods.OSVERSIONINFO)">
            <summary>
            obtains extended information about the version of the operating system that is currently running.
            </summary>
            <param name="ver">data structure that the function fills with operating system version information</param>
            <returns>true if the function succeeds, else false.</returns>
        </member>
        <member name="M:WHC.OrderWater.Commons.SafeNativeMethods.GetVersionEx(WHC.OrderWater.Commons.SafeNativeMethods.OSVERSIONINFOEX)">
            <summary>
            obtains extended information about the version of the operating system that is currently running.
            </summary>
            <param name="ver">data structure that the function fills with operating system version information</param>
            <returns>true if the function succeeds, else false.</returns>
        </member>
        <member name="M:WHC.OrderWater.Commons.SafeNativeMethods.IsWindowEnabled(System.IntPtr)">
            <summary>
            determines whether the specified window is enabled for mouse and keyboard input. 
            </summary>
        </member>
        <member name="M:WHC.OrderWater.Commons.SafeNativeMethods.IsIconic(System.IntPtr)">
            <summary>
            determines whether the specified window is minimized (iconic). 
            </summary>
        </member>
        <member name="M:WHC.OrderWater.Commons.SafeNativeMethods.ShowWindow(System.IntPtr,System.Int32)">
            <summary>
            sets the specified window's show state. 
            </summary>
        </member>
        <member name="F:WHC.OrderWater.Commons.SafeNativeMethods.OSPlatformID.VER_PLATFORM_WIN32s">
            <summary>
            Windows 3.1
            </summary>
        </member>
        <member name="F:WHC.OrderWater.Commons.SafeNativeMethods.OSPlatformID.VER_PLATFORM_WIN32_WINDOWS">
            <summary>
            Windows 95, 98, ME
            </summary>
        </member>
        <member name="F:WHC.OrderWater.Commons.SafeNativeMethods.OSPlatformID.VER_PLATFORM_WIN32_NT">
            <summary>
            Windows NT, 2000, XP, 2003
            </summary>
        </member>
        <member name="F:WHC.OrderWater.Commons.SafeNativeMethods.OSPlatformID.VER_PLATFORM_WINCE">
            <summary>
            Windows CE
            </summary>
        </member>
        <member name="F:WHC.OrderWater.Commons.SafeNativeMethods.OSSuiteMask.VER_SUITE_TERMINAL">
            <summary>
            Terminal Services is installed.
            </summary>
        </member>
        <member name="F:WHC.OrderWater.Commons.SafeNativeMethods.OSSuiteMask.VER_SUITE_SMALLBUSINESS_RESTRICTED">
            <summary>
            Microsoft Small Business Server is installed with the restrictive client license in force
            </summary>
        </member>
        <member name="F:WHC.OrderWater.Commons.SafeNativeMethods.OSSuiteMask.VER_SUITE_SMALLBUSINESS">
            <summary>
            Microsoft Small Business Server was once installed on the system, but may have been upgraded to another version of Windows
            </summary>
        </member>
        <member name="F:WHC.OrderWater.Commons.SafeNativeMethods.OSSuiteMask.VER_SUITE_SINGLEUSERTS">
            <summary>
            Terminal Services is installed, but only one interactive session is supported.
            </summary>
        </member>
        <member name="F:WHC.OrderWater.Commons.SafeNativeMethods.OSSuiteMask.VER_SUITE_PERSONAL">
            <summary>
            Windows XP Home Edition is installed.
            </summary>
        </member>
        <member name="F:WHC.OrderWater.Commons.SafeNativeMethods.OSSuiteMask.VER_SUITE_EMBEDDEDNT">
            <summary>
            Windows XP Embedded is installed
            </summary>
        </member>
        <member name="F:WHC.OrderWater.Commons.SafeNativeMethods.OSSuiteMask.VER_SUITE_ENTERPRISE">
            <summary>
            Windows Server 2003, Enterprise Edition, Windows 2000 Advanced Server, or Windows NT 4.0 Enterprise Edition.
            </summary>
        </member>
        <member name="F:WHC.OrderWater.Commons.SafeNativeMethods.OSSuiteMask.VER_SUITE_DATACENTER">
            <summary>
            Windows Server 2003, Datacenter Edition or Windows 2000 Datacenter Server is installed.
            </summary>
        </member>
        <member name="F:WHC.OrderWater.Commons.SafeNativeMethods.OSSuiteMask.VER_SUITE_BLADE">
            <summary>
            Windows Server 2003, Web Edition is installed.
            </summary>
        </member>
        <member name="F:WHC.OrderWater.Commons.SafeNativeMethods.OSSuiteMask.VER_SUITE_BACKOFFICE">
            <summary>
            Microsoft BackOffice components are installed.
            </summary>
        </member>
        <member name="F:WHC.OrderWater.Commons.SafeNativeMethods.OSSuiteMask.VER_UNKNOWN">
            <summary>
            Unknown Suite.
            </summary>
        </member>
        <member name="F:WHC.OrderWater.Commons.SafeNativeMethods.OSSuiteMask.VER_SUITE_STORAGE_SERVER">
            <summary>
            Windows Storage Server 2003 R2 is installed.
            </summary>
        </member>
        <member name="F:WHC.OrderWater.Commons.SafeNativeMethods.OSSuiteMask.VER_SUITE_COMPUTE_SERVER">
            <summary>
            Windows Server 2003, Compute Cluster Edition is installed.
            </summary>
        </member>
        <member name="F:WHC.OrderWater.Commons.SafeNativeMethods.OSProductType.VER_NT_SERVER">
            <summary>
            The system is a server
            </summary>
        </member>
        <member name="F:WHC.OrderWater.Commons.SafeNativeMethods.OSProductType.VER_NT_DOMAIN_CONTROLLER">
            <summary>
            The system is a domain controller
            </summary>
        </member>
        <member name="F:WHC.OrderWater.Commons.SafeNativeMethods.OSProductType.VER_NT_WORKSTATION">
            <summary>
            Windows Professional
            </summary>
        </member>
        <member name="F:WHC.OrderWater.Commons.SafeNativeMethods.OSProductType.VER_UNKNOWN">
            <summary>
            UnKnown
            </summary>
        </member>
        <member name="T:WHC.OrderWater.Commons.SafeNativeMethods.OSVERSIONINFO">
            <summary>
            data structure contains operating system version information.
            </summary>
        </member>
        <member name="F:WHC.OrderWater.Commons.SafeNativeMethods.OSVERSIONINFO.OSVersionInfoSize">
            <summary>
            Size of this data structure, in bytes. Set this member to sizeof(OSVERSIONINFO) before calling the GetVersionEx function.
            </summary>
        </member>
        <member name="F:WHC.OrderWater.Commons.SafeNativeMethods.OSVERSIONINFO.MajorVersion">
            <summary>
            Major version number of the operating system.
            </summary>
        </member>
        <member name="F:WHC.OrderWater.Commons.SafeNativeMethods.OSVERSIONINFO.MinorVersion">
            <summary>
            Minor version number of the operating system.
            </summary>
        </member>
        <member name="F:WHC.OrderWater.Commons.SafeNativeMethods.OSVERSIONINFO.BuildNumber">
            <summary>
            Build number of the operating system.
            </summary>
            <remarks>Windows Me/98/95:  The low-order word contains the build number of the operating. The high-order word contains the major and minor version numbers.</remarks>
        </member>
        <member name="F:WHC.OrderWater.Commons.SafeNativeMethods.OSVERSIONINFO.PlatformId">
            <summary>
            Operating system platform
            </summary>
        </member>
        <member name="F:WHC.OrderWater.Commons.SafeNativeMethods.OSVERSIONINFO.CSDVersion">
            <summary>
            Pointer to a null-terminated string, such as "Service Pack 3", that indicates the latest Service Pack installed on the system. If no Service Pack has been installed, the string is empty.
            </summary>
            <remarks>Windows Me/98/95:  Pointer to a null-terminated string that indicates additional version information. For example, " C" indicates Windows 95 OSR2 and " A" indicates Windows 98 Second Edition.</remarks>
        </member>
        <member name="M:WHC.OrderWater.Commons.SafeNativeMethods.OSVERSIONINFO.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:OSVERSIONINFO"/> class.
            </summary>
        </member>
        <member name="F:WHC.OrderWater.Commons.SafeNativeMethods.OSVERSIONINFOEX.OSVersionInfoSize">
            <summary>
            Size of this data structure, in bytes. Set this member to sizeof(OSVERSIONINFO) before calling the GetVersionEx function.
            </summary>
        </member>
        <member name="F:WHC.OrderWater.Commons.SafeNativeMethods.OSVERSIONINFOEX.MajorVersion">
            <summary>
            Major version number of the operating system.
            </summary>
        </member>
        <member name="F:WHC.OrderWater.Commons.SafeNativeMethods.OSVERSIONINFOEX.MinorVersion">
            <summary>
            Minor version number of the operating system.
            </summary>
        </member>
        <member name="F:WHC.OrderWater.Commons.SafeNativeMethods.OSVERSIONINFOEX.BuildNumber">
            <summary>
            Build number of the operating system.
            </summary>
            <remarks>Windows Me/98/95:  The low-order word contains the build number of the operating. The high-order word contains the major and minor version numbers.</remarks>
        </member>
        <member name="F:WHC.OrderWater.Commons.SafeNativeMethods.OSVERSIONINFOEX.PlatformId">
            <summary>
            Operating system platform
            </summary>
        </member>
        <member name="F:WHC.OrderWater.Commons.SafeNativeMethods.OSVERSIONINFOEX.CSDVersion">
            <summary>
            Pointer to a null-terminated string, such as "Service Pack 3", that indicates the latest Service Pack installed on the system. If no Service Pack has been installed, the string is empty.
            </summary>
            <remarks>Windows Me/98/95:  Pointer to a null-terminated string that indicates additional version information. For example, " C" indicates Windows 95 OSR2 and " A" indicates Windows 98 Second Edition.</remarks>
        </member>
        <member name="F:WHC.OrderWater.Commons.SafeNativeMethods.OSVERSIONINFOEX.ServicePackMajor">
            <summary>
            Major version number of the latest Service Pack installed on the system
            </summary>
        </member>
        <member name="F:WHC.OrderWater.Commons.SafeNativeMethods.OSVERSIONINFOEX.ServicePackMinor">
            <summary>
            Minor version number of the latest Service Pack installed on the system
            </summary>
        </member>
        <member name="F:WHC.OrderWater.Commons.SafeNativeMethods.OSVERSIONINFOEX.SuiteMask">
            <summary>
            Bit flags that identify the product suites available on the system
            </summary>
        </member>
        <member name="F:WHC.OrderWater.Commons.SafeNativeMethods.OSVERSIONINFOEX.ProductType">
            <summary>
            Additional information about the system
            </summary>
        </member>
        <member name="F:WHC.OrderWater.Commons.SafeNativeMethods.OSVERSIONINFOEX.Reserved">
            <summary>
            Reserved for future use
            </summary>
        </member>
        <member name="M:WHC.OrderWater.Commons.SafeNativeMethods.OSVERSIONINFOEX.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:OSVERSIONINFO"/> class.
            </summary>
        </member>
        <member name="M:WHC.OrderWater.Commons.RSASecurityHelper.Validate(System.String,System.String)">
            <summary>
            对注册信息数据采用非对称加密的方式加密
            </summary>
            <param name="originalString">未加密的文本，如机器码</param>
            <param name="encrytedString">加密后的文本，如注册序列号</param>
            <returns>如果验证成功返回True，否则为False</returns>
        </member>
        <member name="T:WHC.OrderWater.Commons.NotifyIconHelper">
            <summary>
            托盘图标辅助类
            </summary>
        </member>
        <member name="M:WHC.OrderWater.Commons.NotifyIconHelper.Refresh">
            <summary>
            刷新托盘图标的状态
            </summary>
        </member>
        <member name="P:WHC.OrderWater.Commons.NotifyIconHelper.Icon_UnConntect">
            <summary>
            未连接图标（如网络断开）
            </summary>
        </member>
        <member name="P:WHC.OrderWater.Commons.NotifyIconHelper.Icon_Conntected">
            <summary>
            已连接图标（如网络连接）
            </summary>
        </member>
        <member name="P:WHC.OrderWater.Commons.NotifyIconHelper.Text_UnConntect">
            <summary>
            未连接上的托盘文本提示
            </summary>
        </member>
        <member name="P:WHC.OrderWater.Commons.NotifyIconHelper.Icon_Shrink1">
            <summary>
            闪烁图标1
            </summary>
        </member>
        <member name="P:WHC.OrderWater.Commons.NotifyIconHelper.Icon_Shrink2">
            <summary>
            闪烁图标2
            </summary>
        </member>
        <member name="P:WHC.OrderWater.Commons.NotifyIconHelper.NotifyStatus">
            <summary>
            获取或设置托盘的状态
            </summary>
        </member>
        <member name="T:WHC.OrderWater.Commons.NotifyIconHelper.Status">
            <summary>
            状态枚举：离线、在线、闪烁
            </summary>
        </member>
        <member name="M:WHC.OrderWater.Commons.ExtensionAttachUtil.SaveReg(System.String,System.String)">
            <summary>
            关联文件
            </summary>
            <param name="_FilePathString">应用程序路径</param>
            <param name="p_FileTypeName">文件类型</param>
        </member>
        <member name="M:WHC.OrderWater.Commons.ExtensionAttachUtil.DelReg(System.String)">
            <summary>
            取消文件关联
            </summary>
            <param name="p_FileTypeName">文件类型</param>
        </member>
        <member name="M:WHC.OrderWater.Commons.DirectoryUtil.StreamToBytes(System.IO.Stream)">
            <summary>
            将流读取到缓冲区中
            </summary>
            <param name="stream">原始流</param>
        </member>
        <member name="M:WHC.OrderWater.Commons.DirectoryUtil.BytesToStream(System.Byte[])">
            <summary>
            将 byte[] 转成 Stream
            </summary>
        </member>
        <member name="M:WHC.OrderWater.Commons.DirectoryUtil.StreamToFile(System.IO.Stream,System.String)">
            <summary>
            将 Stream 写入文件
            </summary>
        </member>
        <member name="M:WHC.OrderWater.Commons.DirectoryUtil.FileToStream(System.String)">
            <summary>
            从文件读取 Stream
            </summary>
        </member>
        <member name="M:WHC.OrderWater.Commons.DirectoryUtil.FileToBytes(System.String)">
            <summary>
            将文件读取到缓冲区中
            </summary>
            <param name="filePath">文件的绝对路径</param>
        </member>
        <member name="M:WHC.OrderWater.Commons.DirectoryUtil.FileToString(System.String)">
            <summary>
            将文件读取到字符串中
            </summary>
            <param name="filePath">文件的绝对路径</param>
        </member>
        <member name="M:WHC.OrderWater.Commons.DirectoryUtil.FileToString(System.String,System.Text.Encoding)">
            <summary>
            将文件读取到字符串中
            </summary>
            <param name="filePath">文件的绝对路径</param>
            <param name="encoding">字符编码</param>
        </member>
        <member name="M:WHC.OrderWater.Commons.DirectoryUtil.GetEncoding(System.String)">
            <summary>
            获取文件编码
            </summary>
            <param name="filePath">文件绝对路径</param>
            <returns></returns>
        </member>
        <member name="M:WHC.OrderWater.Commons.DirectoryUtil.GetEncoding(System.String,System.Text.Encoding)">
            <summary>
            获取文件编码
            </summary>
            <param name="filePath">文件绝对路径</param>
            <param name="defaultEncoding">找不到则返回这个默认编码</param>
            <returns></returns>
        </member>
        <member name="M:WHC.OrderWater.Commons.DirectoryUtil.IsWriteable(System.String)">
             <summary>
            检查目录是否可写，如果可以，返回True，否则False
             </summary>
             <param name="path"></param>
             <returns></returns>
        </member>
        <member name="M:WHC.OrderWater.Commons.DirectoryUtil.IsDiskSpaceEnough(System.String,System.UInt64)">
            <summary>
            检查磁盘是否有足够的可用空间
            </summary>
            <param name="path"></param>
            <param name="requiredSpace"></param>
            <returns></returns>
        </member>
        <member name="M:WHC.OrderWater.Commons.DirectoryUtil.GetFreeSpace(System.String)">
            <summary>
            获取驱动盘符的可用空间大小
            </summary>
            <param name="driveName">Direve name</param>
            <returns>free space (byte)</returns>
        </member>
        <member name="M:WHC.OrderWater.Commons.DirectoryUtil.GetFileSize(System.String)">
            <summary>
            获取一个文件的长度,单位为Byte
            </summary>
            <param name="filePath">文件的绝对路径</param>
        </member>
        <member name="M:WHC.OrderWater.Commons.DirectoryUtil.GetFileSizeKB(System.String)">
            <summary>
            获取一个文件的长度,单位为KB
            </summary>
            <param name="filePath">文件的路径</param>
        </member>
        <member name="M:WHC.OrderWater.Commons.DirectoryUtil.GetFileSizeMB(System.String)">
            <summary>
            获取一个文件的长度,单位为MB
            </summary>
            <param name="filePath">文件的路径</param>
        </member>
        <member name="M:WHC.OrderWater.Commons.DirectoryUtil.WriteText(System.String,System.String)">
            <summary>
            向文本文件中写入内容
            </summary>
            <param name="filePath">文件的绝对路径</param>
            <param name="content">写入的内容</param>
        </member>
        <member name="M:WHC.OrderWater.Commons.DirectoryUtil.AppendText(System.String,System.String)">
            <summary>
            向文本文件的尾部追加内容
            </summary>
            <param name="filePath">文件的绝对路径</param>
            <param name="content">写入的内容</param>
        </member>
        <member name="M:WHC.OrderWater.Commons.DirectoryUtil.Copy(System.String,System.String)">
            <summary>
            将源文件的内容复制到目标文件中
            </summary>
            <param name="sourceFilePath">源文件的绝对路径</param>
            <param name="destFilePath">目标文件的绝对路径</param>
        </member>
        <member name="M:WHC.OrderWater.Commons.DirectoryUtil.Move(System.String,System.String)">
            <summary>
            将文件移动到指定目录
            </summary>
            <param name="sourceFilePath">需要移动的源文件的绝对路径</param>
            <param name="descDirectoryPath">移动到的目录的绝对路径</param>
        </member>
        <member name="M:WHC.OrderWater.Commons.DirectoryUtil.IsExistFile(System.String)">
            <summary>
            检测指定文件是否存在,如果存在则返回true。
            </summary>
            <param name="filePath">文件的绝对路径</param>
        </member>
        <member name="M:WHC.OrderWater.Commons.DirectoryUtil.CreateFile(System.String)">
            <summary>
            创建一个文件。
            </summary>
            <param name="filePath">文件的绝对路径</param>
        </member>
        <member name="M:WHC.OrderWater.Commons.DirectoryUtil.CreateFile(System.String,System.Byte[])">
            <summary>
            创建一个文件,并将字节流写入文件。
            </summary>
            <param name="filePath">文件的绝对路径</param>
            <param name="buffer">二进制流数据</param>
        </member>
        <member name="M:WHC.OrderWater.Commons.DirectoryUtil.GetLineCount(System.String)">
            <summary>
            获取文本文件的行数
            </summary>
            <param name="filePath">文件的绝对路径</param>
        </member>
        <member name="M:WHC.OrderWater.Commons.DirectoryUtil.GetFileName(System.String)">
            <summary>
            从文件的绝对路径中获取文件名( 包含扩展名 )
            </summary>
            <param name="filePath">文件的绝对路径</param>
        </member>
        <member name="M:WHC.OrderWater.Commons.DirectoryUtil.GetFileNameNoExtension(System.String)">
            <summary>
            从文件的绝对路径中获取文件名( 不包含扩展名 )
            </summary>
            <param name="filePath">文件的绝对路径</param>
        </member>
        <member name="M:WHC.OrderWater.Commons.DirectoryUtil.GetExtension(System.String)">
            <summary>
            从文件的绝对路径中获取扩展名
            </summary>
            <param name="filePath">文件的绝对路径</param>
        </member>
        <member name="M:WHC.OrderWater.Commons.DirectoryUtil.ClearFile(System.String)">
            <summary>
            清空文件内容
            </summary>
            <param name="filePath">文件的绝对路径</param>
        </member>
        <member name="M:WHC.OrderWater.Commons.DirectoryUtil.DeleteFile(System.String)">
            <summary>
            删除指定文件
            </summary>
            <param name="filePath">文件的绝对路径</param>
        </member>
        <member name="M:WHC.OrderWater.Commons.DirectoryUtil.FileIsExist(System.String)">
            <summary>
            文件是否存在或无权访问
            </summary>
            <param name="path">相对路径或绝对路径</param>
            <returns>如果是目录也返回false</returns>
        </member>
        <member name="M:WHC.OrderWater.Commons.DirectoryUtil.FileIsReadOnly(System.String)">
            <summary>
            文件是否只读
            </summary>
            <param name="fullpath"></param>
            <returns></returns>
        </member>
        <member name="M:WHC.OrderWater.Commons.DirectoryUtil.SetFileReadonly(System.String,System.Boolean)">
            <summary>
            设置文件是否只读
            </summary>
            <param name="fullpath"></param>
            <param name="flag">true表示只读，反之</param>
        </member>
        <member name="M:WHC.OrderWater.Commons.DirectoryUtil.GetFileName(System.String,System.Boolean)">
            <summary>
            取文件名
            </summary>
            <param name="fullpath"></param>
            <returns></returns>
        </member>
        <member name="M:WHC.OrderWater.Commons.DirectoryUtil.GetFileCreateTime(System.String)">
            <summary>
            取文件创建时间
            </summary>
            <param name="fullpath"></param>
            <returns></returns>
        </member>
        <member name="M:WHC.OrderWater.Commons.DirectoryUtil.GetLastWriteTime(System.String)">
            <summary>
            取文件最后存储时间
            </summary>
            <param name="fullpath"></param>
            <returns></returns>
        </member>
        <member name="M:WHC.OrderWater.Commons.DirectoryUtil.CreateTempZeroByteFile">
            <summary>
            创建一个零字节临时文件
            </summary>
            <returns></returns>
        </member>
        <member name="M:WHC.OrderWater.Commons.DirectoryUtil.GetRandomFileName">
            <summary>
            创建一个随机文件名，不创建文件本身
            </summary>
            <returns></returns>
        </member>
        <member name="M:WHC.OrderWater.Commons.DirectoryUtil.CompareFilesHash(System.String,System.String)">
            <summary>
            判断两个文件的哈希值是否一致
            </summary>
            <param name="fileName1"></param>
            <param name="fileName2"></param>
            <returns></returns>
        </member>
        <member name="M:WHC.OrderWater.Commons.DirectoryUtil.GetFileNames(System.String)">
            <summary>
            获取指定目录中所有文件列表
            </summary>
            <param name="directoryPath">指定目录的绝对路径</param>
        </member>
        <member name="M:WHC.OrderWater.Commons.DirectoryUtil.GetFileNames(System.String,System.String,System.Boolean)">
            <summary>
            获取指定目录及子目录中所有文件列表
            </summary>
            <param name="directoryPath">指定目录的绝对路径</param>
            <param name="searchPattern">模式字符串，"*"代表0或N个字符，"?"代表1个字符。
            范例："Log*.xml"表示搜索所有以Log开头的Xml文件。</param>
            <param name="isSearchChild">是否搜索子目录</param>
        </member>
        <member name="M:WHC.OrderWater.Commons.DirectoryUtil.GetDirectories(System.String)">
            <summary>
            获取指定目录中所有子目录列表,若要搜索嵌套的子目录列表,请使用重载方法.
            </summary>
            <param name="directoryPath">指定目录的绝对路径</param>
        </member>
        <member name="M:WHC.OrderWater.Commons.DirectoryUtil.GetDirectories(System.String,System.String,System.Boolean)">
            <summary>
            获取指定目录及子目录中所有子目录列表
            </summary>
            <param name="directoryPath">指定目录的绝对路径</param>
            <param name="searchPattern">模式字符串，"*"代表0或N个字符，"?"代表1个字符。
            范例："Log*.xml"表示搜索所有以Log开头的Xml文件。</param>
            <param name="isSearchChild">是否搜索子目录</param>
        </member>
        <member name="M:WHC.OrderWater.Commons.DirectoryUtil.CreateDirectoryByDate(System.String)">
            <summary>
            生成日期 文件夹    格式：yyyy\mm\dd
            </summary>
            <remarks>
            生成时间目录   返回 例如： c:\directory\2009\03\01
            </remarks>
            <param name="rootPath">绝对路径   [在此目录下建日期目录]</param>
            <returns>返回完整路径  </returns>
        </member>
        <member name="M:WHC.OrderWater.Commons.DirectoryUtil.CreateDirectoryByDate(System.String,System.String)">
            <summary>
            相应格式生成日期目录
            </summary>
            <remarks>
            formatString:
                         yyyy-MM-dd        :2009\03\01
                         yyyy-MM-dd-HH     :2009\03\01\01
            </remarks>
            <param name="rootPath">绝对路径   [在此目录下建日期目录]</param>
            <param name="formatString">格式</param>
            <returns>返回完整路径 </returns>
        </member>
        <member name="M:WHC.OrderWater.Commons.DirectoryUtil.AssertDirExist(System.String)">
            <summary>
            确保文件夹被创建
            </summary>
            <param name="filePath">文件夹全名（含路径）</param>
        </member>
        <member name="M:WHC.OrderWater.Commons.DirectoryUtil.IsExistDirectory(System.String)">
            <summary>
            检测指定目录是否存在
            </summary>
            <param name="directoryPath">目录的绝对路径</param>
        </member>
        <member name="M:WHC.OrderWater.Commons.DirectoryUtil.IsEmptyDirectory(System.String)">
            <summary>
            检测指定目录是否为空
            </summary>
            <param name="directoryPath">指定目录的绝对路径</param>
        </member>
        <member name="M:WHC.OrderWater.Commons.DirectoryUtil.ContainFile(System.String,System.String)">
            <summary>
            检测指定目录中是否存在指定的文件,若要搜索子目录请使用重载方法.
            </summary>
            <param name="directoryPath">指定目录的绝对路径</param>
            <param name="searchPattern">模式字符串，"*"代表0或N个字符，"?"代表1个字符。
            范例："Log*.xml"表示搜索所有以Log开头的Xml文件。</param>
        </member>
        <member name="M:WHC.OrderWater.Commons.DirectoryUtil.ContainFile(System.String,System.String,System.Boolean)">
            <summary>
            检测指定目录中是否存在指定的文件
            </summary>
            <param name="directoryPath">指定目录的绝对路径</param>
            <param name="searchPattern">模式字符串，"*"代表0或N个字符，"?"代表1个字符。
            范例："Log*.xml"表示搜索所有以Log开头的Xml文件。</param>
            <param name="isSearchChild">是否搜索子目录</param>
        </member>
        <member name="M:WHC.OrderWater.Commons.DirectoryUtil.CreateDirectory(System.String)">
            <summary>
            创建一个目录
            </summary>
            <param name="directoryPath">目录的绝对路径</param>
        </member>
        <member name="M:WHC.OrderWater.Commons.DirectoryUtil.ClearDirectory(System.String)">
            <summary>
            清空指定目录下所有文件及子目录,但该目录依然保存.
            </summary>
            <param name="directoryPath">指定目录的绝对路径</param>
        </member>
        <member name="M:WHC.OrderWater.Commons.DirectoryUtil.DeleteDirectory(System.String)">
            <summary>
            删除指定目录及其所有子目录
            </summary>
            <param name="directoryPath">指定目录的绝对路径</param>
        </member>
        <member name="M:WHC.OrderWater.Commons.DirectoryUtil.GetSystemDirectory">
            <summary>
            取系统目录
            </summary>
            <returns></returns>
        </member>
        <member name="M:WHC.OrderWater.Commons.DirectoryUtil.GetSpeicalFolder(System.Environment.SpecialFolder)">
            <summary>
            取系统的特别目录
            </summary>
            <param name="folderType"></param>
            <returns></returns>
        </member>
        <member name="M:WHC.OrderWater.Commons.DirectoryUtil.GetTempPath">
            <summary>
            返回当前系统的临时目录
            </summary>
            <returns></returns>
        </member>
        <member name="M:WHC.OrderWater.Commons.DirectoryUtil.GetCurrentDirectory">
            <summary>
            取当前目录
            </summary>
            <returns></returns>
        </member>
        <member name="M:WHC.OrderWater.Commons.DirectoryUtil.SetCurrentDirectory(System.String)">
            <summary>
            设当前目录
            </summary>
            <param name="path"></param>
        </member>
        <member name="M:WHC.OrderWater.Commons.DirectoryUtil.GetInvalidPathChars">
            <summary>
            取路径中不充许存在的字符
            </summary>
            <returns></returns>
        </member>
        <member name="M:WHC.OrderWater.Commons.DirectoryUtil.GetAllDrives">
            <summary>
            取系统所有的逻辑驱动器
            </summary>
            <returns></returns>
        </member>
        <member name="T:WHC.OrderWater.Commons.CSocket">
            <summary>
            clsPublic 的摘要说明。
            </summary>
        </member>
        <member name="M:WHC.OrderWater.Commons.CSocket.DealWithFrame(System.String,System.String)">
            <summary>
            处理框架页面问题。如果该页面是框架结构的话，返回该框架
            </summary>
            <param name="content"></param>
            <returns></returns>
        </member>
        <member name="M:WHC.OrderWater.Commons.CSocket.DealWithIFrame(System.String,System.String)">
            <summary>
            处理浮动桢问题。如果该页面存在浮动桢，返回浮动桢
            </summary>
            <param name="content"></param>
            <returns></returns>
        </member>
        <member name="T:WHC.OrderWater.Commons.Collections.SyncDictionary`2">
            <summary>
            Syncronized Dictionary
            </summary>
        </member>
        <member name="T:WHC.OrderWater.Commons.Collections.Dictionary`2">
            <summary>
            Represents a collection of keys and values. 
            </summary>
            <typeparam name="TKey">The type of the keys  in the dictionary.</typeparam>
            <typeparam name="TValue">The type of the values in the dictionary.</typeparam>
        </member>
        <member name="M:WHC.OrderWater.Commons.Collections.Dictionary`2.#ctor">
            <summary>
            Initializes a new instance of the 
            <see cref="T:WHC.OrderWater.Commons.Collections.Dictionary`2"></see> class that 
            is empty, has the default initial capacity, and uses the 
            default equality comparer for the key type.
            </summary>
        </member>
        <member name="M:WHC.OrderWater.Commons.Collections.Dictionary`2.#ctor(System.Collections.Generic.IDictionary{`0,`1})">
            <summary>
            Initializes a new instance of the 
            <see cref="T:WHC.OrderWater.Commons.Collections.Dictionary`2"></see> class that contains elements copied from the specified <see cref="T:System.Collections.Generic.IDictionary`2"></see> and uses the default equality comparer for the key type.
            </summary>
            <param name="dictionary">The dictionary.</param>
            <exception cref="T:System.ArgumentException">dictionarytable contains one or more duplicate values.</exception>
            <exception cref="T:System.ArgumentNullException">dictionarytable is null.</exception>
        </member>
        <member name="M:WHC.OrderWater.Commons.Collections.Dictionary`2.#ctor(System.Collections.Generic.IEqualityComparer{`0})">
            <summary>Initializes a new instance of the 
            <see cref="T:WHC.OrderWater.Commons.Collections.Dictionary`2"></see> class that is empty, has the default initial capacity, and uses the specified <see cref="T:System.Collections.Generic.IEqualityComparer`1"></see>.</summary>
            <param name="comparer">The <see cref="T:System.Collections.Generic.IEqualityComparer`1"></see> implementation to use when comparing values, or null to use the default <see cref="T:System.Collections.Generic.EqualityComparer`1"></see> for the type of the key.</param>
        </member>
        <member name="M:WHC.OrderWater.Commons.Collections.Dictionary`2.#ctor(System.Int32)">
            <summary>Initializes a new instance of the 
            <see cref="T:WHC.OrderWater.Commons.Collections.Dictionary`2"></see> class that is empty, has the specified initial capacity, and uses the default equality comparer for the key type.</summary>
            <param name="capacity">The initial number of elements that the <see cref="T:WHC.OrderWater.Commons.Collections.Dictionary`2"></see> can contain.</param>
            <exception cref="T:System.ArgumentOutOfRangeException">capacity is less than 0.</exception>
        </member>
        <member name="M:WHC.OrderWater.Commons.Collections.Dictionary`2.#ctor(System.Collections.Generic.IDictionary{`0,`1},System.Collections.Generic.IEqualityComparer{`0})">
            <summary>
            Initializes a new instance of the 
            <see cref="T:WHC.OrderWater.Commons.Collections.Dictionary`2"></see> class that contains elements copied from the specified <see cref="T:System.Collections.Generic.IDictionary`2"></see> and uses the specified <see cref="T:System.Collections.Generic.IEqualityComparer`1"></see>.
            </summary>
            <param name="dictionary">The dictionary.</param>
            <param name="comparer">The <see cref="T:System.Collections.Generic.IEqualityComparer`1"></see> implementation to use when comparing values, or null to use the default <see cref="T:System.Collections.Generic.EqualityComparer`1"></see> for the type of the key.</param>
            <exception cref="T:System.ArgumentException">dictionarytable contains one or more duplicate values.</exception>
            <exception cref="T:System.ArgumentNullException">dictionarytable is null.</exception>
        </member>
        <member name="M:WHC.OrderWater.Commons.Collections.Dictionary`2.#ctor(System.Int32,System.Collections.Generic.IEqualityComparer{`0})">
            <summary>Initializes a new instance of the <see cref="T:WHC.OrderWater.Commons.Collections.Dictionary`2"></see> class that is empty, has the specified initial capacity, and uses the specified <see cref="T:System.Collections.Generic.IEqualityComparer`1"></see>.</summary>
            <param name="capacity">The initial number of elements that the <see cref="T:WHC.OrderWater.Commons.Collections.Dictionary`2"></see> can contain.</param>
            <param name="comparer">The <see cref="T:System.Collections.Generic.IEqualityComparer`1"></see> implementation to use when comparing values, or null to use the default <see cref="T:System.Collections.Generic.EqualityComparer`1"></see> for the type of the key.</param>
            <exception cref="T:System.ArgumentOutOfRangeException">capacity is less than 0.</exception>
        </member>
        <member name="M:WHC.OrderWater.Commons.Collections.Dictionary`2.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>Initializes a new instance of the <see cref="T:WHC.OrderWater.Commons.Collections.Dictionary`2"></see> class with serialized data.</summary>
            <param name="context">A <see cref="T:System.Runtime.Serialization.StreamingContext"></see> structure containing the source and destination of the serialized stream associated with the <see cref="T:WHC.OrderWater.Commons.Collections.Dictionary`2"></see>.</param>
            <param name="info">A <see cref="T:System.Runtime.Serialization.SerializationInfo"></see> object containing the information required to serialize the <see cref="T:WHC.OrderWater.Commons.Collections.Dictionary`2"></see>.</param>
        </member>
        <member name="M:WHC.OrderWater.Commons.Collections.Dictionary`2.Contains(`0)">
            <summary>
            Determines whether the specified key contains key.
            </summary>
            <param name="key">The key.</param>
            <returns>
            	<c>true</c> if the specified key contains key; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:WHC.OrderWater.Commons.Collections.Dictionary`2.Synchronized(WHC.OrderWater.Commons.Collections.Dictionary{`0,`1})">
            <summary>
            Returns a synchronized (thread safe) wrapper for the Hashtable.
            </summary>
            <param name="dictionary">The dictionary.</param>
            <returns>
            A synchronized (thread safe) wrapper for the dictionarytable.
            </returns>2
        </member>
        <member name="M:WHC.OrderWater.Commons.Collections.Dictionary`2.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>Implements the <see cref="T:System.Runtime.Serialization.ISerializable"></see> interface and returns the data needed to serialize the <see cref="T:WHC.OrderWater.Commons.Collections.Dictionary`2"></see> instance.</summary>
            <param name="context">A <see cref="T:System.Runtime.Serialization.StreamingContext"></see> structure that contains the source and destination of the serialized stream associated with the <see cref="T:WHC.OrderWater.Commons.Collections.Dictionary`2"></see> instance.</param>
            <param name="info">A <see cref="T:System.Runtime.Serialization.SerializationInfo"></see> object that contains the information required to serialize the <see cref="T:WHC.OrderWater.Commons.Collections.Dictionary`2"></see> instance.</param>
            <exception cref="T:System.ArgumentNullException">info is null.</exception>
        </member>
        <member name="M:WHC.OrderWater.Commons.Collections.Dictionary`2.CopyTo(System.Collections.Generic.KeyValuePair{`0,`1}[],System.Int32)">
            <summary>
            Copies the elements of the ICollection to an array of type KeyValuePair,
            starting at the specified array index.
            </summary>
            <param name="array">The one-dimensional array of type KeyValuePair that is
            the destination of the KeyValuePair elements copied from the ICollection.
            The array must have zero-based indexing.</param>
            <param name="index">The zero-based index in array at which copying begins.</param>
        </member>
        <member name="M:WHC.OrderWater.Commons.Collections.Dictionary`2.System#ICloneable#Clone">
            <summary>
            Creates a new object that is a copy of the current instance.
            </summary>
            <returns>
            A new object that is a copy of this instance.
            </returns>
        </member>
        <member name="M:WHC.OrderWater.Commons.Collections.Dictionary`2.Clone">
            <summary>
            Creates a new object that is a copy of the current instance.
            </summary>
            <returns>
            A new object that is a copy of this instance.
            </returns>
        </member>
        <member name="M:WHC.OrderWater.Commons.Collections.Dictionary`2.GetSchema">
            <summary>
            This property is reserved, apply the <see cref="T:System.Xml.Serialization.XmlSchemaProviderAttribute"></see> to the class instead.
            </summary>
            <returns>
            An <see cref="T:System.Xml.Schema.XmlSchema"></see> that describes the XML representation of the object that is produced by the <see cref="M:System.Xml.Serialization.IXmlSerializable.WriteXml(System.Xml.XmlWriter)"></see> method and consumed by the <see cref="M:System.Xml.Serialization.IXmlSerializable.ReadXml(System.Xml.XmlReader)"></see> method.
            </returns>
        </member>
        <member name="M:WHC.OrderWater.Commons.Collections.Dictionary`2.ReadXml(System.Xml.XmlReader)">
            <summary>
            Generates an object from its XML representation.
            </summary>
            <param name="reader">The <see cref="T:System.Xml.XmlReader"></see> stream from which the object is deserialized.</param>
        </member>
        <member name="M:WHC.OrderWater.Commons.Collections.Dictionary`2.WriteXml(System.Xml.XmlWriter)">
            <summary>
            Converts an object into its XML representation.
            </summary>
            <param name="writer">The <see cref="T:System.Xml.XmlWriter"></see> stream to which the object is serialized.</param>
        </member>
        <member name="P:WHC.OrderWater.Commons.Collections.Dictionary`2.IsSynchronized">
            <summary>
            Gets a value indicating whether access to the <see cref="T:System.Collections.ICollection"></see> is synchronized (thread safe).
            </summary>
            <value>true if access to the Dictionary is synchronized (thread safe); otherwise, false. The default is false. </value>
            <returns>true if access to the <see cref="T:System.Collections.ICollection"></see> is synchronized (thread safe); otherwise, false.</returns>
        </member>
        <member name="M:WHC.OrderWater.Commons.Collections.SyncDictionary`2.TryGetValue(`0,`1@)">
            <summary>
            Gets the value associated with the specified key. 
            </summary>
            <param name="key">The key of the value to get.</param>
            <param name="value">When this method returns, contains the value associated with the specified key, if the key is found; otherwise, the default value for the type of the value parameter. This parameter is passed uninitialized.</param>
            <returns>true if the Dictionary contains an element with the specified key; otherwise, false. </returns>
        </member>
        <member name="M:WHC.OrderWater.Commons.Collections.SyncDictionary`2.Remove(`0)">
            <summary>Removes the value with the specified key from the <see cref="T:System.Collections.Generic.Dictionary`2"></see>.</summary>
            <returns>true if the element is successfully found and removed; otherwise, false.  This method returns false if key is not found in the <see cref="T:System.Collections.Generic.Dictionary`2"></see>.</returns>
            <param name="key">The key of the element to remove.</param>
            <exception cref="T:System.ArgumentNullException">key is null.</exception>
        </member>
        <member name="M:WHC.OrderWater.Commons.Collections.SyncDictionary`2.GetEnumerator">
            <summary>Returns an enumerator that iterates through the <see cref="T:System.Collections.Generic.Dictionary`2"></see>.</summary>
            <returns>A structure for the <see cref="T:System.Collections.Generic.Dictionary`2"></see>.</returns>
        </member>
        <member name="M:WHC.OrderWater.Commons.Collections.SyncDictionary`2.#ctor(WHC.OrderWater.Commons.Collections.Dictionary{`0,`1})">
            <summary>
            Initializes a new instance of the <see cref="T:WHC.OrderWater.Commons.Collections.SyncDictionary`2"/> class.
            </summary>
            <param name="dictionary">The dictionary.</param>
        </member>
        <member name="M:WHC.OrderWater.Commons.Collections.SyncDictionary`2.Add(`0,`1)">
            <summary>
            Adds the specified key and value to the dictionarytable.
            </summary>
            <param name="key">The key of the element to add.</param>
            <param name="value">The value of the element to add. The value can be null for reference types.</param>
            <exception cref="T:System.ArgumentException">An element with the same key already exists in the <see cref="T:System.Collections.Generic.Dictionary`2"></see>.</exception>
            <exception cref="T:System.ArgumentNullException">key is null.</exception>
        </member>
        <member name="M:WHC.OrderWater.Commons.Collections.SyncDictionary`2.Clear">
            <summary>
            Removes all values and values from the <see cref="T:System.Collections.Generic.Dictionary`2"></see>.
            </summary>
        </member>
        <member name="M:WHC.OrderWater.Commons.Collections.SyncDictionary`2.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Implements the <see cref="T:System.Runtime.Serialization.ISerializable"></see> interface and returns the data needed to serialize the <see cref="T:System.Collections.Generic.Dictionary`2"></see> instance.
            </summary>
            <param name="info">A <see cref="T:System.Runtime.Serialization.SerializationInfo"></see> object that contains the information required to serialize the <see cref="T:System.Collections.Generic.Dictionary`2"></see> instance.</param>
            <param name="context">A <see cref="T:System.Runtime.Serialization.StreamingContext"></see> structure that contains the source and destination of the serialized stream associated with the <see cref="T:System.Collections.Generic.Dictionary`2"></see> instance.</param>
            <exception cref="T:System.ArgumentNullException">info is null.</exception>
        </member>
        <member name="M:WHC.OrderWater.Commons.Collections.SyncDictionary`2.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Initializes a new instance of the <see cref="T:WHC.OrderWater.Commons.Collections.SyncDictionary`2"/> class.
            </summary>
            <param name="info">A <see cref="T:System.Runtime.Serialization.SerializationInfo"></see> object containing the information required to serialize the <see cref="T:System.Collections.Generic.Dictionary`2"></see>.</param>
            <param name="context">A <see cref="T:System.Runtime.Serialization.StreamingContext"></see> structure containing the source and destination of the serialized stream associated with the <see cref="T:System.Collections.Generic.Dictionary`2"></see>.</param>
        </member>
        <member name="M:WHC.OrderWater.Commons.Collections.SyncDictionary`2.CopyTo(System.Collections.Generic.KeyValuePair{`0,`1}[],System.Int32)">
            <summary>
            Copies the elements of the ICollection to an array of type KeyValuePair, starting at the specified array index. 
            </summary>
            <param name="array">The one-dimensional array of type KeyValuePair that is the destination of the KeyValuePair elements copied from the ICollection. The array must have zero-based indexing.</param>
            <param name="index">The zero-based index in array at which copying begins.</param>
        </member>
        <member name="M:WHC.OrderWater.Commons.Collections.SyncDictionary`2.OnDeserialization(System.Object)">
            <summary>
            Implements the <see cref="T:System.Runtime.Serialization.ISerializable"></see> interface and raises the deserialization event when the deserialization is complete.
            </summary>
            <param name="sender">The source of the deserialization event.</param>
            <exception cref="T:System.Runtime.Serialization.SerializationException">The <see cref="T:System.Runtime.Serialization.SerializationInfo"></see> object associated with the current <see cref="T:System.Collections.Generic.Dictionary`2"></see> instance is invalid.</exception>
        </member>
        <member name="M:WHC.OrderWater.Commons.Collections.SyncDictionary`2.ContainsKey(`0)">
            <summary>
            Determines whether the specified key contains key.
            </summary>
            <param name="key">The key.</param>
            <returns>
            	<c>true</c> if the specified key contains key; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:WHC.OrderWater.Commons.Collections.SyncDictionary`2.ContainsValue(`1)">
            <summary>
            Determines whether the <see cref="T:System.Collections.Generic.Dictionary`2"></see> contains a specific value.
            </summary>
            <param name="value">The value to locate in the <see cref="T:System.Collections.Generic.Dictionary`2"></see>. The value can be null for reference types.</param>
            <returns>
            true if the <see cref="T:System.Collections.Generic.Dictionary`2"></see> contains an element with the specified value; otherwise, false.
            </returns>
        </member>
        <member name="P:WHC.OrderWater.Commons.Collections.SyncDictionary`2.Item(`0)">
            <summary>Gets or sets the value associated with the specified key.</summary>
            <returns>The value associated with the specified key. If the specified key is not found, a get operation throws a <see cref="T:System.Collections.Generic.KeyNotFoundException"></see>, and a set operation creates a new element with the specified key.</returns>
            <param name="key">The key of the value to get or set.</param>
            <exception cref="T:System.ArgumentNullException">key is null.</exception>
            <exception cref="T:System.Collections.Generic.KeyNotFoundException">The property is retrieved and key does not exist in the collection.</exception>
        </member>
        <member name="P:WHC.OrderWater.Commons.Collections.SyncDictionary`2.Keys">
            <summary>Gets a collection containing the values in the <see cref="T:System.Collections.Generic.Dictionary`2"></see>.</summary>
            <returns>A <see cref="T:System.Collections.Generic.Dictionary`2.KeyCollection"></see> containing the values in the <see cref="T:System.Collections.Generic.Dictionary`2"></see>.</returns>
        </member>
        <member name="P:WHC.OrderWater.Commons.Collections.SyncDictionary`2.Values">
            <summary>Gets a collection containing the values in the <see cref="T:System.Collections.Generic.Dictionary`2"></see>.</summary>
            <returns>A <see cref="T:System.Collections.Generic.Dictionary`2.ValueCollection"></see> containing the values in the <see cref="T:System.Collections.Generic.Dictionary`2"></see>.</returns>
        </member>
        <member name="P:WHC.OrderWater.Commons.Collections.SyncDictionary`2.Comparer">
            <summary>Gets the <see cref="T:System.Collections.Generic.IEqualityComparer`1"></see> that is used to determine equality of values for the dictionarytable. </summary>
            <returns>The <see cref="T:System.Collections.Generic.IEqualityComparer`1"></see> generic interface implementation that is used to determine equality of values for the current <see cref="T:System.Collections.Generic.Dictionary`2"></see> and to provide hash values for the values.</returns>
        </member>
        <member name="P:WHC.OrderWater.Commons.Collections.SyncDictionary`2.Count">
            <summary>Gets the number of key/value pairs contained in the <see cref="T:System.Collections.Generic.Dictionary`2"></see>.</summary>
            <returns>The number of key/value pairs contained in the <see cref="T:System.Collections.Generic.Dictionary`2"></see>.</returns>
        </member>
        <member name="P:WHC.OrderWater.Commons.Collections.SyncDictionary`2.IsSynchronized">
            <summary>
            Gets a value indicating whether access to the <see cref="T:System.Collections.ICollection"></see> is synchronized (thread safe).
            </summary>
            <value>true if access to the Dictionary is synchronized (thread safe); otherwise, false. The default is false. </value>
            <returns>true if access to the <see cref="T:System.Collections.ICollection"></see> is synchronized (thread safe); otherwise, false.</returns>
        </member>
        <member name="T:WHC.OrderWater.Commons.Collections.OrderedDictionary`2">
            <summary>
            Represents a Ordered collection of values and values. 
            </summary>
            <typeparam name="TKey">The type of the values in the dictionarytable.</typeparam>
            <typeparam name="TValue">The type of the values in the dictionarytable.</typeparam>
        </member>
        <member name="M:WHC.OrderWater.Commons.Collections.OrderedDictionary`2.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:WHC.OrderWater.Commons.Collections.OrderedDictionary`2"/> class.
            </summary>
            <summary>Initializes a new instance of the
            <see cref="T:System.Collections.Generic.Dictionary`2"></see> class that is empty, has the default initial capacity, and uses the default equality comparer for the key type.</summary>
        </member>
        <member name="M:WHC.OrderWater.Commons.Collections.OrderedDictionary`2.#ctor(System.Collections.Generic.IDictionary{`0,`1})">
            <summary>
            Initializes a new instance of the <see cref="T:WHC.OrderWater.Commons.Collections.OrderedDictionary`2"/> class.
            </summary>
            <param name="dictionary">The dictionarytable.</param>
        </member>
        <member name="M:WHC.OrderWater.Commons.Collections.OrderedDictionary`2.#ctor(System.Collections.Generic.IEqualityComparer{`0})">
            <summary>
            Initializes a new instance of the <see cref="T:WHC.OrderWater.Commons.Collections.OrderedDictionary`2"/> class.
            </summary>
            <param name="comparer">The comparer.</param>
        </member>
        <member name="M:WHC.OrderWater.Commons.Collections.OrderedDictionary`2.#ctor(System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:WHC.OrderWater.Commons.Collections.OrderedDictionary`2"/> class.
            </summary>
            <param name="capacity">The capacity.</param>
        </member>
        <member name="M:WHC.OrderWater.Commons.Collections.OrderedDictionary`2.#ctor(System.Collections.Generic.IDictionary{`0,`1},System.Collections.Generic.IEqualityComparer{`0})">
            <summary>
            Initializes a new instance of the <see cref="T:WHC.OrderWater.Commons.Collections.OrderedDictionary`2"/> class.
            </summary>
            <param name="dictionary">The dictionarytable.</param>
            <param name="comparer">The comparer.</param>
        </member>
        <member name="M:WHC.OrderWater.Commons.Collections.OrderedDictionary`2.#ctor(System.Int32,System.Collections.Generic.IEqualityComparer{`0})">
            <summary>
            Initializes a new instance of the <see cref="T:WHC.OrderWater.Commons.Collections.OrderedDictionary`2"/> class.
            </summary>
            <param name="capacity">The capacity.</param>
            <param name="comparer">The comparer.</param>
        </member>
        <member name="M:WHC.OrderWater.Commons.Collections.OrderedDictionary`2.ContainsValue(`1)">
            <summary>
            Determines whether the <see cref="T:System.Collections.Generic.Dictionary`2"></see> ContainsKey a specific value.
            </summary>
            <param name="value">The value to locate in the <see cref="T:System.Collections.Generic.Dictionary`2"></see>. The value can be null for reference types.</param>
            <returns>
            true if the <see cref="T:System.Collections.Generic.Dictionary`2"></see> ContainsKey an element with the specified value; otherwise, false.
            </returns>
        </member>
        <member name="M:WHC.OrderWater.Commons.Collections.OrderedDictionary`2.Add(`0,`1)">
            <summary>
            Adds an element with the provided key and value to the 
            <see cref="T:System.Collections.Generic.IDictionary`2"></see>.
            </summary>
            <param name="key">The object to use as the key of the element to add.</param>
            <param name="value">The object to use as the value of the element to add.</param>
            <exception cref="T:System.NotSupportedException">The 
            <see cref="T:System.Collections.Generic.IDictionary`2"></see> 
            is read-only.</exception>
            <exception cref="T:System.ArgumentException">An element with the 
            same key already exists in the 
            <see cref="T:System.Collections.Generic.IDictionary`2"></see>.</exception>
            <exception cref="T:System.ArgumentNullException">key is null.</exception>
        </member>
        <member name="M:WHC.OrderWater.Commons.Collections.OrderedDictionary`2.ContainsKey(`0)">
            <summary>
            Determines whether the <see cref="T:System.Collections.Generic.IDictionary`2"></see> ContainsKey an element with the specified key.
            </summary>
            <param name="key">The key to locate in the <see cref="T:System.Collections.Generic.IDictionary`2"></see>.</param>
            <returns>
            true if the <see cref="T:System.Collections.Generic.IDictionary`2"></see> ContainsKey an element with the key; otherwise, false.
            </returns>
            <exception cref="T:System.ArgumentNullException">key is null.</exception>
        </member>
        <member name="M:WHC.OrderWater.Commons.Collections.OrderedDictionary`2.Insert(System.Int32,`0,`1)">
            <summary>
            Inserts an item to the <see cref="T:System.Collections.Generic.IList`1"></see> at the specified index.
            </summary>
            <param name="index">The zero-based index at which item should be inserted.</param>
            <param name="key">The object to use as the key of the element to insert.</param>
            <param name="value">The object to use as the value of the element to insert.</param>
            <exception cref="T:System.NotSupportedException">The <see cref="T:System.Collections.Generic.IList`1"></see> is read-only.</exception>
            <exception cref="T:System.ArgumentOutOfRangeException">index is not a valid index in the <see cref="T:System.Collections.Generic.IList`1"></see>.</exception>
        </member>
        <member name="M:WHC.OrderWater.Commons.Collections.OrderedDictionary`2.Contains(`0)">
            <summary>
            Determines whether the specified key ContainsKey key.
            </summary>
            <param name="key">The key.</param>
            <returns>
            	<c>true</c> if the specified key ContainsKey key; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:WHC.OrderWater.Commons.Collections.OrderedDictionary`2.IndexOf(`0)">
            <summary>
            Determines the index of a specific item in the <see cref="T:System.Collections.Generic.IList`1"></see> by key.
            </summary>
            <param name="key">The object key to locate in the <see cref="T:System.Collections.Generic.IList`1"></see>.</param>
            <returns>
            The index of item if found in the list; otherwise, -1.
            </returns>
        </member>
        <member name="M:WHC.OrderWater.Commons.Collections.OrderedDictionary`2.IndexOf(`1)">
            <summary>
            Determines the index of a specific item in the <see cref="T:System.Collections.Generic.IList`1"></see>.
            </summary>
            <param name="value">The object to locate in the <see cref="T:System.Collections.Generic.IList`1"></see>.</param>
            <returns>
            The index of item if found in the list; otherwise, -1.
            </returns>
        </member>
        <member name="M:WHC.OrderWater.Commons.Collections.OrderedDictionary`2.Remove(`0)">
            <summary>
            Removes the element with the specified key from the <see cref="T:System.Collections.Generic.IDictionary`2"></see>.
            </summary>
            <param name="key">The key of the element to remove.</param>
            <returns>
            true if the element is successfully removed; otherwise, false.  This method also returns false if key was not found in the original <see cref="T:System.Collections.Generic.IDictionary`2"></see>.
            </returns>
            <exception cref="T:System.NotSupportedException">The <see cref="T:System.Collections.Generic.IDictionary`2"></see> is read-only.</exception>
            <exception cref="T:System.ArgumentNullException">key is null.</exception>
        </member>
        <member name="M:WHC.OrderWater.Commons.Collections.OrderedDictionary`2.RemoveAt(System.Int32)">
            <summary>
            Removes the <see cref="T:System.Collections.Generic.IList`1"></see> item at the specified index.
            </summary>
            <param name="index">The zero-based index of the item to remove.</param>
            <exception cref="T:System.NotSupportedException">The <see cref="T:System.Collections.Generic.IList`1"></see> is read-only.</exception>
            <exception cref="T:System.ArgumentOutOfRangeException">index is not a valid index in the <see cref="T:System.Collections.Generic.IList`1"></see>.</exception>
        </member>
        <member name="M:WHC.OrderWater.Commons.Collections.OrderedDictionary`2.TryGetValue(`0,`1@)">
            <summary>
            Tries the get value.
            </summary>
            <param name="key">The key.</param>
            <param name="value">The value.</param>
            <returns></returns>
        </member>
        <member name="M:WHC.OrderWater.Commons.Collections.OrderedDictionary`2.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>Implements the <see cref="T:System.Runtime.Serialization.ISerializable"></see> interface and returns the data needed to serialize the <see cref="T:System.Collections.Generic.Dictionary`2"></see> instance.</summary>
            <param name="context">A <see cref="T:System.Runtime.Serialization.StreamingContext"></see> structure that ContainsKey the source and destination of the serialized stream associated with the <see cref="T:System.Collections.Generic.Dictionary`2"></see> instance.</param>
            <param name="info">A <see cref="T:System.Runtime.Serialization.SerializationInfo"></see> object that ContainsKey the information required to serialize the <see cref="T:System.Collections.Generic.Dictionary`2"></see> instance.</param>
            <exception cref="T:System.ArgumentNullException">info is null.</exception>
        </member>
        <member name="M:WHC.OrderWater.Commons.Collections.OrderedDictionary`2.Synchronized(WHC.OrderWater.Commons.Collections.OrderedDictionary{`0,`1})">
            <summary>
            Returns a synchronized (thread safe) wrapper for the Hashtable. 
            </summary>
            <param name="dictionary">The dictionarytable to synchronize. </param>
            <returns>A synchronized (thread safe) wrapper for the dictionarytable. </returns>
        </member>
        <member name="M:WHC.OrderWater.Commons.Collections.OrderedDictionary`2.OnDeserialization(System.Object)">
            <summary>Implements the <see cref="T:System.Runtime.Serialization.ISerializable"></see> interface and raises the deserialization event when the deserialization is complete.</summary>
            <param name="sender">The source of the deserialization event.</param>
            <exception cref="T:System.Runtime.Serialization.SerializationException">The <see cref="T:System.Runtime.Serialization.SerializationInfo"></see> object associated with the current <see cref="T:System.Collections.Generic.Dictionary`2"></see> instance is invalid.</exception>
        </member>
        <member name="M:WHC.OrderWater.Commons.Collections.OrderedDictionary`2.System#Collections#Generic#ICollection{System#Collections#Generic#KeyValuePair{TKey@TValue}}#Add(System.Collections.Generic.KeyValuePair{`0,`1})">
            <summary>
            Adds an item
            </summary>
            <param name="keyValuePair">The key value pair.</param>
        </member>
        <member name="M:WHC.OrderWater.Commons.Collections.OrderedDictionary`2.Clear">
            <summary>
            Removes all items
            </summary>
            <exception cref="T:System.NotSupportedException">The collection is read-only. </exception>
        </member>
        <member name="M:WHC.OrderWater.Commons.Collections.OrderedDictionary`2.System#Collections#Generic#ICollection{System#Collections#Generic#KeyValuePair{TKey@TValue}}#Contains(System.Collections.Generic.KeyValuePair{`0,`1})">
            <summary>
            Determines whether the collection ContainsKey a specific value.
            </summary>
            <param name="item">The object to locate in the collection.</param>
            <returns>
            true if item is found in the collection; otherwise, false.
            </returns>
        </member>
        <member name="M:WHC.OrderWater.Commons.Collections.OrderedDictionary`2.CopyTo(System.Collections.Generic.KeyValuePair{`0,`1}[],System.Int32)">
            <summary>
            Copies the elements of the collection to an <see cref="T:System.Array"></see>, starting at a particular <see cref="T:System.Array"></see> index.
            </summary>
            <param name="array">The one-dimensional <see cref="T:System.Array"></see> that is the destination of the elements copied from collection. The <see cref="T:System.Array"></see> must have zero-based indexing.</param>
            <param name="arrayIndex">The zero-based index in array at which copying begins.</param>
            <exception cref="T:System.ArgumentOutOfRangeException">arrayIndex is less than 0.</exception>
            <exception cref="T:System.ArgumentNullException">array is null.</exception>
            <exception cref="T:System.ArgumentException">array is multidimensional.-or-arrayIndex is equal to or greater than the length of array.-or-The number of elements in the source collection is greater than the available space from arrayIndex to the end of the destination array.-or-Type TKey cannot be cast automatically to the type of the destination array.</exception>
        </member>
        <member name="M:WHC.OrderWater.Commons.Collections.OrderedDictionary`2.System#Collections#Generic#ICollection{System#Collections#Generic#KeyValuePair{TKey@TValue}}#Remove(System.Collections.Generic.KeyValuePair{`0,`1})">
            <summary>
            Removes the first occurrence of a specific object from the collection.
            </summary>
            <param name="item">The object to remove from the collection.</param>
            <returns>
            true if item was successfully removed from the collection; otherwise, false. This method also returns false if item is not found in the original collection.
            </returns>
            <exception cref="T:System.NotSupportedException">The collection is read-only.</exception>
        </member>
        <member name="M:WHC.OrderWater.Commons.Collections.OrderedDictionary`2.System#Collections#Generic#IEnumerable{System#Collections#Generic#KeyValuePair{TKey@TValue}}#GetEnumerator">
            <summary>
            Returns an enumerator that iterates through the collection.
            </summary>
            <returns>
            A <see cref="T:System.Collections.Generic.IEnumerator`1"></see> that can be used to iterate through the collection.
            </returns>
        </member>
        <member name="M:WHC.OrderWater.Commons.Collections.OrderedDictionary`2.GetEnumerator">
            <summary>
            Gets the enumerator.
            </summary>
            <returns></returns>
        </member>
        <member name="M:WHC.OrderWater.Commons.Collections.OrderedDictionary`2.System#Collections#IEnumerable#GetEnumerator">
            <summary>
            Returns an enumerator that iterates through a collection.
            </summary>
            <returns>
            An <see cref="T:System.Collections.IEnumerator"></see> object that can be used to iterate through the collection.
            </returns>
        </member>
        <member name="M:WHC.OrderWater.Commons.Collections.OrderedDictionary`2.System#ICloneable#Clone">
            <summary>
            Creates a new object that is a copy of the current instance.
            </summary>
            <returns>
            A new object that is a copy of this instance.
            </returns>
        </member>
        <member name="M:WHC.OrderWater.Commons.Collections.OrderedDictionary`2.Clone">
            <summary>
            Creates a new object that is a copy of the current instance.
            </summary>
            <returns>
            A new object that is a copy of this instance.
            </returns>
        </member>
        <member name="M:WHC.OrderWater.Commons.Collections.OrderedDictionary`2.System#Collections#Generic#IEnumerable{TValue}#GetEnumerator">
            <summary>
            Returns an enumerator that iterates through the collection.
            </summary>
            <returns>
            A <see cref="T:System.Collections.Generic.IEnumerator`1"></see> that can be used to iterate through the collection.
            </returns>
        </member>
        <member name="P:WHC.OrderWater.Commons.Collections.OrderedDictionary`2.Comparer">
            <summary>Gets the <see cref="T:System.Collections.Generic.IEqualityComparer`1"></see> that is used to determine equality of keys for the dictionarytable. </summary>
            <returns>The <see cref="T:System.Collections.Generic.IEqualityComparer`1"></see> generic interface implementation that is used to determine equality of keys for the current <see cref="T:System.Collections.Generic.Dictionary`2"></see> and to provide hash values for the keys.</returns>
        </member>
        <member name="P:WHC.OrderWater.Commons.Collections.OrderedDictionary`2.Keys">
            <summary>
            Gets an collection containing the values of the <see cref="T:System.Collections.Generic.IDictionary`2"></see>.
            </summary>
            <value></value>
            <returns>An collection containing the values of the object that implements <see cref="T:System.Collections.Generic.IDictionary`2"></see>.</returns>
        </member>
        <member name="P:WHC.OrderWater.Commons.Collections.OrderedDictionary`2.Values">
            <summary>
            Gets an collection containing the values in the <see cref="T:System.Collections.Generic.IDictionary`2"></see>.
            </summary>
            <value></value>
            <returns>An collection containing the values in the object that implements <see cref="T:System.Collections.Generic.IDictionary`2"></see>.</returns>
        </member>
        <member name="P:WHC.OrderWater.Commons.Collections.OrderedDictionary`2.Item(`0)">
            <summary>
            Gets or sets the value with the specified key.
            </summary>
            <value></value>
        </member>
        <member name="P:WHC.OrderWater.Commons.Collections.OrderedDictionary`2.Item(System.Int32)">
            <summary>Gets or sets the value associated on the specified index.</summary>
            <returns>The value associated on the specified index. If the specified index is invalid, 
            a get or set operation throws a <see cref="T:System.ArgumentOutOfRangeException"></see>
            </returns>
            <param name="index">The index at which the value is get or set.</param>
            <exception cref="T:System.ArgumentOutOfRangeException">index is greater than or less than zero</exception>
        </member>
        <member name="P:WHC.OrderWater.Commons.Collections.OrderedDictionary`2.IsSynchronized">
            <summary>
            Gets a value indicating whether access to the <see cref="T:System.Collections.ICollection"></see> is synchronized (thread safe).
            </summary>
            <value>true if access to the Dictionary is synchronized (thread safe); otherwise, false. The default is false. </value>
            <returns>true if access to the <see cref="T:System.Collections.ICollection"></see> is synchronized (thread safe); otherwise, false.</returns>
        </member>
        <member name="P:WHC.OrderWater.Commons.Collections.OrderedDictionary`2.Count">
            <summary>
            Gets the number of elements contained in the collection.
            </summary>
            <value></value>
            <returns>The number of elements contained in the collection.</returns>
        </member>
        <member name="P:WHC.OrderWater.Commons.Collections.OrderedDictionary`2.System#Collections#Generic#ICollection{System#Collections#Generic#KeyValuePair{TKey@TValue}}#IsReadOnly">
            <summary>
            Gets a value indicating whether the collection is read-only.
            </summary>
            <value></value>
            <returns>true if the collection is read-only; otherwise, false.</returns>
        </member>
        <member name="T:WHC.OrderWater.Commons.SmartDataReader">
            <summary>
            转换IDataReader字段对象的格式辅助类
            可以转换有默认值、可空类型的字段数据
            </summary>
        </member>
        <member name="M:WHC.OrderWater.Commons.SmartDataReader.#ctor(System.Data.IDataReader)">
            <summary>
            构造函数，传入IDataReader对象
            </summary>
            <param name="reader"></param>
        </member>
        <member name="M:WHC.OrderWater.Commons.SmartDataReader.Read">
            <summary>
            继续读取下一个操作
            </summary>
        </member>
        <member name="M:WHC.OrderWater.Commons.SmartDataReader.GetInt32(System.String)">
            <summary>
            转换为Int类型数据
            </summary>
        </member>
        <member name="M:WHC.OrderWater.Commons.SmartDataReader.GetInt32(System.String,System.Int32)">
            <summary>
            转换为Int类型数据
            </summary>
        </member>
        <member name="M:WHC.OrderWater.Commons.SmartDataReader.GetInt32Nullable(System.String)">
            <summary>
            转换为Int类型数据
            </summary>
        </member>
        <member name="M:WHC.OrderWater.Commons.SmartDataReader.GetInt16(System.String)">
            <summary>
            转换为Int16类型数据
            </summary>
        </member>
        <member name="M:WHC.OrderWater.Commons.SmartDataReader.GetInt16(System.String,System.Int16)">
            <summary>
            转换为Int16类型数据
            </summary>
        </member>
        <member name="M:WHC.OrderWater.Commons.SmartDataReader.GetInt16Nullable(System.String)">
            <summary>
            转换为Int16类型数据
            </summary>
        </member>
        <member name="M:WHC.OrderWater.Commons.SmartDataReader.GetFloat(System.String)">
            <summary>
            转换为Float类型数据
            </summary>
        </member>
        <member name="M:WHC.OrderWater.Commons.SmartDataReader.GetFloat(System.String,System.Single)">
            <summary>
            转换为Float类型数据
            </summary>
        </member>
        <member name="M:WHC.OrderWater.Commons.SmartDataReader.GetFloatNullable(System.String)">
            <summary>
            转换为Float类型数据
            </summary>
        </member>
        <member name="M:WHC.OrderWater.Commons.SmartDataReader.GetDouble(System.String)">
            <summary>
            转换为Double类型数据
            </summary>
        </member>
        <member name="M:WHC.OrderWater.Commons.SmartDataReader.GetDouble(System.String,System.Double)">
            <summary>
            转换为Double类型数据
            </summary>
        </member>
        <member name="M:WHC.OrderWater.Commons.SmartDataReader.GetDoubleNullable(System.String)">
            <summary>
            转换为Double类型数据(可空类型）
            </summary>
        </member>
        <member name="M:WHC.OrderWater.Commons.SmartDataReader.GetDecimal(System.String)">
            <summary>
            转换为Decimal类型数据
            </summary>
        </member>
        <member name="M:WHC.OrderWater.Commons.SmartDataReader.GetDecimal(System.String,System.Decimal)">
            <summary>
            转换为Decimal类型数据
            </summary>
        </member>
        <member name="M:WHC.OrderWater.Commons.SmartDataReader.GetDecimalNullable(System.String)">
            <summary>
            转换为Decimal类型数据(可空类型）
            </summary>
        </member>
        <member name="M:WHC.OrderWater.Commons.SmartDataReader.GetSingle(System.String)">
            <summary>
            转换为Single类型数据
            </summary>
        </member>
        <member name="M:WHC.OrderWater.Commons.SmartDataReader.GetSingle(System.String,System.Single)">
            <summary>
            转换为Single类型数据
            </summary>
        </member>
        <member name="M:WHC.OrderWater.Commons.SmartDataReader.GetSingleNullable(System.String)">
            <summary>
            转换为Single类型数据(可空类型）
            </summary>
        </member>
        <member name="M:WHC.OrderWater.Commons.SmartDataReader.GetBoolean(System.String)">
            <summary>
            转换为布尔类型数据
            </summary>
        </member>
        <member name="M:WHC.OrderWater.Commons.SmartDataReader.GetBoolean(System.String,System.Boolean)">
            <summary>
            转换为布尔类型数据
            </summary>
        </member>
        <member name="M:WHC.OrderWater.Commons.SmartDataReader.GetBooleanNullable(System.String)">
            <summary>
            转换为布尔类型数据(可空类型）
            </summary>
        </member>
        <member name="M:WHC.OrderWater.Commons.SmartDataReader.GetString(System.String)">
            <summary>
            转换为字符串类型数据
            </summary>
        </member>
        <member name="M:WHC.OrderWater.Commons.SmartDataReader.GetString(System.String,System.String)">
            <summary>
            转换为字符串类型数据
            </summary>
        </member>
        <member name="M:WHC.OrderWater.Commons.SmartDataReader.GetBytes(System.String)">
            <summary>
            转换为Byte字节数据类型数据
            </summary>
        </member>
        <member name="M:WHC.OrderWater.Commons.SmartDataReader.GetBytes(System.String,System.String)">
            <summary>
            转换为Byte字节数据类型数据
            </summary>
        </member>
        <member name="M:WHC.OrderWater.Commons.SmartDataReader.GetGuid(System.String)">
            <summary>
            转换为Guid类型数据
            </summary>
        </member>
        <member name="M:WHC.OrderWater.Commons.SmartDataReader.GetGuid(System.String,System.String)">
            <summary>
            转换为Guid类型数据
            </summary>
        </member>
        <member name="M:WHC.OrderWater.Commons.SmartDataReader.GetGuidNullable(System.String)">
            <summary>
            转换为Guid类型数据(可空类型）
            </summary> 
        </member>
        <member name="M:WHC.OrderWater.Commons.SmartDataReader.GetDateTime(System.String)">
            <summary>
            转换为DateTime类型数据
            </summary>
        </member>
        <member name="M:WHC.OrderWater.Commons.SmartDataReader.GetDateTime(System.String,System.DateTime)">
            <summary>
            转换为DateTime类型数据
            </summary>
        </member>
        <member name="M:WHC.OrderWater.Commons.SmartDataReader.GetDateTimeNullable(System.String)">
            <summary>
            转换为可空DateTime类型数据
            </summary>
        </member>
        <member name="T:WHC.OrderWater.Commons.PagerHelper">
            <summary> 
            根据各种不同数据库生成不同分页语句的辅助类 
            </summary> 
        </member>
        <member name="M:WHC.OrderWater.Commons.PagerHelper.#ctor">
            <summary>
            默认构造函数，其他通过属性设置
            </summary>
        </member>
        <member name="M:WHC.OrderWater.Commons.PagerHelper.#ctor(System.String,System.String,System.String,System.Int32,System.Int32,System.Boolean,System.String)">
            <summary>
            完整的构造函数,可以包含条件,返回记录字段等条件
            </summary>
            <param name="tableName">表名</param>
            <param name="fieldsToReturn">需要返回的列</param>
            <param name="fieldNameToSort">排序字段名称</param>
            <param name="pageSize">页尺寸</param>
            <param name="pageIndex">当前的页码</param>
            <param name="isDescending">是否以降序排列</param>
            <param name="strwhere">检索条件</param>
            <param name="connectionString">连接字符串</param>
        </member>
        <member name="M:WHC.OrderWater.Commons.PagerHelper.GetOracleSql(System.Boolean)">
            <summary>
            不依赖于存储过程的分页(Oracle)
            </summary>
            <param name="isDoCount">如果isDoCount为True，返回总数统计Sql；否则返回分页语句Sql</param>
            <returns></returns>
        </member>
        <member name="M:WHC.OrderWater.Commons.PagerHelper.GetSqlServerSql(System.Boolean)">
            <summary>
            不依赖于存储过程的分页(SqlServer)
            </summary>
            <param name="isDoCount">如果isDoCount为True，返回总数统计Sql；否则返回分页语句Sql</param>
            <returns></returns>
        </member>
        <member name="M:WHC.OrderWater.Commons.PagerHelper.GetAccessSql(System.Boolean)">
            <summary>
            不依赖于存储过程的分页(Access)
            </summary>
            <param name="isDoCount">如果isDoCount为True，返回总数统计Sql；否则返回分页语句Sql</param>
            <returns></returns>
        </member>
        <member name="M:WHC.OrderWater.Commons.PagerHelper.GetMySqlSql(System.Boolean)">
            <summary>
            不依赖于存储过程的分页(MySql)
            </summary>
            <param name="isDoCount">如果isDoCount为True，返回总数统计Sql；否则返回分页语句Sql</param>
            <returns></returns>
        </member>
        <member name="M:WHC.OrderWater.Commons.PagerHelper.GetPagingSql(WHC.OrderWater.Commons.DatabaseType,System.Boolean)">
            <summary>
            获取对应数据库的分页语句
            </summary>
            <param name="dbType">数据库类型枚举</param>
            <param name="isDoCount">如果isDoCount为True，返回总数统计Sql；否则返回分页语句Sql</param>
        </member>
        <member name="P:WHC.OrderWater.Commons.PagerHelper.TableName">
            <summary>
            表名
            </summary>
        </member>
        <member name="P:WHC.OrderWater.Commons.PagerHelper.FieldsToReturn">
            <summary>
            需要返回的列
            </summary>
        </member>
        <member name="P:WHC.OrderWater.Commons.PagerHelper.FieldNameToSort">
            <summary>
            排序字段名称
            </summary>
        </member>
        <member name="P:WHC.OrderWater.Commons.PagerHelper.PageSize">
            <summary>
            页尺寸,就是一页显示多少条记录
            </summary>
        </member>
        <member name="P:WHC.OrderWater.Commons.PagerHelper.PageIndex">
            <summary>
            当前的页码
            </summary>
        </member>
        <member name="P:WHC.OrderWater.Commons.PagerHelper.IsDescending">
            <summary>
            是否以降序排列结果
            </summary>
        </member>
        <member name="P:WHC.OrderWater.Commons.PagerHelper.StrWhere">
            <summary>
            检索条件(注意: 不要加 where)
            </summary>
        </member>
        <member name="T:WHC.OrderWater.Commons.ReflectionUtil">
            <summary>
            反射操作辅助类，如获取或设置字段、属性的值等反射信息。
            </summary>
        </member>
        <member name="M:WHC.OrderWater.Commons.ReflectionUtil.GetDescription(System.Enum)">
            <overloads>
            	Get The Member Description using Description Attribute.
            </overloads>
            <summary>
            Get The Enum Field Description using Description Attribute.
            </summary>
            <param name="value">The value.</param>
            <returns>return description or value.ToString()</returns>
        </member>
        <member name="M:WHC.OrderWater.Commons.ReflectionUtil.GetDescription(System.Enum,System.Object[])">
            <summary>
            Get The Enum Field Description using Description Attribute and 
            objects to format the Description.
            </summary>
            <param name="value">Enum For Which description is required.</param>
            <param name="args">An Object array containing zero or more objects to format.</param>
            <returns>return null if DescriptionAttribute is not found or return type description</returns>
        </member>
        <member name="M:WHC.OrderWater.Commons.ReflectionUtil.GetDescription(System.Reflection.MemberInfo)">
            <summary>
            Get The Type Description using Description Attribute.
            </summary>
            <param name="member">Specified Member for which Info is Required</param>
            <returns>return null if DescriptionAttribute is not found or return type description</returns>
        </member>
        <member name="M:WHC.OrderWater.Commons.ReflectionUtil.GetDescription(System.Reflection.MemberInfo,System.Object[])">
            <summary>
            Get The Type Description using Description Attribute and 
            objects to format the Description.
            </summary>
            <param name="member"> Specified Member for which Info is Required</param>
            <param name="args">An Object array containing zero or more objects to format.</param>
            <returns>return <see cref="F:System.String.Empty"/> if DescriptionAttribute is 
            not found or return type description</returns>
        </member>
        <member name="M:WHC.OrderWater.Commons.ReflectionUtil.GetAttribute(System.Type,System.Reflection.Assembly)">
            <overloads>
            Gets the specified object attributes
            </overloads>
            <summary>
            Gets the specified object attributes for assembly as specified by type
            </summary>
            <param name="attributeType">The attribute Type for which the custom attributes are to be returned.</param>
            <param name="assembly">the assembly in which the specified attribute is defined</param>
            <returns>Attribute as Object or null if not found.</returns>
        </member>
        <member name="M:WHC.OrderWater.Commons.ReflectionUtil.GetAttribute(System.Type,System.Reflection.MemberInfo)">
            <summary>
            Gets the specified object attributes for type as specified by type
            </summary>
            <param name="attributeType">The attribute Type for which the custom attributes are to be returned.</param>
            <param name="type">the type on which the specified attribute is defined</param>
            <returns>Attribute as Object or null if not found.</returns>
        </member>
        <member name="M:WHC.OrderWater.Commons.ReflectionUtil.GetAttribute(System.Type,System.Reflection.MemberInfo,System.Boolean)">
            <summary>
            Gets the specified object attributes for type as specified by type with option to serach parent
            </summary>
            <param name="attributeType">The attribute Type for which the custom attributes are to be returned.</param>
            <param name="type">the type on which the specified attribute is defined</param>
            <param name="searchParent">if set to <see langword="true"/> [search parent].</param>
            <returns>
            Attribute as Object or null if not found.
            </returns>
        </member>
        <member name="M:WHC.OrderWater.Commons.ReflectionUtil.GetAttributes(System.Type,System.Reflection.MemberInfo)">
            <summary>
            Gets the collection of all specified object attributes for type as specified by type
            </summary>
            <param name="attributeType">The attribute Type for which the custom attributes are to be returned.</param>
            <param name="type">the type on which the specified attribute is defined</param>
            <returns>Attribute as Object or null if not found.</returns>
        </member>
        <member name="M:WHC.OrderWater.Commons.ReflectionUtil.GetAttributes(System.Type,System.Reflection.MemberInfo,System.Boolean)">
            <summary>
            Gets the collection of all specified object attributes for type as specified by type with option to serach parent
            </summary>
            <param name="attributeType">The attribute Type for which the custom attributes are to be returned.</param>
            <param name="type">the type on which the specified attribute is defined</param>
            <param name="searchParent">The attribute Type for which the custom attribute is to be returned.</param>
            <returns>
            Attribute as Object or null if not found.
            </returns>
        </member>
        <member name="M:WHC.OrderWater.Commons.ReflectionUtil.GetImageResource(System.String)">
            <summary>
            根据资源名称获取图片资源流
            </summary>
            <param name="ResourceName"></param>
            <returns></returns>
        </member>
        <member name="M:WHC.OrderWater.Commons.ReflectionUtil.LoadBitmap(System.Type,System.String,System.String)">
            <summary>
            获取程序集资源的位图资源
            </summary>
            <param name="assemblyType">程序集中的某一对象类型</param>
            <param name="resourceHolder">资源的根名称。例如，名为“MyResource.en-US.resources”的资源文件的根名称为“MyResource”。</param>
            <param name="imageName">资源项名称</param>
        </member>
        <member name="M:WHC.OrderWater.Commons.ReflectionUtil.GetStringRes(System.Type,System.String,System.String)">
            <summary>
             获取程序集资源的文本资源
            </summary>
            <param name="assemblyType">程序集中的某一对象类型</param>
            <param name="resName">资源项名称</param>
            <param name="resourceHolder">资源的根名称。例如，名为“MyResource.en-US.resources”的资源文件的根名称为“MyResource”。</param>
        </member>
        <member name="M:WHC.OrderWater.Commons.ReflectionUtil.GetManifestString(System.Type,System.String,System.String)">
            <summary>
            获取程序集嵌入资源的文本形式
            </summary>
            <param name="assemblyType">程序集中的某一对象类型</param>
            <param name="charset">字符集编码</param>
            <param name="ResName">嵌入资源相对路径</param>
            <returns>如没找到该资源则返回空字符</returns>
        </member>
        <member name="M:WHC.OrderWater.Commons.ReflectionUtil.CreateInstance(System.String)">
            <summary>
            创建对应实例
            </summary>
            <param name="type">类型</param>
            <returns>对应实例</returns>
        </member>
        <member name="M:WHC.OrderWater.Commons.ReflectionUtil.CreateInstance(System.Type)">
            <summary>
            创建对应实例
            </summary>
            <param name="type">类型</param>
            <returns>对应实例</returns>
        </member>
        <member name="F:WHC.OrderWater.Commons.PrintOptions.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:WHC.OrderWater.Commons.PrintOptions.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:WHC.OrderWater.Commons.PrintOptions.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="T:WHC.OrderWater.Commons.HttpWebRequestHelper">
            <summary>
            网页抓取帮助
            </summary>
        </member>
        <member name="M:WHC.OrderWater.Commons.HttpWebRequestHelper.#ctor(System.Net.CookieContainer)">
            <summary>
            
            </summary>
            <param name="cookie"></param>
        </member>
        <member name="M:WHC.OrderWater.Commons.HttpWebRequestHelper.#ctor">
            <summary>
            
            </summary>
        </member>
        <member name="F:WHC.OrderWater.Commons.HttpWebRequestHelper.cookieContainer">
            <summary>
            cookie集合 
            </summary>
        </member>
        <member name="M:WHC.OrderWater.Commons.HttpWebRequestHelper.Get(System.String)">
            <summary>
            获取页面html   encodingname:gb2312
            </summary>
            <param name="uri">访问url</param>
            <returns></returns>
        </member>
        <member name="M:WHC.OrderWater.Commons.HttpWebRequestHelper.Get(System.String,System.String)">
            <summary>
            获取页面html   encodingname:gb2312
            </summary>
            <param name="uri">访问url</param>
            <param name="refererUri">来源url</param>
            <returns></returns>
        </member>
        <member name="M:WHC.OrderWater.Commons.HttpWebRequestHelper.Get(System.String,System.String,System.String)">
            <summary>
            获取页面html
            </summary>
            <param name="uri">访问url</param>
            <param name="refererUri">来源url</param>
            <param name="encodingName">编码名称  例如：gb2312</param>
            <returns></returns>
        </member>
        <member name="M:WHC.OrderWater.Commons.HttpWebRequestHelper.Get(System.String,System.String,System.String,System.Net.WebProxy)">
            <summary>
            获取页面html
            </summary>
            <param name="uri">访问url</param>
            <param name="refererUri">来源url</param>
            <param name="encodingName">编码名称  例如：gb2312</param>
            <param name="webproxy">代理</param>
            <returns></returns>
        </member>
        <member name="M:WHC.OrderWater.Commons.HttpWebRequestHelper.GetBytes(System.String)">
            <summary>
            获取文件或图片 （验证码）
            </summary>
            <param name="uri">访问url</param>
            <returns></returns>
        </member>
        <member name="M:WHC.OrderWater.Commons.HttpWebRequestHelper.GetBytes(System.String,System.String)">
            <summary>
            获取文件或图片 （验证码）
            </summary>
            <param name="uri">访问url</param>
            <param name="refererUri">来源url</param>
            <returns></returns>
        </member>
        <member name="M:WHC.OrderWater.Commons.HttpWebRequestHelper.GetBytes(System.String,System.String,System.Net.WebProxy)">
            <summary>
            获取文件或图片 （验证码）
            </summary>
            <param name="uri">访问url</param>
            <param name="refererUri">来源url</param>
            <returns></returns>
        </member>
        <member name="M:WHC.OrderWater.Commons.HttpWebRequestHelper.GetStream(System.String)">
            <summary>
            获取文件或图片 （验证码）
            </summary>
            <param name="uri">访问url</param>
            <returns></returns>
        </member>
        <member name="M:WHC.OrderWater.Commons.HttpWebRequestHelper.GetStream(System.String,System.String)">
            <summary>
            获取文件或图片 （验证码）
            </summary>
            <param name="uri">访问url</param>
            <param name="refererUri">来源url</param>
            <returns></returns>
        </member>
        <member name="M:WHC.OrderWater.Commons.HttpWebRequestHelper.GetStream(System.String,System.String,System.Net.WebProxy)">
            <summary>
            获取文件或图片 （验证码）
            </summary>
            <param name="uri">访问url</param>
            <param name="refererUri">来源url</param>
            <param name="webproxy">代理</param>
            <returns></returns>
        </member>
        <member name="M:WHC.OrderWater.Commons.HttpWebRequestHelper.Post(System.String,System.String)">
            <summary>
            POST提交   模拟xp IE7.0     默认GB2312
            </summary>
            <param name="uri">访问url</param>
            <param name="postData">提交的数据</param>
            <returns></returns>
        </member>
        <member name="M:WHC.OrderWater.Commons.HttpWebRequestHelper.Post(System.String,System.String,System.String)">
            <summary>
            POST提交   模拟xp IE7.0     默认GB2312
            </summary>
            <param name="uri">访问url</param>
            <param name="refererUri">来源url</param>
            <param name="postData">提交的数据</param>
            <returns></returns>
        </member>
        <member name="M:WHC.OrderWater.Commons.HttpWebRequestHelper.Post(System.String,System.String,System.String,System.String)">
            <summary>
            POST提交    模拟xp IE7.0
            </summary>
            <param name="uri">访问url</param>
            <param name="refererUri">来源url</param>
            <param name="postData">提交的数据</param>
            <param name="encodingName">编码名称  例如：gb2312</param>
            <returns></returns>
        </member>
        <member name="M:WHC.OrderWater.Commons.HttpWebRequestHelper.Post(System.String,System.String,System.String,System.String,System.Net.WebProxy)">
            <summary>
            POST提交    模拟xp IE7.0
            </summary>
            <param name="uri">访问url</param>
            <param name="refererUri">来源url</param>
            <param name="postData">提交的数据</param>
            <param name="encodingName">编码名称  例如：gb2312</param>
            <param name="webproxy">代理</param>
            <returns></returns>
        </member>
        <member name="F:WHC.OrderWater.Commons.FTPHelper.server">
            <summary>
            IP address or hostname to connect to
            </summary>
        </member>
        <member name="F:WHC.OrderWater.Commons.FTPHelper.user">
            <summary>
            Username to login as
            </summary>
        </member>
        <member name="F:WHC.OrderWater.Commons.FTPHelper.pass">
            <summary>
            Password for account
            </summary>
        </member>
        <member name="F:WHC.OrderWater.Commons.FTPHelper.port">
            <summary>
            Port number the FTP server is listening on
            </summary>
        </member>
        <member name="F:WHC.OrderWater.Commons.FTPHelper.timeout">
            <summary>
            The timeout (miliseconds) for waiting on data to arrive
            </summary>
        </member>
        <member name="M:WHC.OrderWater.Commons.FTPHelper.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="M:WHC.OrderWater.Commons.FTPHelper.#ctor(System.String,System.String,System.String)">
            <summary>
            Constructor
            </summary>
            <param name="server">Server to connect to</param>
            <param name="user">Account to login as</param>
            <param name="pass">Account password</param>
        </member>
        <member name="M:WHC.OrderWater.Commons.FTPHelper.#ctor(System.String,System.Int32,System.String,System.String)">
            <summary>
            Constructor
            </summary>
            <param name="server">Server to connect to</param>
            <param name="port">Port server is listening on</param>
            <param name="user">Account to login as</param>
            <param name="pass">Account password</param>
        </member>
        <member name="M:WHC.OrderWater.Commons.FTPHelper.Disconnect">
            <summary>
            Closes all connections to the ftp server
            </summary>
        </member>
        <member name="M:WHC.OrderWater.Commons.FTPHelper.Connect(System.String,System.Int32,System.String,System.String)">
            <summary>
            Connect to a ftp server
            </summary>
            <param name="server">IP or hostname of the server to connect to</param>
            <param name="port">Port number the server is listening on</param>
            <param name="user">Account name to login as</param>
            <param name="pass">Password for the account specified</param>
        </member>
        <member name="M:WHC.OrderWater.Commons.FTPHelper.Connect(System.String,System.String,System.String)">
            <summary>
            Connect to a ftp server
            </summary>
            <param name="server">IP or hostname of the server to connect to</param>
            <param name="user">Account name to login as</param>
            <param name="pass">Password for the account specified</param>
        </member>
        <member name="M:WHC.OrderWater.Commons.FTPHelper.Connect">
            <summary>
            Connect to an ftp server
            </summary>
        </member>
        <member name="M:WHC.OrderWater.Commons.FTPHelper.List">
            <summary>
            Retrieves a list of files from the ftp server
            </summary>
            <returns>An ArrayList of files</returns>
        </member>
        <member name="M:WHC.OrderWater.Commons.FTPHelper.ListFiles">
            <summary>
            Gets a file list only
            </summary>
            <returns>ArrayList of files only</returns>
        </member>
        <member name="M:WHC.OrderWater.Commons.FTPHelper.ListDirectories">
            <summary>
            Gets a directory list only
            </summary>
            <returns>ArrayList of directories only</returns>
        </member>
        <member name="M:WHC.OrderWater.Commons.FTPHelper.GetFileDateRaw(System.String)">
            <summary>
            Returns the 'Raw' DateInformation in ftp format. (YYYYMMDDhhmmss). Use GetFileDate to return a DateTime object as a better option.
            </summary>
            <param name="fileName">Remote FileName to Query</param>
            <returns>Returns the 'Raw' DateInformation in ftp format</returns>
        </member>
        <member name="M:WHC.OrderWater.Commons.FTPHelper.GetFileDate(System.String)">
            <summary>
            GetFileDate will query the ftp server for the date of the remote file.
            </summary>
            <param name="fileName">Remote FileName to Query</param>
            <returns>DateTime of the Input FileName</returns>
        </member>
        <member name="M:WHC.OrderWater.Commons.FTPHelper.GetWorkingDirectory">
            <summary>
            Get the working directory on the ftp server
            </summary>
            <returns>The working directory</returns>
        </member>
        <member name="M:WHC.OrderWater.Commons.FTPHelper.ChangeDir(System.String)">
            <summary>
            Change to another directory on the ftp server
            </summary>
            <param name="path">Directory to change to</param>
        </member>
        <member name="M:WHC.OrderWater.Commons.FTPHelper.MakeDir(System.String)">
            <summary>
            Create a directory on the ftp server
            </summary>
            <param name="dir">Directory to create</param>
        </member>
        <member name="M:WHC.OrderWater.Commons.FTPHelper.RemoveDir(System.String)">
            <summary>
            Remove a directory from the ftp server
            </summary>
            <param name="dir">Name of directory to remove</param>
        </member>
        <member name="M:WHC.OrderWater.Commons.FTPHelper.RemoveFile(System.String)">
            <summary>
            Remove a file from the ftp server
            </summary>
            <param name="filename">Name of the file to delete</param>
        </member>
        <member name="M:WHC.OrderWater.Commons.FTPHelper.RenameFile(System.String,System.String)">
            <summary>
            Rename a file on the ftp server
            </summary>
            <param name="oldfilename">Old file name</param>
            <param name="newfilename">New file name</param>
        </member>
        <member name="M:WHC.OrderWater.Commons.FTPHelper.GetFileSize(System.String)">
            <summary>
            Get the size of a file (Provided the ftp server supports it)
            </summary>
            <param name="filename">Name of file</param>
            <returns>The size of the file specified by filename</returns>
        </member>
        <member name="M:WHC.OrderWater.Commons.FTPHelper.OpenUpload(System.String)">
            <summary>
            Open an upload with no resume if it already exists
            </summary>
            <param name="filename">File to upload</param>
        </member>
        <member name="M:WHC.OrderWater.Commons.FTPHelper.OpenUpload(System.String,System.String)">
            <summary>
            Open an upload with no resume if it already exists
            </summary>
            <param name="filename">Local file to upload (Can include path to file)</param>
            <param name="remotefilename">Filename to store file as on ftp server</param>
        </member>
        <member name="M:WHC.OrderWater.Commons.FTPHelper.OpenUpload(System.String,System.Boolean)">
            <summary>
            Open an upload with resume support
            </summary>
            <param name="filename">Local file to upload (Can include path to file)</param>
            <param name="resume">Attempt resume if exists</param>
        </member>
        <member name="M:WHC.OrderWater.Commons.FTPHelper.OpenUpload(System.String,System.String,System.Boolean)">
            <summary>
            Open an upload with resume support
            </summary>
            <param name="filename">Local file to upload (Can include path to file)</param>
            <param name="remote_filename">Filename to store file as on ftp server</param>
            <param name="resume">Attempt resume if exists</param>
        </member>
        <member name="M:WHC.OrderWater.Commons.FTPHelper.OpenDownload(System.String)">
            <summary>
            Download a file with no resume
            </summary>
            <param name="filename">Remote file name</param>
        </member>
        <member name="M:WHC.OrderWater.Commons.FTPHelper.OpenDownload(System.String,System.Boolean)">
            <summary>
            Download a file with optional resume
            </summary>
            <param name="filename">Remote file name</param>
            <param name="resume">Attempt resume if file exists</param>
        </member>
        <member name="M:WHC.OrderWater.Commons.FTPHelper.OpenDownload(System.String,System.String)">
            <summary>
            Download a file with no attempt to resume
            </summary>
            <param name="filename">Remote filename</param>
            <param name="localfilename">Local filename (Can include path to file)</param>
        </member>
        <member name="M:WHC.OrderWater.Commons.FTPHelper.OpenDownload(System.String,System.String,System.Boolean)">
            <summary>
            Open a file for download
            </summary>
            <param name="remote_filename">The name of the file on the FTP server</param>
            <param name="local_filename">The name of the file to save as (Can include path to file)</param>
            <param name="resume">Attempt resume if file exists</param>
        </member>
        <member name="M:WHC.OrderWater.Commons.FTPHelper.DoUpload">
            <summary>
            Upload the file, to be used in a loop until file is completely uploaded
            </summary>
            <returns>Bytes sent</returns>
        </member>
        <member name="M:WHC.OrderWater.Commons.FTPHelper.DoDownload">
            <summary>
            Download a file, to be used in a loop until the file is completely downloaded
            </summary>
            <returns>Number of bytes recieved</returns>
        </member>
        <member name="P:WHC.OrderWater.Commons.FTPHelper.IsConnected">
            <summary>
            Connection status to the server
            </summary>
        </member>
        <member name="P:WHC.OrderWater.Commons.FTPHelper.MessagesAvailable">
            <summary>
            Returns true if the message buffer has data in it
            </summary>
        </member>
        <member name="P:WHC.OrderWater.Commons.FTPHelper.Messages">
            <summary>
            Server messages if any, buffer is cleared after you access this property
            </summary>
        </member>
        <member name="P:WHC.OrderWater.Commons.FTPHelper.ResponseString">
            <summary>
            The response string from the last issued command
            </summary>
        </member>
        <member name="P:WHC.OrderWater.Commons.FTPHelper.BytesTotal">
            <summary>
            The total number of bytes sent/recieved in a transfer
            </summary>
        </member>
        <member name="P:WHC.OrderWater.Commons.FTPHelper.FileSize">
            <summary>
            The size of the file being downloaded/uploaded (Can possibly be 0 if no size is available)
            </summary>
        </member>
        <member name="P:WHC.OrderWater.Commons.FTPHelper.PassiveMode">
            <summary>
            True:  Passive mode [default]
            False: Active Mode
            </summary>
        </member>
        <member name="T:WHC.OrderWater.Commons.FormAnimator">
            <summary> 
            Animates a form when it is shown, hidden or closed. 
            </summary> 
            <remarks> 
            MDI child forms do not support the Blend method and only support other 
            methods while being displayed for the first time and when closing. 
            </remarks> 
        </member>
        <member name="M:WHC.OrderWater.Commons.FormAnimator.#ctor(System.Windows.Forms.Form)">
            ----------------------------------------------------------------------------- 
            <summary> 
            Creates a new FormAnimator object for the specified form. 
            </summary> 
            <param name="form"> 
            The form to be animated. 
            </param> 
            <remarks> 
            No animation will be used unless the Method and/or Direction properties are 
            set independently. The duration is set to quarter of a second by default. 
            </remarks> 
            <history> 
            [John] 5/09/2005 Created 
            </history> 
            ----------------------------------------------------------------------------- 
        </member>
        <member name="M:WHC.OrderWater.Commons.FormAnimator.#ctor(System.Windows.Forms.Form,WHC.OrderWater.Commons.FormAnimator.AnimationMethod,System.Int32)">
            ----------------------------------------------------------------------------- 
            <summary> 
            Creates a new FormAnimator object for the specified form using the specified 
            method over the specified duration. 
            </summary> 
            <param name="form"> 
            The form to be animated. 
            </param> 
            <param name="method"> 
            The animation method used to show and hide the form. 
            </param> 
            <param name="duration"> 
            The number of milliseconds over which the animation is played. 
            </param> 
            <remarks> 
            No animation will be used for the Roll or Slide methods unless the Direction 
            property is set independently. 
            </remarks> 
            <history> 
            [John] 5/09/2005 Created 
            </history> 
            ----------------------------------------------------------------------------- 
        </member>
        <member name="M:WHC.OrderWater.Commons.FormAnimator.#ctor(System.Windows.Forms.Form,WHC.OrderWater.Commons.FormAnimator.AnimationMethod,WHC.OrderWater.Commons.FormAnimator.AnimationDirection,System.Int32)">
            ----------------------------------------------------------------------------- 
            <summary> 
            Creates a new FormAnimator object for the specified form using the specified 
            method in the specified direction over the specified duration. 
            </summary> 
            <param name="form"> 
            The form to be animated. 
            </param> 
            <param name="method"> 
            The animation method used to show and hide the form. 
            </param> 
            <param name="direction"> 
            The direction in which to animate the form. 
            </param> 
            <param name="duration"> 
            The number of milliseconds over which the animation is played. 
            </param> 
            <remarks> 
            The direction argument will have no effect if the Centre or Blend method is 
            specified. 
            </remarks> 
            <history> 
            [John] 5/09/2005 Created 
            </history> 
            ----------------------------------------------------------------------------- 
        </member>
        <member name="P:WHC.OrderWater.Commons.FormAnimator.Method">
            ----------------------------------------------------------------------------- 
            <summary> 
            Gets or sets the animation method used to show and hide the form. 
            </summary> 
            <value> 
            The animation method used to show and hide the form. 
            </value> 
            <remarks> 
            Roll is used by default if no method is specified. 
            </remarks> 
            <history> 
            [John] 31/08/2005 Created 
            </history> 
            ----------------------------------------------------------------------------- 
        </member>
        <member name="P:WHC.OrderWater.Commons.FormAnimator.Direction">
            ----------------------------------------------------------------------------- 
            <summary> 
            Gets or sets the direction in which the animation is performed. 
            </summary> 
            <value> 
            The direction in which the animation is performed. 
            </value> 
            <remarks> 
            The direction is only applicable to the Roll and Slide methods. 
            </remarks> 
            <history> 
            [John] 31/08/2005 Created 
            </history> 
            ----------------------------------------------------------------------------- 
        </member>
        <member name="P:WHC.OrderWater.Commons.FormAnimator.Duration">
            ----------------------------------------------------------------------------- 
            <summary> 
            Gets or sets the number of milliseconds over which the animation is played. 
            </summary> 
            <value> 
            The number of milliseconds over which the animation is played. 
            </value> 
            <remarks> 
            </remarks> 
            <history> 
            [John] 5/09/2005 Created 
            </history> 
            ----------------------------------------------------------------------------- 
        </member>
        <member name="P:WHC.OrderWater.Commons.FormAnimator.Form">
            ----------------------------------------------------------------------------- 
            <summary> 
            Gets the form to be animated. 
            </summary> 
            <value> 
            The form to be animated. 
            </value> 
            <remarks> 
            </remarks> 
            <history> 
            [John] 5/09/2005 Created 
            </history> 
            ----------------------------------------------------------------------------- 
        </member>
        <member name="T:WHC.OrderWater.Commons.FormAnimator.AnimationMethod">
            ----------------------------------------------------------------------------- 
            <summary> 
            The methods of animation available. 
            </summary> 
            <remarks> 
            </remarks> 
            <history> 
            [John] 31/08/2005 Created 
            </history> 
            ----------------------------------------------------------------------------- 
        </member>
        <member name="T:WHC.OrderWater.Commons.FormAnimator.AnimationDirection">
            ----------------------------------------------------------------------------- 
            <summary> 
            The directions in which the Roll and Slide animations can be shown. 
            </summary> 
            <remarks> 
            Horizontal and vertical directions can be combined to create diagonal animations. 
            </remarks> 
            <history> 
            [John] 31/08/2005 Created 
            </history> 
            ----------------------------------------------------------------------------- 
        </member>
        <member name="T:WHC.OrderWater.Commons.FileAssociationsHelper">
            <summary>
            Helper class for registering file associations.
            </summary>
        </member>
        <member name="M:WHC.OrderWater.Commons.FileAssociationsHelper.RegisterFileAssociations(System.String,System.Boolean,System.String,System.String,System.String[])">
            <summary>
            Registers file associations for an application.
            </summary>
            <param name="progId">The application's ProgID.</param>
            <param name="registerInHKCU">Whether to register the
            association per-user (in HKCU).  The only supported value
            at this time is <b>false</b>.</param>
            <param name="appId">The application's app-id.</param>
            <param name="openWith">The command and arguments to be used
            when opening a shortcut to a document.</param>
            <param name="extensions">The extensions to register.</param>
        </member>
        <member name="M:WHC.OrderWater.Commons.FileAssociationsHelper.UnregisterFileAssociations(System.String,System.Boolean,System.String,System.String,System.String[])">
            <summary>
            Unregisters file associations for an application.
            </summary>
            <param name="progId">The application's ProgID.</param>
            <param name="registerInHKCU">Whether to register the
            association per-user (in HKCU).  The only supported value
            at this time is <b>false</b>.</param>
            <param name="appId">The application's app-id.</param>
            <param name="openWith">The command and arguments to be used
            when opening a shortcut to a document.</param>
            <param name="extensions">The extensions to unregister.</param>
        </member>
        <member name="T:WHC.OrderWater.Commons.CoolPrintPreviewDialog">
            <summary>
            Represents a dialog containing a <see cref="T:WHC.OrderWater.Commons.CoolPrintPreviewControl"/> control
            used to preview and print <see cref="T:System.Drawing.Printing.PrintDocument"/> objects.
            </summary>
            <remarks>
            This dialog is similar to the standard <see cref="T:System.Windows.Forms.PrintPreviewDialog"/>
            but provides additional options such printer and page setup buttons,
            a better UI based on the <see cref="T:System.Windows.Forms.ToolStrip"/> control, and built-in
            PDF export.
            </remarks>
        </member>
        <member name="M:WHC.OrderWater.Commons.CoolPrintPreviewDialog.#ctor">
            <summary>
            Initializes a new instance of a <see cref="T:WHC.OrderWater.Commons.CoolPrintPreviewDialog"/>.
            </summary>
        </member>
        <member name="M:WHC.OrderWater.Commons.CoolPrintPreviewDialog.#ctor(System.Windows.Forms.Control)">
            <summary>
            Initializes a new instance of a <see cref="T:WHC.OrderWater.Commons.CoolPrintPreviewDialog"/>.
            </summary>
            <param name="parentForm">Parent form that defines the initial size for this dialog.</param>
        </member>
        <member name="M:WHC.OrderWater.Commons.CoolPrintPreviewDialog.OnShown(System.EventArgs)">
            <summary>
            Overridden to assign document to preview control only after the 
            initial activation.
            </summary>
            <param name="e"><see cref="T:System.EventArgs"/> that contains the event data.</param>
        </member>
        <member name="M:WHC.OrderWater.Commons.CoolPrintPreviewDialog.OnFormClosing(System.Windows.Forms.FormClosingEventArgs)">
            <summary>
            Overridden to cancel any ongoing previews when closing form.
            </summary>
            <param name="e"><see cref="T:System.Windows.Forms.FormClosingEventArgs"/> that contains the event data.</param>
        </member>
        <member name="F:WHC.OrderWater.Commons.CoolPrintPreviewDialog.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:WHC.OrderWater.Commons.CoolPrintPreviewDialog.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:WHC.OrderWater.Commons.CoolPrintPreviewDialog.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="P:WHC.OrderWater.Commons.CoolPrintPreviewDialog.Document">
            <summary>
            Gets or sets the <see cref="T:System.Drawing.Printing.PrintDocument"/> to preview.
            </summary>
        </member>
        <!-- 对于成员“T:WHC.OrderWater.Commons.PageImageList”忽略有格式错误的 XML 注释 -->
        <member name="T:WHC.OrderWater.Commons.CCalendar">
            <summary>
            常用显示日期时间、农历、生肖的日历类
            </summary>
        </member>
        <member name="M:WHC.OrderWater.Commons.CCalendar.GetDateInfo(System.DateTime)">
            <summary>
            得到日期信息
            </summary>
            <param name="d">待检查的日子</param>
            <returns>日期信息</returns>
        </member>
        <member name="M:WHC.OrderWater.Commons.CCalendar.GetDateTidyInfo(System.DateTime)">
            <summary>
            得到精简日期信息（不含节日）
            </summary>
            <param name="d">待检查的日子</param>
            <returns>日期信息</returns>
        </member>
        <member name="T:WHC.OrderWater.Commons.CCalendar.structDate">
            <summary>
            结构。日期对象
            </summary>
        </member>
        <member name="T:WHC.OrderWater.Commons.CCalendar.StructDateFullInfo">
            <summary>
            结构。完整的日期对象
            </summary>
        </member>
        <member name="F:WHC.OrderWater.Commons.CCalendar.StructDateFullInfo.Year">
            <summary>
            公历年
            </summary>
        </member>
        <member name="F:WHC.OrderWater.Commons.CCalendar.StructDateFullInfo.Month">
            <summary>
            公历月
            </summary>
        </member>
        <member name="F:WHC.OrderWater.Commons.CCalendar.StructDateFullInfo.Day">
            <summary>
            公历日
            </summary>
        </member>
        <member name="F:WHC.OrderWater.Commons.CCalendar.StructDateFullInfo.IsLeap">
            <summary>
            是否闰月
            </summary>
        </member>
        <member name="F:WHC.OrderWater.Commons.CCalendar.StructDateFullInfo.Cyear">
            <summary>
            农历年
            </summary>
        </member>
        <member name="F:WHC.OrderWater.Commons.CCalendar.StructDateFullInfo.Scyear">
            <summary>
            农历年名称
            </summary>
        </member>
        <member name="F:WHC.OrderWater.Commons.CCalendar.StructDateFullInfo.CyearCyl">
            <summary>
            干支
            </summary>
        </member>
        <member name="F:WHC.OrderWater.Commons.CCalendar.StructDateFullInfo.Cmonth">
            <summary>
            农历月
            </summary>
        </member>
        <member name="F:WHC.OrderWater.Commons.CCalendar.StructDateFullInfo.Scmonth">
            <summary>
            农历月名称
            </summary>
        </member>
        <member name="F:WHC.OrderWater.Commons.CCalendar.StructDateFullInfo.CmonthCyl">
            <summary>
            干支月
            </summary>
        </member>
        <member name="F:WHC.OrderWater.Commons.CCalendar.StructDateFullInfo.Cday">
            <summary>
            农历日
            </summary>
        </member>
        <member name="F:WHC.OrderWater.Commons.CCalendar.StructDateFullInfo.Scday">
            <summary>
            农历日名称
            </summary>
        </member>
        <member name="F:WHC.OrderWater.Commons.CCalendar.StructDateFullInfo.CdayCyl">
            <summary>
            干支日
            </summary>
        </member>
        <member name="F:WHC.OrderWater.Commons.CCalendar.StructDateFullInfo.solarterm">
            <summary>
            节气
            </summary>
        </member>
        <member name="F:WHC.OrderWater.Commons.CCalendar.StructDateFullInfo.DayInWeek">
            <summary>
            星期几
            </summary>
        </member>
        <member name="F:WHC.OrderWater.Commons.CCalendar.StructDateFullInfo.Feast">
            <summary>
            节日
            </summary>
        </member>
        <member name="F:WHC.OrderWater.Commons.CCalendar.StructDateFullInfo.Image">
            <summary>
            主题图片
            </summary>
        </member>
        <member name="F:WHC.OrderWater.Commons.CCalendar.StructDateFullInfo.Fullinfo">
            <summary>
            完整的日期信息
            </summary>
        </member>
        <member name="F:WHC.OrderWater.Commons.CCalendar.StructDateFullInfo.SayHello">
            <summary>
            有特别的问候语吗
            </summary>
        </member>
        <member name="T:WHC.OrderWater.Commons.Cache">
            <summary>
            全局统一的缓存类
            </summary>
        </member>
        <member name="T:WHC.OrderWater.Commons.AppConfig">
            <summary>
            用于获取或设置Web.config/*.exe.config中节点数据的辅助类
            </summary>
        </member>
        <member name="M:WHC.OrderWater.Commons.AppConfig.#ctor">
            <summary>
            从当前目录中按顺序检索Web.Config和*.App.Config文件。
            如果找到一个，则使用它作为配置文件；否则会抛出一个ArgumentNullException异常。
            </summary>
        </member>
        <member name="M:WHC.OrderWater.Commons.AppConfig.#ctor(System.String)">
            <summary>
            用户指定具体的配置文件路径
            </summary>
            <param name="configFilePath">配置文件路径（绝对路径）</param>
        </member>
        <member name="M:WHC.OrderWater.Commons.AppConfig.AppConfigSet(System.String,System.String)">
            <summary>
            设置程序的config文件
            </summary>
            <param name="keyName">键名</param>
            <param name="keyValue">键值</param>
        </member>
        <member name="M:WHC.OrderWater.Commons.AppConfig.AppConfigGet(System.String)">
            <summary>
            读取程序的config文件的键值。
            如果键名不存在，返回空
            </summary>
            <param name="keyName">键名</param>
            <returns></returns>
        </member>
        <member name="M:WHC.OrderWater.Commons.AppConfig.GetSubValue(System.String,System.String)">
            <summary>
            获取指定键名中的子项的值
            </summary>
            <param name="keyName">键名</param>
            <param name="subKeyName">以分号(;)为分隔符的子项名称</param>
            <returns>对应子项名称的值（即是=号后面的值）</returns>
        </member>
        <member name="M:WHC.OrderWater.Commons.AppConfig.SetConnectionString(System.String,System.String)">
            <summary>
            设置程序的config文件的Enterprise Library的数据库链接地址
            </summary>
            <param name="filePath">Web.config或者*.exe.config文件的绝对路径</param>
            <param name="keyName">键名</param>
            <param name="keyValue">键值</param>
        </member>
        <member name="M:WHC.OrderWater.Commons.AppConfig.GetConnectionString(System.String)">
            <summary>
            读取程序的config文件Enterprise Library的数据库链接地址
            </summary>
            <param name="filePath">Web.config或者*.exe.config文件的绝对路径</param>
            <param name="keyName">键名</param>
            <returns></returns>
        </member>
        <member name="M:WHC.OrderWater.Commons.AppConfig.GetDatabaseInfo(System.String)">
            <summary>
            获取数据库配置信息
            </summary>
            <param name="keyName">节点名称</param>
            <returns></returns>
        </member>
        <member name="M:WHC.OrderWater.Commons.AppConfig.SetDatabaseInfo(System.String,WHC.OrderWater.Commons.DatabaseInfo)">
            <summary>
            设置数据库配置信息
            </summary>
            <param name="keyName"></param>
            <param name="databaseInfo"></param>
        </member>
        <member name="P:WHC.OrderWater.Commons.AppConfig.HWSecurity">
            <summary>
            从配置文件获取权限系统链接（配置项HWSecurity的值）
            </summary>
        </member>
        <member name="P:WHC.OrderWater.Commons.AppConfig.System_ID">
            <summary>
            系统的标识ID（配置项System_ID的值）
            </summary>
        </member>
        <member name="P:WHC.OrderWater.Commons.AppConfig.AppName">
            <summary>
            应用程序名称（配置项ApplicationName的值）
            </summary>
        </member>
        <member name="P:WHC.OrderWater.Commons.AppConfig.Manufacturer">
            <summary>
            软件厂商名称（配置项Manufacturer的值）
            </summary>
        </member>
        <member name="T:WHC.OrderWater.Commons.Threading.AbortableThreadPool">
            <summary>
            A object to main Thread Pool in which object execution can be aborted
            </summary>
        </member>
        <member name="M:WHC.OrderWater.Commons.Threading.AbortableThreadPool.QueueUserWorkItem(System.Threading.WaitCallback)">
            <summary>
            Queues a method for execution. The method executes when a thread pool thread becomes available. 
            </summary>
            <param name="callback">A WaitCallback representing the method to be executed. </param>
            <returns>created workItem in Queue</returns>
        </member>
        <member name="M:WHC.OrderWater.Commons.Threading.AbortableThreadPool.QueueUserWorkItem(System.Threading.WaitCallback,System.Object)">
            <summary>
            Queues a method for execution, and specifies an object containing data to be
            used by the method. The method executes when a thread pool thread becomes available.
            </summary>
            <param name="callback">A WaitCallback representing the method to be executed.</param>
            <param name="state">An object containing data to be used by the method.</param>
            <returns>created workItem in Queue</returns>
        </member>
        <member name="M:WHC.OrderWater.Commons.Threading.AbortableThreadPool.HandleItem(System.Object)">
            <summary>
            Handles the queue workitem in thread pool.
            </summary>
            <param name="ignored">The ignored.</param>
        </member>
        <member name="M:WHC.OrderWater.Commons.Threading.AbortableThreadPool.Cancel(WHC.OrderWater.Commons.Threading.WorkItem,System.Boolean)">
            <summary>
            Cancels the specified Queue workitem.
            </summary>
            <param name="item">The item to cancel in thread pool.</param>
            <param name="allowAbort">if set to <see langword="true"/> [allow abort].</param>
            <returns>Status of item queue</returns>
        </member>
        <member name="M:WHC.OrderWater.Commons.Threading.AbortableThreadPool.GetStatus(WHC.OrderWater.Commons.Threading.WorkItem)">
            <summary>
            Get the status the specified Queue workitem.
            </summary>
            <param name="item">The item to get status in thread pool.</param>
            <returns>Status of item queue</returns>
        </member>
        <member name="T:WHC.OrderWater.Commons.IdentifyEncoding">
            <summary>
            检测字符编码的类
            <seealso cref="T:System.IO.Stream"/>
            <seealso cref="T:System.Uri"/>
            <seealso cref="T:System.IO.FileInfo"/>
            </summary>
            <remarks>
            <![CDATA[
            <strong>IdentifyEncoding</strong> 用来检测 <see cref="Uri"/>,<see cref="System.IO.FileInfo"/>,<see cref="sbyte"/> 字节数组的编码．
            Create By lion  <br/>
            2005-02-21 22:00  <br/>
            Support .Net Framework v1.1.4322 <br/> 
            WebSite：www.lionsky.net(lion-a AT sohu.com) <br/> 
            ]]>
            </remarks>
        </member>
        <member name="M:WHC.OrderWater.Commons.IdentifyEncoding.#ctor">
            <summary>
            初始化 <see cref="T:WHC.OrderWater.Commons.IdentifyEncoding"/> 的实例
            </summary>
        </member>
        <member name="M:WHC.OrderWater.Commons.IdentifyEncoding.GetEncodingName(System.Uri)">
            <summary>
            从指定的 <see cref="T:System.Uri"/> 中判断编码类型
            </summary>
            <param name="testurl">要判断的 <see cref="T:System.Uri"/> </param>
            <returns>返回编码类型("GB2312", "GBK", "HZ", "Big5", "CNS 11643", "ISO 2022CN", "UTF-8", "Unicode", "ASCII", "OTHER")</returns>
            <example>
            以下示例演示了如何调用 <see cref="M:WHC.OrderWater.Commons.IdentifyEncoding.GetEncodingName(System.Uri)"/> 方法：
            <code>
             IdentifyEncoding ide = new IdentifyEncoding();
             Response.Write(ide.GetEncodingName(new Uri("http://10.87.0.31/index.html")));  
            </code>
            </example>
        </member>
        <member name="M:WHC.OrderWater.Commons.IdentifyEncoding.GetEncodingName(System.IO.FileInfo)">
            <summary>
            从指定的 <see cref="T:System.IO.FileInfo"/> 中判断编码类型
            </summary>
            <param name="testfile">要判断的 <see cref="T:System.IO.FileInfo"/> </param>
            <returns>返回编码类型("GB2312", "GBK", "HZ", "Big5", "CNS 11643", "ISO 2022CN", "UTF-8", "Unicode", "ASCII", "OTHER")</returns>
            <example>
            以下示例演示了如何调用 <see cref="M:WHC.OrderWater.Commons.IdentifyEncoding.GetEncodingName(System.Uri)"/> 方法：
            <code>
             IdentifyEncoding ide = new IdentifyEncoding();
             Response.Write(ide.GetEncodingName(new System.IO.FileInfo(@"C:\test.txt")));  
            </code>
            </example>
        </member>
        <member name="M:WHC.OrderWater.Commons.IdentifyEncoding.GetEncodingName(System.SByte[])">
            <summary>
            从指定的 <see cref="T:System.SByte"/> 字节数组中判断编码类型
            </summary>
            <param name="rawtext">要判断的 <see cref="T:System.IO.FileInfo"/> </param>
            <returns>返回编码类型("GB2312", "GBK", "HZ", "Big5", "CNS 11643", "ISO 2022CN", "UTF-8", "Unicode", "ASCII", "OTHER")</returns>
            <example>
            以下示例演示了如何调用 <see cref="M:WHC.OrderWater.Commons.IdentifyEncoding.GetEncodingName(System.Uri)"/> 方法：
            <code>
             IdentifyEncoding ide = new IdentifyEncoding();
             Response.Write(ide.GetEncodingName(IdentifyEncoding.ToSByteArray(System.Text.Encoding.GetEncoding("gb2312").GetBytes("vod.2sort.cn")))); 
            </code>
            </example>
        </member>
        <member name="M:WHC.OrderWater.Commons.IdentifyEncoding.GB2312Probability(System.SByte[])">
            <summary>
            判断是GB2312编码的可能性
            </summary>
            <param name="rawtext">要判断的 <see cref="T:System.SByte"/> 字节数组</param>
            <returns>返回 0 至 100 之间的可能性</returns>
        </member>
        <member name="M:WHC.OrderWater.Commons.IdentifyEncoding.GBKProbability(System.SByte[])">
            <summary>
            判断是GBK编码的可能性
            </summary>
            <param name="rawtext">要判断的 <see cref="T:System.SByte"/> 字节数组</param>
            <returns>返回 0 至 100 之间的可能性</returns>
        </member>
        <member name="M:WHC.OrderWater.Commons.IdentifyEncoding.HZProbability(System.SByte[])">
            <summary>
            判断是HZ编码的可能性
            </summary>
            <param name="rawtext">要判断的 <see cref="T:System.SByte"/> 字节数组</param>
            <returns>返回 0 至 100 之间的可能性</returns>
        </member>
        <member name="M:WHC.OrderWater.Commons.IdentifyEncoding.BIG5Probability(System.SByte[])">
            <summary>
            判断是BIG5编码的可能性
            </summary>
            <param name="rawtext">要判断的 <see cref="T:System.SByte"/> 字节数组</param>
            <returns>返回 0 至 100 之间的可能性</returns>
        </member>
        <member name="M:WHC.OrderWater.Commons.IdentifyEncoding.ENCTWProbability(System.SByte[])">
            <summary>
            判断是CNS11643(台湾)编码的可能性
            </summary>
            <param name="rawtext">要判断的 <see cref="T:System.SByte"/> 字节数组</param>
            <returns>返回 0 至 100 之间的可能性</returns>
        </member>
        <member name="M:WHC.OrderWater.Commons.IdentifyEncoding.ISO2022CNProbability(System.SByte[])">
            <summary>
            判断是ISO2022CN编码的可能性
            </summary>
            <param name="rawtext">要判断的 <see cref="T:System.SByte"/> 字节数组</param>
            <returns>返回 0 至 100 之间的可能性</returns>
        </member>
        <member name="M:WHC.OrderWater.Commons.IdentifyEncoding.UTF8Probability(System.SByte[])">
            <summary>
            判断是UTF8编码的可能性
            </summary>
            <param name="rawtext">要判断的 <see cref="T:System.SByte"/> 字节数组</param>
            <returns>返回 0 至 100 之间的可能性</returns>
        </member>
        <member name="M:WHC.OrderWater.Commons.IdentifyEncoding.UnicodeProbability(System.SByte[])">
            <summary>
            判断是Unicode编码的可能性
            </summary>
            <param name="rawtext">要判断的 <see cref="T:System.SByte"/> 字节数组</param>
            <returns>返回 0 至 100 之间的可能性</returns>
        </member>
        <member name="M:WHC.OrderWater.Commons.IdentifyEncoding.ASCIIProbability(System.SByte[])">
            <summary>
            判断是ASCII编码的可能性
            </summary>
            <param name="rawtext">要判断的 <see cref="T:System.SByte"/> 字节数组</param>
            <returns>返回 0 至 100 之间的可能性</returns>
        </member>
        <member name="M:WHC.OrderWater.Commons.IdentifyEncoding.Initialize_Frequencies">
            <summary>
            初始化必要的条件
            </summary>
        </member>
        <member name="M:WHC.OrderWater.Commons.IdentifyEncoding.ToByteArray(System.SByte[])">
            <summary>
            将此实例中的指定 <see cref="T:System.SByte"/> 字符数组转换到 <see cref="T:System.Byte"/> 字符数组。
            </summary>
            <param name="sbyteArray">要转换的 <see cref="T:System.SByte"/> 字符数组</param>
            <returns>返回转换后的 <see cref="T:System.Byte"/> 字符数组</returns>
        </member>
        <member name="M:WHC.OrderWater.Commons.IdentifyEncoding.ToByteArray(System.String)">
            <summary>
            将此实例中的指定字符串转换到 <see cref="T:System.Byte"/> 字符数组。
            </summary>
            <param name="sourceString">要转换的字符串</param>
            <returns>返回转换后的 <see cref="T:System.Byte"/> 字符数组</returns>
        </member>
        <member name="M:WHC.OrderWater.Commons.IdentifyEncoding.ToByteArray(System.Object[])">
            <summary>
            将此实例中的指定 <see cref="T:System.Object"/> 数组转换到 <see cref="T:System.Byte"/> 字符数组。
            </summary>
            <param name="tempObjectArray">要转换的 <see cref="T:System.Object"/> 字符数组</param>
            <returns>返回转换后的 <see cref="T:System.Byte"/> 字符数组</returns>
        </member>
        <member name="M:WHC.OrderWater.Commons.IdentifyEncoding.ToSByteArray(System.Byte[])">
            <summary>
            将此实例中的指定 <see cref="T:System.Byte"/> 字符数组转换到 <see cref="T:System.SByte"/> 字符数组。
            </summary>
            <param name="byteArray">要转换的 <see cref="T:System.Byte"/> 字符数组</param>
            <returns>返回转换后的 <see cref="T:System.SByte"/> 字符数组</returns>
        </member>
        <member name="M:WHC.OrderWater.Commons.IdentifyEncoding.ReadInput(System.IO.Stream,System.SByte[]@,System.Int32,System.Int32)">
            <summary>从流读取字节序列,并将此流中的位置提升读取的字节数.</summary>
            <param name="sourceStream">要读取的流.</param>
            <param name="target">字节数组。此方法返回时,该缓冲区包含指定的字符数组,该数组的 start 和 (start + count-1) 之间的值由从当前源中读取的字节替换。</param>
            <param name="start">buffer 中的从零开始的字节偏移量,从此处开始存储从当前流中读取的数据。.</param>
            <param name="count">要从当前流中最多读取的字节数。</param>
            <returns>读入缓冲区中的总字节数。如果当前可用的字节数没有请求的字节数那么多,则总字节数可能小于请求的字节数,或者如果已到达流的末尾,则为零 (0)。</returns>
            <exception cref="T:System.ArgumentException">start 与 count 的和大于缓冲区长度。</exception>
            <exception cref="T:System.ArgumentNullException">target 为空引用(Visual Basic 中为 Nothing)。</exception>
            <exception cref="T:System.ArgumentOutOfRangeException">offset 或 count 为负。</exception>
            <exception cref="T:System.IO.IOException">发生 I/O 错误。</exception>
            <exception cref="T:System.NotSupportedException">流不支持读取。</exception>
            <exception cref="T:System.ObjectDisposedException">在流关闭后调用方法。</exception>
        </member>
        <member name="M:WHC.OrderWater.Commons.IdentifyEncoding.ReadInput(System.IO.TextReader,System.SByte[]@,System.Int32,System.Int32)">
            <summary>从字符系列读取字节序列,并将此字符系列中的位置提升读取的字节数。</summary>
            <param name="sourceTextReader">要读取的流。</param>
            <param name="target">字节数组。此方法返回时,该缓冲区包含指定的字符数组,该数组的 start 和 (start + count-1) 之间的值由从当前源中读取的字节替换。</param>
            <param name="start">buffer 中的从零开始的字节偏移量,从此处开始存储从当前流中读取的数据。.</param>
            <param name="count">要从当前流中最多读取的字节数。</param>
            <returns>读入缓冲区中的总字节数。如果当前可用的字节数没有请求的字节数那么多,则总字节数可能小于请求的字节数,或者如果已到达流的末尾,则为零 (0)。</returns>
            <exception cref="T:System.ArgumentException">start 与 count 的和大于缓冲区长度。</exception>
            <exception cref="T:System.ArgumentNullException">target 为空引用(Visual Basic 中为 Nothing)。</exception>
            <exception cref="T:System.ArgumentOutOfRangeException">offset 或 count 为负。</exception>
            <exception cref="T:System.IO.IOException">发生 I/O 错误。</exception>
            <exception cref="T:System.NotSupportedException">流不支持读取。</exception>
            <exception cref="T:System.ObjectDisposedException">在流关闭后调用方法。</exception>
        </member>
        <member name="M:WHC.OrderWater.Commons.IdentifyEncoding.FileLength(System.IO.FileInfo)">
            <summary>
            检测当前文件的大小
            </summary>
            <param name="file">被检测的文件</param>
            <returns>当前文件的大小。</returns>
        </member>
        <member name="M:WHC.OrderWater.Commons.IdentifyEncoding.Identity(System.Int64)">
            <summary>
            This method returns the literal value received
            </summary>
            <param name="literal">The literal to return</param>
            <returns>The received value</returns>
        </member>
        <member name="M:WHC.OrderWater.Commons.IdentifyEncoding.Identity(System.UInt64)">
            <summary>
            This method returns the literal value received
            </summary>
            <param name="literal">The literal to return</param>
            <returns>The received value</returns>
        </member>
        <member name="M:WHC.OrderWater.Commons.IdentifyEncoding.Identity(System.Single)">
            <summary>
            This method returns the literal value received
            </summary>
            <param name="literal">The literal to return</param>
            <returns>The received value</returns>
        </member>
        <member name="M:WHC.OrderWater.Commons.IdentifyEncoding.Identity(System.Double)">
            <summary>
            This method returns the literal value received
            </summary>
            <param name="literal">The literal to return</param>
            <returns>The received value</returns>
        </member>
        <member name="T:WHC.OrderWater.Commons.DataTableHelper">
            <summary>
            DataTable帮助类
            </summary>
        </member>
        <member name="M:WHC.OrderWater.Commons.DataTableHelper.AddIdentityColumn(System.Data.DataTable)">
            <summary>
            给DataTable增加一个自增列
            如果DataTable 存在 identityid 字段  则 直接返回DataTable 不做任何处理
            </summary>
            <param name="dt">DataTable</param>
            <returns>返回Datatable 增加字段 identityid </returns>
        </member>
        <member name="M:WHC.OrderWater.Commons.DataTableHelper.IsHaveRows(System.Data.DataTable)">
            <summary>
            检查DataTable 是否有数据行
            </summary>
            <param name="dt">DataTable</param>
            <returns></returns>
        </member>
        <member name="M:WHC.OrderWater.Commons.DataTableHelper.DataTableToList``1(System.Data.DataTable)">
            <summary>
            DataTable转换成实体列表
            </summary>
            <typeparam name="T">实体 T </typeparam>
            <param name="table">datatable</param>
            <returns></returns>
        </member>
        <member name="M:WHC.OrderWater.Commons.DataTableHelper.ListToDataTable``1(System.Collections.Generic.IList{``0})">
            <summary>
            实体列表转换成DataTable
            </summary>
            <typeparam name="T">实体</typeparam>
            <param name="list"> 实体列表</param>
            <returns></returns>
        </member>
        <member name="M:WHC.OrderWater.Commons.DataTableHelper.ToDataTable``1(System.Collections.Generic.IList{``0})">
            <summary>
            将泛型集合类转换成DataTable
            </summary>
            <typeparam name="T">集合项类型</typeparam>
            <param name="list">集合</param>
            <returns>数据集(表)</returns>
        </member>
        <member name="M:WHC.OrderWater.Commons.DataTableHelper.ToDataTable``1(System.Collections.Generic.IList{``0},System.String[])">
            <summary>
            将泛型集合类转换成DataTable
            </summary>
            <typeparam name="T">集合项类型</typeparam>
            <param name="list">集合</param>
            <param name="propertyName">需要返回的列的列名</param>
            <returns>数据集(表)</returns>
        </member>
        <member name="M:WHC.OrderWater.Commons.DataTableHelper.CreateTable(System.Collections.Generic.List{System.String})">
            <summary>
            根据nameList里面的字段创建一个表格,返回该表格的DataTable
            </summary>
            <param name="nameList">包含字段信息的列表</param>
            <returns>DataTable</returns>
        </member>
        <member name="M:WHC.OrderWater.Commons.DataTableHelper.CreateTable(System.String)">
            <summary>
            通过字符列表创建表字段，字段格式可以是：
            1) a,b,c,d,e
            2) a|int,b|string,c|bool,d|decimal
            </summary>
            <param name="nameString"></param>
            <returns></returns>
        </member>
        <member name="M:WHC.OrderWater.Commons.DataTableHelper.GetDataRowArray(System.Data.DataRowCollection)">
            <summary>
            获得从DataRowCollection转换成的DataRow数组
            </summary>
            <param name="drc">DataRowCollection</param>
            <returns></returns>
        </member>
        <member name="M:WHC.OrderWater.Commons.DataTableHelper.GetTableFromRows(System.Data.DataRow[])">
            <summary>
            将DataRow数组转换成DataTable，注意行数组的每个元素须具有相同的数据结构，
            否则当有元素长度大于第一个元素时，抛出异常
            </summary>
            <param name="rows">行数组</param>
            <returns></returns>
        </member>
        <member name="M:WHC.OrderWater.Commons.DataTableHelper.SortedTable(System.Data.DataTable,System.String[])">
            <summary>
            排序表的视图
            </summary>
            <param name="dt"></param>
            <param name="sorts"></param>
            <returns></returns>
        </member>
        <member name="M:WHC.OrderWater.Commons.DataTableHelper.FilterDataTable(System.Data.DataTable,System.String)">
            <summary>
            根据条件过滤表的内容
            </summary>
            <param name="dt"></param>
            <param name="condition"></param>
            <returns></returns>
        </member>
        <member name="T:WHC.OrderWater.Commons.Collections.SyncOrderedDictionary`2">
            <summary>
            Syncronized Dictionary
            </summary>
            <typeparam name="TKey">The type of the values in the dictionarytable.</typeparam>
            <typeparam name="TValue">The type of the values in the dictionarytable.</typeparam>
        </member>
        <member name="M:WHC.OrderWater.Commons.Collections.SyncOrderedDictionary`2.TryGetValue(`0,`1@)">
            <summary>
            Gets the value associated with the specified key. 
            </summary>
            <param name="key">The key of the value to get.</param>
            <param name="value">When this method returns, ContainsKey the value associated with the specified key, if the key is found; otherwise, the default value for the type of the value parameter. This parameter is passed uninitialized.</param>
            <returns>true if the Dictionary ContainsKey an element with the specified key; otherwise, false. </returns>
        </member>
        <member name="M:WHC.OrderWater.Commons.Collections.SyncOrderedDictionary`2.Remove(`0)">
            <summary>Removes the value with the specified key from the <see cref="T:System.Collections.Generic.Dictionary`2"></see>.</summary>
            <returns>true if the element is successfully found and removed; otherwise, false.  This method returns false if key is not found in the <see cref="T:System.Collections.Generic.Dictionary`2"></see>.</returns>
            <param name="key">The key of the element to remove.</param>
            <exception cref="T:System.ArgumentNullException">key is null.</exception>
        </member>
        <member name="M:WHC.OrderWater.Commons.Collections.SyncOrderedDictionary`2.GetEnumerator">
            <summary>Returns an enumerator that iterates through the <see cref="T:System.Collections.Generic.Dictionary`2"></see>.</summary>
            <returns>A structure for the <see cref="T:System.Collections.Generic.Dictionary`2"></see>.</returns>
        </member>
        <member name="M:WHC.OrderWater.Commons.Collections.SyncOrderedDictionary`2.#ctor(WHC.OrderWater.Commons.Collections.OrderedDictionary{`0,`1})">
            <summary>
            Initializes a new instance of the <see cref="T:WHC.OrderWater.Commons.Collections.SyncOrderedDictionary`2"/> class.
            </summary>
            <param name="dictionary">The dictionarytable.</param>
        </member>
        <member name="M:WHC.OrderWater.Commons.Collections.SyncOrderedDictionary`2.Add(`0,`1)">
            <summary>
            Adds the specified key and value to the dictionarytable.
            </summary>
            <param name="key">The key of the element to add.</param>
            <param name="value">The value of the element to add. The value can be null for reference types.</param>
            <exception cref="T:System.ArgumentException">An element with the same key already exists in the <see cref="T:System.Collections.Generic.Dictionary`2"></see>.</exception>
            <exception cref="T:System.ArgumentNullException">key is null.</exception>
        </member>
        <member name="M:WHC.OrderWater.Commons.Collections.SyncOrderedDictionary`2.Clear">
            <summary>
            Removes all values and values from the <see cref="T:System.Collections.Generic.Dictionary`2"></see>.
            </summary>
        </member>
        <member name="M:WHC.OrderWater.Commons.Collections.SyncOrderedDictionary`2.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Implements the <see cref="T:System.Runtime.Serialization.ISerializable"></see> interface and returns the data needed to serialize the <see cref="T:System.Collections.Generic.Dictionary`2"></see> instance.
            </summary>
            <param name="info">A <see cref="T:System.Runtime.Serialization.SerializationInfo"></see> object that ContainsKey the information required to serialize the <see cref="T:System.Collections.Generic.Dictionary`2"></see> instance.</param>
            <param name="context">A <see cref="T:System.Runtime.Serialization.StreamingContext"></see> structure that ContainsKey the source and destination of the serialized stream associated with the <see cref="T:System.Collections.Generic.Dictionary`2"></see> instance.</param>
            <exception cref="T:System.ArgumentNullException">info is null.</exception>
        </member>
        <member name="M:WHC.OrderWater.Commons.Collections.SyncOrderedDictionary`2.CopyTo(System.Collections.Generic.KeyValuePair{`0,`1}[],System.Int32)">
            <summary>
            Copies the elements of the ICollection to an array of type KeyValuePair, starting at the specified array index. 
            </summary>
            <param name="array">The one-dimensional array of type KeyValuePair that is the destination of the KeyValuePair elements copied from the ICollection. The array must have zero-based indexing.</param>
            <param name="index">The zero-based index in array at which copying begins.</param>
        </member>
        <member name="M:WHC.OrderWater.Commons.Collections.SyncOrderedDictionary`2.OnDeserialization(System.Object)">
            <summary>
            Implements the <see cref="T:System.Runtime.Serialization.ISerializable"></see> interface and raises the deserialization event when the deserialization is complete.
            </summary>
            <param name="sender">The source of the deserialization event.</param>
            <exception cref="T:System.Runtime.Serialization.SerializationException">The <see cref="T:System.Runtime.Serialization.SerializationInfo"></see> object associated with the current <see cref="T:System.Collections.Generic.Dictionary`2"></see> instance is invalid.</exception>
        </member>
        <member name="M:WHC.OrderWater.Commons.Collections.SyncOrderedDictionary`2.ContainsKey(`0)">
            <summary>
            Determines whether the specified key ContainsKey key.
            </summary>
            <param name="key">The key.</param>
            <returns>
            	<c>true</c> if the specified key ContainsKey key; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:WHC.OrderWater.Commons.Collections.SyncOrderedDictionary`2.ContainsValue(`1)">
            <summary>
            Determines whether the <see cref="T:System.Collections.Generic.Dictionary`2"></see> ContainsKey a specific value.
            </summary>
            <param name="value">The value to locate in the <see cref="T:System.Collections.Generic.Dictionary`2"></see>. The value can be null for reference types.</param>
            <returns>
            true if the <see cref="T:System.Collections.Generic.Dictionary`2"></see> ContainsKey an element with the specified value; otherwise, false.
            </returns>
        </member>
        <member name="P:WHC.OrderWater.Commons.Collections.SyncOrderedDictionary`2.Item(`0)">
            <summary>Gets or sets the value associated with the specified key.</summary>
            <returns>The value associated with the specified key. If the specified key is not found, a get operation throws a <see cref="T:System.Collections.Generic.KeyNotFoundException"></see>, and a set operation creates a new element with the specified key.</returns>
            <param name="key">The key of the value to get or set.</param>
            <exception cref="T:System.ArgumentNullException">key is null.</exception>
            <exception cref="T:System.Collections.Generic.KeyNotFoundException">The property is retrieved and key does not exist in the collection.</exception>
        </member>
        <member name="P:WHC.OrderWater.Commons.Collections.SyncOrderedDictionary`2.Item(System.Int32)">
            <summary>
            Gets or sets the Value at the specified index.
            </summary>
            <value></value>
        </member>
        <member name="P:WHC.OrderWater.Commons.Collections.SyncOrderedDictionary`2.Keys">
            <summary>Gets a collection containing the values in the <see cref="T:System.Collections.Generic.Dictionary`2"></see>.</summary>
            <returns>A <see cref="T:System.Collections.Generic.Dictionary`2.KeyCollection"></see> containing the values in the <see cref="T:System.Collections.Generic.Dictionary`2"></see>.</returns>
        </member>
        <member name="P:WHC.OrderWater.Commons.Collections.SyncOrderedDictionary`2.Values">
            <summary>Gets a collection containing the values in the <see cref="T:System.Collections.Generic.Dictionary`2"></see>.</summary>
            <returns>A <see cref="T:System.Collections.Generic.Dictionary`2.ValueCollection"></see> containing the values in the <see cref="T:System.Collections.Generic.Dictionary`2"></see>.</returns>
        </member>
        <member name="P:WHC.OrderWater.Commons.Collections.SyncOrderedDictionary`2.Comparer">
            <summary>Gets the <see cref="T:System.Collections.Generic.IEqualityComparer`1"></see> that is used to determine equality of values for the dictionarytable. </summary>
            <returns>The <see cref="T:System.Collections.Generic.IEqualityComparer`1"></see> generic interface implementation that is used to determine equality of values for the current <see cref="T:System.Collections.Generic.Dictionary`2"></see> and to provide hash values for the values.</returns>
        </member>
        <member name="P:WHC.OrderWater.Commons.Collections.SyncOrderedDictionary`2.Count">
            <summary>Gets the number of key/value pairs contained in the <see cref="T:System.Collections.Generic.Dictionary`2"></see>.</summary>
            <returns>The number of key/value pairs contained in the <see cref="T:System.Collections.Generic.Dictionary`2"></see>.</returns>
        </member>
        <member name="P:WHC.OrderWater.Commons.Collections.SyncOrderedDictionary`2.IsSynchronized">
            <summary>
            Gets a value indicating whether access to the <see cref="T:System.Collections.ICollection"></see> is synchronized (thread safe).
            </summary>
            <value>true if access to the Dictionary is synchronized (thread safe); otherwise, false. The default is false. </value>
            <returns>true if access to the <see cref="T:System.Collections.ICollection"></see> is synchronized (thread safe); otherwise, false.</returns>
        </member>
        <member name="T:WHC.OrderWater.Commons.XmlUtils">
            <summary>
            This class provides some utility method to operate the xml file.
            </summary>
        </member>
        <member name="M:WHC.OrderWater.Commons.XmlUtils.LoadObjectFromXml(System.String,System.Type)">
            <summary>
            Gets the object form the xml file.
            </summary>
            <param name="path">The xml file path.</param>
            <param name="type">The object type.</param>
            <returns>The object deserialized from the xml file.</returns>
        </member>
        <member name="M:WHC.OrderWater.Commons.XmlUtils.SaveObjectToXml(System.String,System.Object)">
            <summary>
            Saves the object to specified xml file.
            </summary>
            <param name="path">The xml file path.</param>
            <param name="obj">The object to save.</param>
        </member>
        <member name="M:WHC.OrderWater.Commons.XmlUtils.ReadFile(System.String)">
            <summary>
            Gets the text string from the file.
            </summary>
            <param name="path">The file path.</param>
            <returns>The text string in the file.</returns>
        </member>
        <member name="M:WHC.OrderWater.Commons.XmlUtils.ReadFileFromEmbedded(System.String)">
            <summary>
            Gets the text string from embedded resource(e.g: xml).
            </summary>
            <param name="fileWholeName">The resource file name including the namespace of the project.</param>
            <returns>The text string in the resource.</returns>
        </member>
        <member name="T:WHC.OrderWater.Commons.XmlHelper">
            <summary>
            XML操作类
            </summary>
        </member>
        <member name="M:WHC.OrderWater.Commons.XmlHelper.Serialize(System.String,System.Object)">
            <summary>
            序列化
            </summary>
            <param name="path"></param>
            <param name="obj"></param>
            <returns></returns>
        </member>
        <member name="M:WHC.OrderWater.Commons.XmlHelper.XmlSerialize(System.String,System.Object,System.Type)">
            <summary>
            序列化
            </summary>
            <param name="path"></param>
            <param name="obj"></param>
            <returns></returns>
        </member>
        <member name="M:WHC.OrderWater.Commons.XmlHelper.Deserialize(System.String)">
            <summary>
            反序列化
            </summary>
            <param name="path"></param>
            <returns></returns>
        </member>
        <member name="M:WHC.OrderWater.Commons.XmlHelper.XmlDeserialize(System.String,System.Type)">
            <summary>
            反序列化
            </summary>
            <param name="path"></param>
            <returns></returns>
        </member>
        <member name="M:WHC.OrderWater.Commons.XmlHelper.Read(System.String,System.String)">
            <summary>
            读取节点内容
            </summary>
            <param name="XmlPathNode"></param>
            <param name="Attrib"></param>
            <returns></returns>
        </member>
        <member name="M:WHC.OrderWater.Commons.XmlHelper.GetData(System.String)">
            <summary>
            获取节点下的DataSet
            </summary>
            <param name="XmlPathNode"></param>
            <returns></returns>
        </member>
        <member name="M:WHC.OrderWater.Commons.XmlHelper.Replace(System.String,System.String)">
            <summary>
            替换某节点的内容
            </summary>
            <param name="XmlPathNode"></param>
            <param name="Content"></param>
        </member>
        <member name="M:WHC.OrderWater.Commons.XmlHelper.Delete(System.String)">
            <summary>
            删除节点
            </summary>
            <param name="Node"></param>
        </member>
        <member name="M:WHC.OrderWater.Commons.XmlHelper.InsertNode(System.String,System.String,System.String,System.String)">
            <summary>
            插入一节点和此节点的一子节点
            </summary>
            <param name="MainNode"></param>
            <param name="ChildNode"></param>
            <param name="Element"></param>
            <param name="Content"></param>
        </member>
        <member name="M:WHC.OrderWater.Commons.XmlHelper.InsertElement(System.String,System.String,System.String,System.String,System.String)">
            <summary>
            插入一个节点带一个属性 
            </summary>
            <param name="MainNode"></param>
            <param name="Element"></param>
            <param name="Attrib"></param>
            <param name="AttribContent"></param>
            <param name="Content"></param>
        </member>
        <member name="M:WHC.OrderWater.Commons.XmlHelper.InsertElement(System.String,System.String,System.String)">
            <summary>
            插入
            </summary>
            <param name="MainNode"></param>
            <param name="Element"></param>
            <param name="Content"></param>
        </member>
        <member name="M:WHC.OrderWater.Commons.XmlHelper.Save">
            <summary>
            保存XML
            </summary>
        </member>
        <member name="T:WHC.OrderWater.Commons.WebPreview">
            <summary>
            供Asp.Net直接调用的包装类
            作者：Kai.Ma http://kaima.cnblogs.com
            </summary>
        </member>
        <member name="M:WHC.OrderWater.Commons.WebPreview.StaRun(System.Object)">
            <summary>
            为WebBrowser所开线程的启动入口函数，相当于Winform里面的Main()
            </summary>
            <param name="_wp"></param>
        </member>
        <member name="T:WHC.OrderWater.Commons.WebPreviewBase">
            <summary>
            包装后的抓图基类。WebBrowser自带的BrawToBitmap不能抓到一些网站的图片，
            对于一些转向的网站会返回空白图片，所以采用原生的通过IViewObject接口
            取浏览器的图象，实现SNAP。感谢类库的作者“随飞”。
            原作者：随  飞 http://chinasf.cnblogs.com
            包装者：Kai.Ma http://kaima.cnblogs.com
            </summary>
        </member>
        <member name="M:WHC.OrderWater.Commons.WebPreviewBase.InitComobject">
            <summary>
            初始化
            </summary>
        </member>
        <member name="M:WHC.OrderWater.Commons.WebPreviewBase.GetWebPreview">
            <summary>
            获取Web预览图
            </summary>
            <returns>Bitmap</returns>
        </member>
        <member name="P:WHC.OrderWater.Commons.WebPreviewBase.Uri">
            <summary>
            URI 地址
            </summary>
        </member>
        <member name="P:WHC.OrderWater.Commons.WebPreviewBase.ThumbW">
            <summary>
            缩略图宽度
            </summary>
        </member>
        <member name="P:WHC.OrderWater.Commons.WebPreviewBase.ThumbH">
            <summary>
            缩略图高度
            </summary>
        </member>
        <member name="T:WHC.OrderWater.Commons.Snapshot">
            <summary>
            ActiveX 组件快照类
            AcitveX 必须实现 IViewObject 接口
            
            作者:随飞
            http://chinasf.cnblogs.com
            chinasf@hotmail.com
            </summary>
        </member>
        <member name="M:WHC.OrderWater.Commons.Snapshot.TakeSnapshot(System.Object,System.Drawing.Rectangle)">
            <summary>
            取快照
            </summary>
            <param name="pUnknown">Com 对象</param>
            <param name="bmpRect">图象大小</param>
            <returns></returns>
        </member>
        <member name="T:WHC.OrderWater.Commons.NativeMethodsTemp">
            <summary>
            从 .Net 2.0 的 System.Windows.Forms.Dll 库提取
            版权所有：微软公司
            </summary>
        </member>
        <member name="T:WHC.OrderWater.Commons.UnsafeNativeMethods">
            <summary>
            从 .Net 2.0 的 System.Windows.Forms.Dll 库提取
            版权所有：微软公司
            </summary>
        </member>
        <member name="M:WHC.OrderWater.Commons.UnsafeNativeMethods.GetKeyState(System.Int32)">
            <summary>
            retrieves the status of the specified virtual key
            </summary>
            <param name="KeyCode">Specifies a virtual key</param>
            <returns>
            The return value specifies the status of the specified virtual key, as follows: 
             If the high-order bit is 1, the key is down; otherwise, it is up.
             If the low-order bit is 1, the key is toggled. A key, such as the CAPS LOCK key, 
             is toggled if it is turned on. The key is off and untoggled if the low-order bit is 0.
             A toggle key's indicator light (if any) on the keyboard will be on when the key is
             toggled, and off when the key is untoggled.
            </returns>
        </member>
        <member name="M:WHC.OrderWater.Commons.Util.GetAcronym(System.String)">
            <summary>
            获取中文字首字拼写
            </summary>
            <param name="chinese"></param>
            <returns></returns>
        </member>
        <member name="M:WHC.OrderWater.Commons.Util.getSingle(System.String)">
            <summary>
            获取单个字首字母 (GB2312)
            </summary>
            <param name="cnChar"></param>
            <returns></returns>
        </member>
        <member name="M:WHC.OrderWater.Commons.Util.Join``1(System.Collections.Generic.IList{``0})">
            <summary>
            用 , 分割 合并数组
            </summary>
            <typeparam name="T"></typeparam>
            <param name="list"></param>
            <returns></returns>
        </member>
        <member name="M:WHC.OrderWater.Commons.Util.Join(System.Collections.Generic.IList{System.String})">
            <summary>
            用 , 分割 合并数组
            </summary>
            <param name="list"></param>
            <returns></returns>
        </member>
        <member name="M:WHC.OrderWater.Commons.Util.Join(System.Collections.Generic.IList{System.String},System.String)">
            <summary>
            用 , 分割 合并数组
            </summary>
            <param name="list"></param>
            <returns></returns>
        </member>
        <member name="M:WHC.OrderWater.Commons.Util.Join``1(System.Collections.Generic.IList{``0},System.String)">
            <summary>
            合并数组 分割符
            </summary>
            <typeparam name="T"></typeparam>
            <param name="list">数组列</param>
            <param name="c">分隔符</param>
            <returns></returns>
        </member>
        <member name="M:WHC.OrderWater.Commons.Util.RandomAction(System.Int32)">
            <summary>
            随机发生器，按指定概率随机执行操作
            </summary>
            <param name="rate"></param>
            <returns></returns>
        </member>
        <member name="P:WHC.OrderWater.Commons.Util.WinFormName">
            <summary>
            获取当前Windows Form应用程序的名字,不包括.exe
            </summary>
        </member>
        <member name="M:WHC.OrderWater.Commons.ImageHelper.CompareTwoImages(System.Drawing.Bitmap,System.Drawing.Bitmap)">
            <summary>
            对比两张图片
            </summary>
            <param name="bmp1">The first bitmap image</param>
            <param name="bmp2">The second bitmap image</param>
            <returns>CompareResult</returns>
        </member>
        <member name="M:WHC.OrderWater.Commons.ImageHelper.ResizeImageByPercent(System.Drawing.Image,System.Int32)">
            <summary>
            Resizes the image by a percentage
            </summary>
            <param name="imgPhoto">The img photo.</param>
            <param name="Percent">The percentage</param>
            <returns></returns>
        </member>
        <member name="M:WHC.OrderWater.Commons.ImageHelper.ResizeImageToAFixedSize(System.Drawing.Image,System.Int32,System.Int32,WHC.OrderWater.Commons.ImageHelper.ScaleMode)">
            <summary>
            缩放、裁切图片
            </summary>
            <param name="originalImage"></param>
            <param name="width"></param>
            <param name="height"></param>
            <param name="mode"></param>
            <returns></returns>
        </member>
        <member name="M:WHC.OrderWater.Commons.ImageHelper.MakeThumbnail(System.String,System.String,System.Int32,System.Int32,WHC.OrderWater.Commons.ImageHelper.ScaleMode)">
            <summary>
            生成缩略图
            </summary>
            <param name="originalImagePath">源图路径（物理路径）</param>
            <param name="thumbnailPath">缩略图路径（物理路径）</param>
            <param name="width">缩略图宽度</param>
            <param name="height">缩略图高度</param>
            <param name="mode">生成缩略图的方式</param>
        </member>
        <member name="M:WHC.OrderWater.Commons.ImageHelper.MakeThumbnail(System.String,System.String,System.Int32,System.Int32,WHC.OrderWater.Commons.ImageHelper.ScaleMode,System.Drawing.Imaging.ImageFormat)">
            <summary>
            生成缩略图
            </summary>
            <param name="originalImagePath">源图路径（物理路径）</param>
            <param name="thumbnailPath">缩略图路径（物理路径）</param>
            <param name="width">缩略图宽度</param>
            <param name="height">缩略图高度</param>
            <param name="mode">生成缩略图的方式</param>
        </member>
        <member name="F:WHC.OrderWater.Commons.ImageHelper.sizes">
            <summary>
            字体
            </summary>
        </member>
        <member name="M:WHC.OrderWater.Commons.ImageHelper.WatermarkText(System.Drawing.Image,System.String)">
            <summary>
            添加文字水印   默认字体：Verdana  12号大小  斜体  黑色    位置:右下角
            </summary>
            <param name="originalImage">Image</param>
            <param name="text">水印字</param>
            <returns></returns>
        </member>
        <member name="M:WHC.OrderWater.Commons.ImageHelper.WatermarkText(System.Drawing.Image,System.String,WHC.OrderWater.Commons.ImageHelper.WatermarkPosition)">
            <summary>
            添加文字水印   默认字体：Verdana  12号大小  斜体  黑色
            </summary>
            <param name="originalImage">Image</param>
            <param name="text">水印字</param>
            <param name="position">水印位置</param>
            <returns></returns>
        </member>
        <member name="M:WHC.OrderWater.Commons.ImageHelper.WatermarkText(System.Drawing.Image,System.String,WHC.OrderWater.Commons.ImageHelper.WatermarkPosition,System.Drawing.Font,System.Drawing.Brush)">
            <summary>
            添加文字水印
            </summary>
            <param name="originalImage">Image</param>
            <param name="text">水印字</param>
            <param name="position">水印位置</param>
            <param name="font">字体</param>
            <param name="brush">颜色</param>
            <returns></returns>
        </member>
        <member name="M:WHC.OrderWater.Commons.ImageHelper.WatermarkImage(System.Drawing.Image,System.Drawing.Image)">
            <summary>
            添加图片水印     位置默认右下角
            </summary>
            <param name="originalImage">Image</param>
            <param name="watermarkImage">水印Image</param>
            <returns></returns>
        </member>
        <member name="M:WHC.OrderWater.Commons.ImageHelper.WatermarkImage(System.Drawing.Image,System.Drawing.Image,WHC.OrderWater.Commons.ImageHelper.WatermarkPosition)">
            <summary>
            添加图片水印
            </summary>
            <param name="originalImage">Image</param>
            <param name="watermarkImage">水印Image</param>
            <param name="position">位置</param>
            <returns></returns>
        </member>
        <member name="M:WHC.OrderWater.Commons.ImageHelper.CopyToClipboard(System.Drawing.Image)">
            <summary>
            copies the specified image bitmap data to the clipboard
            </summary>
            <param name="img">the image to be copied to the clipboard</param>
        </member>
        <member name="M:WHC.OrderWater.Commons.ImageHelper.GetCodecInfo(System.String)">
            <summary>
            保存JPG时用
            </summary>
            <param name="mimeType"> </param>
            <returns>得到指定mimeType的ImageCodecInfo </returns>
        </member>
        <member name="M:WHC.OrderWater.Commons.ImageHelper.SetImgOpacity(System.Drawing.Image,System.Single)">
            <summary>
            设置图片透明度
            </summary>
            <param name="imgPic"></param>
            <param name="imgOpac"></param>
            <returns></returns>
        </member>
        <member name="M:WHC.OrderWater.Commons.ImageHelper.ChangeBrightness(System.Drawing.Bitmap,System.Int32)">
            <summary>
            修改图片亮度
            </summary>
            <param name="bmp"></param>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="M:WHC.OrderWater.Commons.ImageHelper.ChangeImageSize(System.Drawing.Image,System.Int32,System.Int32)">
            <summary>
            改变图片大小
            </summary>
            <param name="img"></param>
            <param name="width"></param>
            <param name="height"></param>
            <returns></returns>
        </member>
        <member name="M:WHC.OrderWater.Commons.ImageHelper.CropImage(System.Drawing.Image,System.Drawing.Rectangle)">
            <summary>
            剪切图片
            </summary>
            <param name="img"></param>
            <param name="rect"></param>
            <returns></returns>
        </member>
        <member name="M:WHC.OrderWater.Commons.ImageHelper.CropImage(System.Drawing.Bitmap,System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            剪裁 -- 用GDI+
            </summary>
            <param name="b">原始Bitmap</param>
            <param name="StartX">开始坐标X</param>
            <param name="StartY">开始坐标Y</param>
            <param name="iWidth">宽度</param>
            <param name="iHeight">高度</param>
            <returns>剪裁后的Bitmap</returns>
        </member>
        <member name="M:WHC.OrderWater.Commons.ImageHelper.RotateImage(System.Drawing.Image,System.Single)">
            <summary>
            旋转图片
            </summary>
            <param name="img"></param>
            <param name="theta"></param>
            <returns></returns>
        </member>
        <member name="M:WHC.OrderWater.Commons.ImageHelper.GetScreenBounds">
            <summary>
            获取所有屏幕的矩形宽度
            </summary>
            <returns></returns>
        </member>
        <member name="M:WHC.OrderWater.Commons.ImageHelper.SetImageColorBrim(System.Drawing.Image,System.Drawing.Color,System.Drawing.Color,System.Int32)">
            <summary>  
            设置图形颜色  边缘的色彩更换成新的颜色  
            </summary>  
            <param name="p_Image">图片</param>  
            <param name="p_OldColor">老的边缘色彩</param>  
            <param name="p_NewColor">新的边缘色彩</param>  
            <param name="p_Float">溶差</param>  
            <returns>清理后的图形</returns>  
        </member>
        <member name="M:WHC.OrderWater.Commons.ImageHelper.SetImageColorAll(System.Drawing.Image,System.Drawing.Color,System.Drawing.Color,System.Int32)">
            <summary>  
            设置图形颜色  所有的色彩更换成新的颜色  
            </summary>  
            <param name="p_Image">图片</param>  
            <param name="p_OdlColor">老的颜色</param>  
            <param name="p_NewColor">新的颜色</param>  
            <param name="p_Float">溶差</param>  
            <returns>清理后的图形</returns>  
        </member>
        <member name="M:WHC.OrderWater.Commons.ImageHelper.SetImageColorPoint(System.Drawing.Image,System.Drawing.Point,System.Drawing.Color,System.Int32)">
            <summary>  
            设置图形颜色  坐标的颜色更换成新的色彩 （漏斗）  
            </summary>  
            <param name="p_Image">新图形</param>  
            <param name="p_Point">位置</param>  
            <param name="p_NewColor">新的色彩</param>  
            <param name="p_Float">溶差</param>  
            <returns>清理后的图形</returns>  
        </member>
        <member name="M:WHC.OrderWater.Commons.ImageHelper.SetImageColorPoint(System.Byte[],System.Int32,System.Collections.Generic.Stack{System.Drawing.Point},System.Int32,System.Int32,System.Drawing.Color,System.Drawing.Color,System.Int32)">
            <summary>  
            SetImageColorPoint 循环调用 检查新的坐标是否符合条件 符合条件会写入栈p_ColorStack 并更改颜色  
            </summary>  
            <param name="p_DataBytes">数据区</param>  
            <param name="p_Stride">行扫描字节数</param>  
            <param name="p_ColorStack">需要检查的位置栈</param>  
            <param name="p_X">位置X</param>  
            <param name="p_Y">位置Y</param>  
            <param name="p_OldColor">老色彩</param>  
            <param name="p_NewColor">新色彩</param>  
            <param name="p_Float">溶差</param>  
        </member>
        <member name="M:WHC.OrderWater.Commons.ImageHelper.ScanColor(System.Drawing.Color,System.Drawing.Color,System.Int32)">
            <summary>  
            检查色彩(可以根据这个更改比较方式  
            </summary>  
            <param name="p_CurrentlyColor">当前色彩</param>  
            <param name="p_CompareColor">比较色彩</param>  
            <param name="p_Float">溶差</param>  
            <returns></returns>  
        </member>
        <!-- 对于成员“M:WHC.OrderWater.Commons.ImageHelper.CompressAsJPG(System.Drawing.Bitmap,System.String,System.Int32)”忽略有格式错误的 XML 注释 -->
        <member name="M:WHC.OrderWater.Commons.ImageHelper.CompressAsJPG(System.IO.Stream,System.String,System.Int32)">
            <summary>
            将inputStream中的对象压缩为JPG图片类型
            </summary>
            <param name="inputStream">源Stream对象</param>
            <param name="saveFilePath">目标图片的存储地址</param>
            <param name="quality">压缩质量，越大照片越清晰，推荐80</param>
        </member>
        <member name="M:WHC.OrderWater.Commons.ImageHelper.ImageToBytes(System.Drawing.Image)">
            <summary>
            Converts the specified <see cref="T:System.Drawing.Image"/> into an array of bytes
            </summary>
            <param name="image"><see cref="T:System.Drawing.Image"/></param>
            <returns>Array of bytes</returns>
        </member>
        <member name="M:WHC.OrderWater.Commons.ImageHelper.ImageFromBytes(System.Byte[])">
            <summary>
            Converts an array of bytes into an <see cref="T:System.Drawing.Image"/>
            </summary>
            <param name="bytes">The array of bytes</param>
            <returns>The resulting <see cref="T:System.Drawing.Image"/></returns>
        </member>
        <member name="M:WHC.OrderWater.Commons.ImageHelper.ImageFromUrl(System.String)">
            <summary>
            Converts a url (filesystem or web) into an <see cref="T:System.Drawing.Image"/>
            </summary>
            <param name="url">The url path to the image</param>
            <returns>The resulting <see cref="T:System.Drawing.Image"/></returns>
        </member>
        <member name="T:WHC.OrderWater.Commons.ImageHelper.CompareResult">
            <summary>
            两张图片的对比结果
            </summary>
        </member>
        <member name="F:WHC.OrderWater.Commons.ImageHelper.CompareResult.CompareOk">
            <summary>
            图片一样
            </summary>
        </member>
        <member name="F:WHC.OrderWater.Commons.ImageHelper.CompareResult.PixelMismatch">
            <summary>
            像素不一样
            </summary>
        </member>
        <member name="F:WHC.OrderWater.Commons.ImageHelper.CompareResult.SizeMismatch">
            <summary>
            图片大小尺寸不一样
            </summary>
        </member>
        <member name="F:WHC.OrderWater.Commons.ImageHelper.ScaleMode.HW">
            <summary>
            指定高宽缩放（可能变形）
            </summary>
        </member>
        <member name="F:WHC.OrderWater.Commons.ImageHelper.ScaleMode.W">
            <summary>
            指定宽，高按比例
            </summary>
        </member>
        <member name="F:WHC.OrderWater.Commons.ImageHelper.ScaleMode.H">
            <summary>
            指定高，宽按比例
            </summary>
        </member>
        <member name="F:WHC.OrderWater.Commons.ImageHelper.ScaleMode.Cut">
            <summary>
            指定高宽裁减（不变形）
            </summary>
        </member>
        <member name="T:WHC.OrderWater.Commons.ImageHelper.WatermarkPosition">
            <summary>
            水印位置
            </summary>
        </member>
        <member name="F:WHC.OrderWater.Commons.ImageHelper.WatermarkPosition.TopLeft">
            <summary>
            左上角
            </summary>
        </member>
        <member name="F:WHC.OrderWater.Commons.ImageHelper.WatermarkPosition.TopRight">
            <summary>
            右上角
            </summary>
        </member>
        <member name="F:WHC.OrderWater.Commons.ImageHelper.WatermarkPosition.BottomLeft">
            <summary>
            左下角
            </summary>
        </member>
        <member name="F:WHC.OrderWater.Commons.ImageHelper.WatermarkPosition.BottomRight">
            <summary>
            右下角
            </summary>
        </member>
        <member name="F:WHC.OrderWater.Commons.ImageHelper.WatermarkPosition.Center">
            <summary>
            中心
            </summary>
        </member>
        <member name="T:WHC.OrderWater.Commons.DatabaseInfo">
            <summary>
            DatabaseInfo 的摘要说明。
            </summary>
        </member>
        <member name="M:WHC.OrderWater.Commons.DatabaseInfo.#ctor(System.String)">
            <summary>
            可以接受三种格式的数据库连接字符串
            1. 服务名称=(local);数据库名称=EDNSM;用户名称=sa;用户密码=123456
            2. Data Source=(local);Initial Catalog=EDNSM;User ID=sa;Password=123456
            3. server=(local);uid=sa;pwd=;
            </summary>
            <param name="connectionString"></param>
        </member>
        <member name="M:WHC.OrderWater.Commons.DatabaseInfo.GetSubItemValue(System.String,System.String)">
            <summary>
            获取给定字符串中的子节点的值, 如果不存在返回Null
            </summary>
            <param name="itemValueString">多个值的字符串</param>
            <param name="subKeyName"></param>
            <returns></returns>
        </member>
        <member name="P:WHC.OrderWater.Commons.DatabaseInfo.EncryptConnectionString">
            <summary>
            加密后的连接字符串
            </summary>
        </member>
        <member name="P:WHC.OrderWater.Commons.DatabaseInfo.ConnectionString">
            <summary>
            没有加密的字符串
            </summary>
        </member>
        <member name="P:WHC.OrderWater.Commons.DatabaseInfo.OleDbConnectionString">
            <summary>
            提供OLEDB数据源的链接字符串
            </summary>
        </member>
        <member name="T:WHC.OrderWater.Commons.CSVHelper">
            <summary>
            CSV文件和DataTable对象转换辅助类
            </summary>
        </member>
        <member name="M:WHC.OrderWater.Commons.CSVHelper.CSVToDataTableByOledb(System.String)">
            <summary>
            CSV转换成DataTable（OleDb数据库访问方式）
            </summary>
            <param name="csvPath">csv文件路径</param>
            <returns></returns>
        </member>
        <member name="M:WHC.OrderWater.Commons.CSVHelper.CSVToDataTableByStreamReader(System.String)">
            <summary>
            CSV转换成DataTable（文件流方式）
            </summary>
            <param name="csvPath">csv文件路径</param>
            <returns></returns>
        </member>
        <member name="M:WHC.OrderWater.Commons.CSVHelper.DataTableToCSV(System.Data.DataTable,System.String)">
            <summary>
            DataTable 生成 CSV
            </summary>
            <param name="dt">DataTable</param>
            <param name="csvPath">csv文件路径</param>
        </member>
        <member name="T:WHC.OrderWater.Commons.BytesTools">
            <summary>
            BytesTools 的摘要说明。
            </summary>
        </member>
        <member name="M:WHC.OrderWater.Commons.BytesTools.ToSBC(System.Byte[])">
            <summary>
            半角转全角函数
            </summary>
            <param name="srcbuff"></param>
            <returns></returns>
        </member>
        <member name="M:WHC.OrderWater.Commons.BytesTools.SubBuffer(System.Byte[],System.Int32,System.Int32)">
            <summary>
            从 byte[] 中截取子串
            </summary>
            <param name="srcbuff"></param>
            <param name="start"></param>
            <param name="len"></param>
            <returns></returns>
        </member>
        <member name="M:WHC.OrderWater.Commons.BytesTools.SwapBytes(System.Byte[])">
            <summary>
            将 byte[] 顺序反转
            </summary>
            <param name="bytes"></param>
            <returns></returns>
        </member>
        <member name="M:WHC.OrderWater.Commons.BytesTools.GetSwapBytes(System.UInt16)">
            <summary>
            获取 ushort 的高低位反转 byte[]
            </summary>
            <param name="u"></param>
            <returns></returns>
        </member>
        <member name="M:WHC.OrderWater.Commons.BytesTools.GetSwapBytes(System.Int32)">
            <summary>
            获取 int 的高低位反转 byte[]
            </summary>
            <param name="i"></param>
            <returns></returns>
        </member>
        <member name="M:WHC.OrderWater.Commons.BytesTools.SpecCharConvert(System.Byte[])">
            <summary>
            转义特殊字符，即 '~'(0x7E)
            </summary>
            <param name="srcbuff"></param>
            <returns></returns>
        </member>
        <member name="M:WHC.OrderWater.Commons.BytesTools.SpecCharReverse(System.Byte[])">
            <summary>
            反转义特殊字符，即 '~'(0x7E)
            0x7D0x5E->0x7E, 0x7D0x5D->0x7D
            </summary>
            <param name="srcbuff"></param>
            <returns></returns>
        </member>
        <member name="M:WHC.OrderWater.Commons.BytesTools.BufferLookup(System.Byte[],System.Byte[])">
            <summary>
            在 srcbuff 中查找 subbuff 第一次出现的位置
            </summary>
            <param name="srcbuff"></param>
            <param name="subbuff"></param>
            <returns>找到则返回匹配开始的位置，没有找到返回 -1</returns>
        </member>
        <member name="M:WHC.OrderWater.Commons.BytesTools.BufferLookup(System.Byte[],System.Byte[],System.Int32)">
            <summary>
            在 srcbuff 中查找 subbuff 第一次出现的位置
            </summary>
            <param name="srcbuff"></param>
            <param name="subbuff"></param>
            <param name="start">开始查找的位置</param>
            <returns>找到则返回匹配开始的位置，没有找到返回 -1</returns>
        </member>
        <member name="M:WHC.OrderWater.Commons.BytesTools.BufferLookup(System.Byte[],System.String)">
            <summary>
            在 srcbuff 中查找 subchars 第一次出现的位置
            </summary>
            <param name="srcbuff"></param>
            <param name="subchars">ASCII字符串</param>
            <returns>找到则返回匹配开始的位置，没有找到返回 -1</returns>
        </member>
        <member name="M:WHC.OrderWater.Commons.BytesTools.BufferLookup(System.Byte[],System.String,System.Int32)">
            <summary>
            在 srcbuff 中查找 subchars 第一次出现的位置
            </summary>
            <param name="srcbuff"></param>
            <param name="subchars">ASCII字符串</param>
            <param name="start">开始查找的位置</param>
            <returns>找到则返回匹配开始的位置，没有找到返回 -1</returns>
        </member>
        <member name="M:WHC.OrderWater.Commons.BytesTools.BytesToHex(System.Byte[])">
            <summary>
            将二进制的数据转成Hex格式
            </summary>
            <param name="bytes"></param>
            <returns></returns>
        </member>
        <member name="M:WHC.OrderWater.Commons.BytesTools.ToDBDate(System.DateTime)">
            <summary>
            将日期时间格式的字符串转换到数据库使用的日期类型
            </summary>
            <param name="dateTime"></param>
            <returns></returns>
        </member>
        <member name="M:WHC.OrderWater.Commons.BytesTools.GetSwappedUshort(System.Byte[],System.Int32)">
            <summary>
            将倒序的ushort字节还原为ushort
            </summary>
            <param name="buffer"></param>
            <param name="start"></param>
            <returns></returns>
        </member>
        <member name="M:WHC.OrderWater.Commons.BytesTools.GetSwappedUint(System.Byte[],System.Int32)">
            <summary>
            将倒序的uint字节还原为uint
            </summary>
            <param name="buffer"></param>
            <param name="start"></param>
            <returns></returns>
        </member>
        <member name="M:WHC.OrderWater.Commons.BytesTools.Revert7BDateTime(System.Byte[])">
            <summary>
            转换时间格式
            原始数据：FFFF-FF-FF FF:FF:FF 每个F对应YYYY-MM-DD hh:mm:ss中的一个数字
                         共7个字节。比如 0x20 0x08 0x09 0x20 0x23 0x12 0x34 表示 2008-09-20 23:12:34
            </summary>
            <param name="timeBuff"></param>
            <returns></returns>
        </member>
        <member name="M:WHC.OrderWater.Commons.BytesTools.HexToBytes(System.String)">
            <summary>
            Hex进制转二进制
            </summary>
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:WHC.OrderWater.Commons.BytesTools.Compare(System.Byte[],System.Byte[])">
            <summary>
            Determine if two byte arrays are equal.
            </summary>
            <param name="byte1">The first byte array to compare.</param>
            <param name="byte2">The byte array to compare to the first.</param>
            <returns><see langword="true"/> if the two byte arrays are equal; otherwise <see langword="false"/>.</returns>
        </member>
        <member name="M:WHC.OrderWater.Commons.BytesTools.Combine(System.Byte[],System.Byte[])">
            <summary>
            Combines two byte arrays into one.
            </summary>
            <param name="byte1">The prefixed bytes.</param>
            <param name="byte2">The suffixed bytes.</param>
            <returns>The combined byte arrays.</returns>
        </member>
        <member name="M:WHC.OrderWater.Commons.BytesTools.Clone(System.Byte[])">
            <summary>
            Copys a byte arrays into new one.
            </summary>
            <param name="byte1">The byte arrays to which new array is created.</param>
            <returns>The cloned byte arrays.</returns>
        </member>
        <member name="M:WHC.OrderWater.Commons.BytesTools.GetBytesFromHexString(System.String)">
            <summary>
            <para>Returns a byte array from a string representing a hexidecimal number.</para>
            </summary>
            <param name="hexadecimalNumber">
            <para>The string containing a valid hexidecimal number.</para>
            </param>
            <returns><para>The byte array representing the hexidecimal.</para></returns>
        </member>
        <member name="M:WHC.OrderWater.Commons.BytesTools.GetHexStringFromBytes(System.Byte[])">
            <summary>
            <para>Returns a string from a byte array represented as a hexidecimal number (eg: 0F351A).</para>
            </summary>
            <param name="bytes">
            <para>The byte array to convert to forat as a hexidecimal number.</para>
            </param>
            <returns>
            <para>The formatted representation of the bytes as a hexidecimal number.</para>
            </returns>
        </member>
        <member name="T:WHC.OrderWater.Commons.JetAccessUtil">
            <summary>
            Access数据库文件操作辅助类
            </summary>
        </member>
        <member name="M:WHC.OrderWater.Commons.JetAccessUtil.CreateMDB(System.String,System.String)">
            <summary>
            新建带密码的空Access 2000 数据库
            </summary>
            <param name="mdbFilePath">数据库文件路径</param>
            <param name="password">数据库密码</param>
            <returns>字符0为操作成功，否则为失败异常消息。</returns>
        </member>
        <member name="M:WHC.OrderWater.Commons.JetAccessUtil.CreateMDB(System.String)">
            <summary>
            新建空的Access数据库
            </summary>
            <param name="mdbFilePath">数据库文件路径</param>
            <returns>字符0为操作成功，否则为失败异常消息。</returns>
        </member>
        <member name="M:WHC.OrderWater.Commons.JetAccessUtil.CompactMDB(System.String,System.String)">
            <summary>
            压缩带密码Access数据库
            </summary>
            <param name="mdbFilePath">数据库文件路径</param>
            <param name="password">数据库密码</param>
            <returns>字符0为操作成功，否则为失败异常消息。</returns>
        </member>
        <member name="M:WHC.OrderWater.Commons.JetAccessUtil.CompactMDB(System.String)">
            <summary>
            压缩没有带密码Access数据库
            </summary>
            <param name="mdbFilePath">数据库文件路径</param>
            <returns>字符0为操作成功，否则为失败异常消息。</returns>
        </member>
        <member name="M:WHC.OrderWater.Commons.JetAccessUtil.SetMDBPassword(System.String,System.String,System.String)">
            <summary>
            设置Access数据库的访问密码
            </summary>
            <param name="mdbFilePath">数据库文件路径</param>
            <param name="oldPwd">旧密码</param>
            <param name="newPwd">新密码</param>
            <returns>字符0为操作成功，否则为失败异常消息。</returns>
        </member>
        <member name="M:WHC.OrderWater.Commons.JetAccessUtil.ListTables(System.String,System.String)">
            <summary>
            列出Access 2000 数据库的表名称
            </summary>
            <param name="mdbFilePath">数据库文件路径</param>
            <param name="password">数据库密码</param>
            <returns></returns>
        </member>
        <member name="M:WHC.OrderWater.Commons.JetAccessUtil.ListColumns(System.String,System.String,System.String)">
            <summary>
            列出Access2000数据库的表字段
            </summary>
            <param name="mdbFilePath">数据库文件路径</param>
            <param name="password">数据库密码</param>
            <param name="tableName">表名称</param>
            <returns>返回字段名称和对应类型的字典数据</returns>
        </member>
        <member name="M:WHC.OrderWater.Commons.SortHelper.BubbleSort(System.Int32[])">
            <summary>
            冒泡排序法1
            </summary>
            <param name="list"></param>
        </member>
        <member name="M:WHC.OrderWater.Commons.SortHelper.InsertionSort(System.Int32[])">
            <summary>
            插入排序法
            </summary>
            <param name="list"></param>
        </member>
        <member name="M:WHC.OrderWater.Commons.SortHelper.SelectionSort(System.Int32[])">
            <summary>
            选择排序法
            </summary>
            <param name="list"></param>
        </member>
        <member name="M:WHC.OrderWater.Commons.SortHelper.ShellSort(System.Int32[])">
            <summary>
            希尔排序法
            </summary>
            <param name="list"></param>
        </member>
        <member name="M:WHC.OrderWater.Commons.SortHelper.QuickSort(System.Int32[],System.Int32,System.Int32)">
            <summary>
            快速排序法
            </summary>
            <param name="list"></param>
            <param name="low"></param>
            <param name="high"></param>
        </member>
        <member name="T:WHC.OrderWater.Commons.UnCodebase">
            <summary>
            用于验证码图片识别的类
            GrayByPixels(); //灰度处理
            GetPicValidByValue(128, 4); //得到有效空间
            Bitmap[] pics = GetSplitPics(4, 1);     //分割
            string code = GetSingleBmpCode(pics[i], 128);   //得到代码串
            </summary>
        </member>
        <member name="M:WHC.OrderWater.Commons.UnCodebase.GetGrayNumColor(System.Drawing.Color)">
            <summary>
            根据RGB，计算灰度值
            </summary>
            <param name="posClr">Color值</param>
            <returns>灰度值，整型</returns>
        </member>
        <member name="M:WHC.OrderWater.Commons.UnCodebase.GrayByPixels">
            <summary>
            灰度转换,逐点方式
            </summary>
        </member>
        <member name="M:WHC.OrderWater.Commons.UnCodebase.ClearPicBorder(System.Int32)">
            <summary>
            去图形边框
            </summary>
            <param name="borderWidth"></param>
        </member>
        <member name="M:WHC.OrderWater.Commons.UnCodebase.GrayByLine">
            <summary>
            灰度转换,逐行方式
            </summary>
        </member>
        <member name="M:WHC.OrderWater.Commons.UnCodebase.GetPicValidByValue(System.Int32,System.Int32)">
            <summary>
            得到有效图形并调整为可平均分割的大小
            </summary>
            <param name="dgGrayValue">灰度背景分界值</param>
            <param name="CharsCount">有效字符数</param>
            <returns></returns>
        </member>
        <member name="M:WHC.OrderWater.Commons.UnCodebase.GetPicValidByValue(System.Int32)">
            <summary>
            得到有效图形,图形为类变量
            </summary>
            <param name="dgGrayValue">灰度背景分界值</param>
            <param name="CharsCount">有效字符数</param>
            <returns></returns>
        </member>
        <member name="M:WHC.OrderWater.Commons.UnCodebase.GetPicValidByValue(System.Drawing.Bitmap,System.Int32)">
            <summary>
            得到有效图形,图形由外面传入
            </summary>
            <param name="dgGrayValue">灰度背景分界值</param>
            <param name="CharsCount">有效字符数</param>
            <returns></returns>
        </member>
        <member name="M:WHC.OrderWater.Commons.UnCodebase.GetSplitPics(System.Int32,System.Int32)">
            <summary>
            平均分割图片
            </summary>
            <param name="RowNum">水平上分割数</param>
            <param name="ColNum">垂直上分割数</param>
            <returns>分割好的图片数组</returns>
        </member>
        <member name="M:WHC.OrderWater.Commons.UnCodebase.GetSingleBmpCode(System.Drawing.Bitmap,System.Int32)">
            <summary>
            返回灰度图片的点阵描述字串，1表示灰点，0表示背景
            </summary>
            <param name="singlepic">灰度图</param>
            <param name="dgGrayValue">背前景灰色界限</param>
            <returns></returns>
        </member>
        <member name="P:WHC.OrderWater.Commons.SortableListView.ImageAscending">
            <summary>
            升序排序的图标
            </summary> 
        </member>
        <member name="P:WHC.OrderWater.Commons.SortableListView.ImageDescending">
            <summary>
            降序排序的图标
            </summary>
        </member>
        <member name="M:WHC.OrderWater.Commons.IDCardHelper.InitIdType(System.Windows.Forms.ComboBox)">
            <summary>
            绑定身份证类别的名称
            </summary>
            <param name="cb">The cb.</param>
        </member>
        <member name="M:WHC.OrderWater.Commons.IDCardHelper.CreateIDType">
            <summary>
            获取身份证类别的名称
            </summary>
            <returns></returns>
        </member>
        <member name="M:WHC.OrderWater.Commons.IDCardHelper.Validate(System.String)">
            <summary>
            验证身份证结果
            </summary>
            <param name="idcard">身份证号码</param>
            <returns>正确的时候返回string.Empty</returns>
        </member>
        <member name="M:WHC.OrderWater.Commons.IDCardHelper.IdCard15To18(System.String)">
            <summary>
            15位身份证明号码转化成18位用来编码
            </summary>
            <param name="idcard">15位的身份证号码</param>
            <returns></returns>
        </member>
        <member name="M:WHC.OrderWater.Commons.IDCardHelper.GetProvince(System.String)">
            <summary>
            获取身份证对应省份的区划
            </summary>
            <param name="id">身份证</param>
            <returns>头两位+4个0</returns>
        </member>
        <member name="M:WHC.OrderWater.Commons.IDCardHelper.GetCity(System.String)">
            <summary>
            获取身份证对应县市的区划
            </summary>
            <param name="id">身份证</param>
            <returns>头4位+2个0</returns>
        </member>
        <member name="M:WHC.OrderWater.Commons.IDCardHelper.GetArea(System.String)">
            <summary>
            获取身份证对应地区的区划
            </summary>
            <param name="id">身份证</param>
            <returns>头6位</returns>
        </member>
        <member name="M:WHC.OrderWater.Commons.IDCardHelper.GetSexName(System.String)">
            <summary>
            根据身份证判断是否男女
            </summary>
            <param name="id">身份证号码</param>
            <returns>返回"男"或者"女"</returns>
        </member>
        <member name="M:WHC.OrderWater.Commons.IDCardHelper.GetBirthday(System.String)">
            <summary>
            根据身份证获取出生年月
            </summary>
            <param name="id">身份证号码</param>
            <returns>出生年月</returns>
        </member>
        <member name="M:WHC.OrderWater.Commons.MD5Util.GetMD5_32(System.String)">
            <summary>
            获得32位的MD5加密
            </summary>
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:WHC.OrderWater.Commons.MD5Util.GetMD5_16(System.String)">
            <summary>
            获得16位的MD5加密
            </summary>
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:WHC.OrderWater.Commons.MD5Util.GetMD5_8(System.String)">
            <summary>
            获得8位的MD5加密
            </summary>
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:WHC.OrderWater.Commons.MD5Util.GetMD5_4(System.String)">
            <summary>
            获得4位的MD5加密
            </summary>
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:WHC.OrderWater.Commons.MD5Util.AddMD5Profix(System.String)">
            <summary>
            添加MD5的前缀，便于检查有无篡改
            </summary>
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:WHC.OrderWater.Commons.MD5Util.RemoveMD5Profix(System.String)">
            <summary>
            移除MD5的前缀
            </summary>
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:WHC.OrderWater.Commons.MD5Util.ValidateValue(System.String)">
            <summary>
            验证MD5前缀处理的字符串有无被篡改
            </summary>
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:WHC.OrderWater.Commons.MD5Util.AddMD5(System.String)">
            <summary>
            对给定文件路径的文件加上标签
            </summary>
            <param name="path">要加密的文件的路径</param>
            <returns>标签的值</returns>
        </member>
        <member name="M:WHC.OrderWater.Commons.MD5Util.CheckMD5(System.String)">
            <summary>
            对给定路径的文件进行验证
            </summary>
            <param name="path"></param>
            <returns>是否加了标签或是否标签值与内容值一致</returns>
        </member>
        <member name="M:WHC.OrderWater.Commons.MD5Util.MD5Buffer(System.Byte[],System.Int32,System.Int32)">
            <summary>
            计算文件的MD5值
            </summary>
            <param name="MD5File">MD5签名文件字符数组</param>
            <param name="index">计算起始位置</param>
            <param name="count">计算终止位置</param>
            <returns>计算结果</returns>
        </member>
        <member name="T:WHC.OrderWater.Commons.CRegex">
            <summary>
            正则表达式辅助类
            </summary>
        </member>
        <member name="M:WHC.OrderWater.Commons.CRegex.IsMatch(System.String,System.String)">
            <summary>
            内容是否匹配指定的表达式
            </summary>
            <param name="sInput">输入内容</param>
            <param name="sRegex">表达式字符串</param>
            <returns></returns>
        </member>
        <member name="M:WHC.OrderWater.Commons.CRegex.GetList(System.String,System.String,System.Int32)">
            <summary>
            多个匹配内容
            </summary>
            <param name="sInput">输入内容</param>
            <param name="sRegex">表达式字符串</param>
            <param name="iGroupIndex">第几个分组, 从1开始, 0代表不分组</param>
        </member>
        <member name="M:WHC.OrderWater.Commons.CRegex.GetList(System.String,System.String,System.String)">
            <summary>
            多个匹配内容
            </summary>
            <param name="sInput">输入内容</param>
            <param name="sRegex">表达式字符串</param>
            <param name="sGroupName">分组名, ""代表不分组</param>
        </member>
        <member name="M:WHC.OrderWater.Commons.CRegex.GetText(System.String,System.String,System.Int32)">
            <summary>
            单个匹配内容
            </summary>
            <param name="sInput">输入内容</param>
            <param name="sRegex">表达式字符串</param>
            <param name="iGroupIndex">分组序号, 从1开始, 0不分组</param>
        </member>
        <member name="M:WHC.OrderWater.Commons.CRegex.GetText(System.String,System.String,System.String)">
            <summary>
            单个匹配内容
            </summary>
            <param name="sInput">输入内容</param>
            <param name="sRegex">表达式字符串</param>
            <param name="sGroupName">分组名, ""代表不分组</param>
        </member>
        <member name="M:WHC.OrderWater.Commons.CRegex.Replace(System.String,System.String,System.String,System.Int32)">
            <summary>
            替换指定内容
            </summary>
            <param name="sInput">输入内容</param>
            <param name="sRegex">表达式字符串</param>
            <param name="sReplace">替换值</param>
            <param name="iGroupIndex">分组序号, 0代表不分组</param>
        </member>
        <member name="M:WHC.OrderWater.Commons.CRegex.Replace(System.String,System.String,System.String,System.String)">
            <summary>
            替换指定内容
            </summary>
            <param name="sInput">输入内容</param>
            <param name="sRegex">表达式字符串</param>
            <param name="sReplace">替换值</param>
            <param name="sGroupName">分组名, "" 代表不分组</param>
        </member>
        <member name="M:WHC.OrderWater.Commons.CRegex.Split(System.String,System.String,System.Int32)">
            <summary>
            分割指定内容
            </summary>
            <param name="sInput">输入内容</param>
            <param name="sRegex">表达式字符串</param>
            <param name="iStrLen">最小保留字符串长度</param>
        </member>
        <member name="M:WHC.OrderWater.Commons.CRegex.GetLinks(System.String)">
            <summary>
            多个链接
            </summary>
            <param name="sInput">输入内容</param>
        </member>
        <member name="M:WHC.OrderWater.Commons.CRegex.GetLink(System.String)">
            <summary>
            单个链接
            </summary>
            <param name="sInput">输入内容</param>
        </member>
        <member name="M:WHC.OrderWater.Commons.CRegex.GetImgTag(System.String)">
            <summary>
            图片标签
            </summary>
            <param name="sInput">输入内容</param>
        </member>
        <member name="M:WHC.OrderWater.Commons.CRegex.GetImgSrc(System.String)">
            <summary>
            图片地址
            </summary>
            <param name="sInput">输入内容</param>
        </member>
        <member name="M:WHC.OrderWater.Commons.CRegex.GetDomain(System.String)">
            <summary>
            根据URL获得域名
            </summary>
            <param name="sUrl">输入内容</param>
        </member>
        <member name="M:WHC.OrderWater.Commons.CRegex.GetTitle(System.String,System.String)">
            <summary>
            文章标题
            </summary>
            <param name="sInput">输入内容</param>
            <param name="sRegex">表达式字符串</param>
        </member>
        <member name="M:WHC.OrderWater.Commons.CRegex.GetTitle(System.String)">
            <summary>
            网页标题
            </summary>
        </member>
        <member name="M:WHC.OrderWater.Commons.CRegex.GetHtml(System.String)">
            <summary>
            网页内容
            </summary>
            <param name="sInput">输入内容</param>
        </member>
        <member name="M:WHC.OrderWater.Commons.CRegex.GetBody(System.String)">
            <summary>
            网页Body内容
            </summary>
        </member>
        <member name="M:WHC.OrderWater.Commons.CRegex.GetBody(System.String,System.String)">
            <summary>
            网页Body内容
            </summary>
            <param name="sInput">输入内容</param>
            <param name="sRegex">表达式字符串</param>
        </member>
        <member name="M:WHC.OrderWater.Commons.CRegex.GetSource(System.String,System.String)">
            <summary>
            文章来源
            </summary>
            <param name="sInput">输入内容</param>
            <param name="sRegex">表达式字符串</param>
        </member>
        <member name="M:WHC.OrderWater.Commons.CRegex.GetAuthor(System.String,System.String)">
            <summary>
            作者名
            </summary>
            <param name="sInput">输入内容</param>
            <param name="sRegex">表达式字符串</param>
        </member>
        <member name="M:WHC.OrderWater.Commons.CRegex.GetPageLinks(System.String,System.String)">
            <summary>
            分页链接地址
            </summary>
            <param name="sInput">输入内容</param>
            <param name="sRegex">表达式字符串</param>
        </member>
        <member name="M:WHC.OrderWater.Commons.CRegex.GetUrl(System.String,System.String)">
            <summary>
            根据相对路径得到绝对路径
            </summary>
            <param name="sUrl">输入内容</param>
            <param name="sInput">原始网站地址</param>
            <param name="sRelativeUrl">相对链接地址</param>
        </member>
        <member name="M:WHC.OrderWater.Commons.CRegex._GetStandardUrlDepth(System.String)">
            <summary>
            获得标准的URL路径深度
            </summary>
            <param name="url"></param>
            <returns>返回标准的形式：http://www.163.com/或http://www.163.com/news/。</returns>
        </member>
        <member name="M:WHC.OrderWater.Commons.CRegex.GetKeyWord(System.String)">
            <summary>
            关键字
            </summary>
            <param name="sInput">输入内容</param>
        </member>
        <member name="M:WHC.OrderWater.Commons.CRegex.GetCreateDate(System.String,System.String)">
            <summary>
            发布日期
            </summary>
            <param name="sInput">输入内容</param>
            <param name="sRegex">表达式字符串</param>
        </member>
        <member name="M:WHC.OrderWater.Commons.CRegex._ReplaceUrl(System.String,System.String,System.String,System.String)">
            <summary>
            置换连接
            </summary>
        </member>
        <member name="T:WHC.OrderWater.Commons.CrcUtils">
            <summary>
            CrcUtils 的摘要说明。
            </summary>
        </member>
        <member name="T:WHC.OrderWater.Commons.Collections.OrderedDictionaryEnumerator`2">
            <summary>
            Enumerator class for Ordered Dictionary.
            </summary>
            <typeparam name="TKey"></typeparam>
            <typeparam name="TValue"></typeparam>
        </member>
        <member name="M:WHC.OrderWater.Commons.Collections.OrderedDictionaryEnumerator`2.#ctor(WHC.OrderWater.Commons.Collections.List{System.Collections.Generic.KeyValuePair{`0,`1}})">
            <summary>
            Initializes a new instance of the <see cref="T:WHC.OrderWater.Commons.Collections.OrderedDictionaryEnumerator`2"/> class.
            </summary>
            <param name="list">The list.</param>
        </member>
        <member name="M:WHC.OrderWater.Commons.Collections.OrderedDictionaryEnumerator`2.Finalize">
            <summary>
            Releases unmanaged resources and performs other cleanup operations before the
            <see cref="T:WHC.OrderWater.Commons.Collections.OrderedDictionaryEnumerator`2"/> is reclaimed by garbage collection.
            </summary>
        </member>
        <member name="M:WHC.OrderWater.Commons.Collections.OrderedDictionaryEnumerator`2.Dispose(System.Boolean)">
            <summary>
            Dispose(bool disposing) executes in two distinct scenarios.
            If disposing equals true, the method has been called directly
            or indirectly by a user's code. Managed and unmanaged resources
            can be disposed.
            If disposing equals false, the method has been called by the 
            runtime from inside the finalizer and you should not reference 
            other objects. Only unmanaged resources can be disposed.
            </summary>
            <param name="disposing">if set to <see langword="true"/> [disposing].</param>
        </member>
        <member name="M:WHC.OrderWater.Commons.Collections.OrderedDictionaryEnumerator`2.Dispose">
            <summary>
            Performs application-defined tasks associated with freeing, releasing, or resetting unmanaged resources.
            </summary>
        </member>
        <member name="M:WHC.OrderWater.Commons.Collections.OrderedDictionaryEnumerator`2.MoveNext">
            <summary>
            Advances the enumerator to the next element of the collection.
            </summary>
            <returns>
            true if the enumerator was successfully advanced to the next element; false if the enumerator has passed the end of the collection.
            </returns>
            <exception cref="T:System.InvalidOperationException">The collection was modified after the enumerator was created. </exception>
        </member>
        <member name="M:WHC.OrderWater.Commons.Collections.OrderedDictionaryEnumerator`2.Reset">
            <summary>
            Sets the enumerator to its initial position, which is before the first element in the collection.
            </summary>
            <exception cref="T:System.InvalidOperationException">The collection was modified after the enumerator was created. </exception>
        </member>
        <member name="P:WHC.OrderWater.Commons.Collections.OrderedDictionaryEnumerator`2.System#Collections#Generic#IEnumerator{System#Collections#Generic#KeyValuePair{TKey@TValue}}#Current">
            <summary>
            Gets the element in the collection at the current position of the enumerator.
            </summary>
            <value></value>
            <returns>The element in the collection at the current position of the enumerator.</returns>
        </member>
        <member name="P:WHC.OrderWater.Commons.Collections.OrderedDictionaryEnumerator`2.InternalCurrent">
            <summary>
            Gets the internal current.
            </summary>
            <value>The internal current.</value>
        </member>
        <member name="P:WHC.OrderWater.Commons.Collections.OrderedDictionaryEnumerator`2.Key">
            <summary>
            Gets the key.
            </summary>
            <value>The key.</value>
        </member>
        <member name="P:WHC.OrderWater.Commons.Collections.OrderedDictionaryEnumerator`2.Value">
            <summary>
            Gets the value.
            </summary>
            <value>The value.</value>
        </member>
        <member name="P:WHC.OrderWater.Commons.Collections.OrderedDictionaryEnumerator`2.System#Collections#IEnumerator#Current">
            <summary>
            Gets the element in the collection at the current position of the enumerator.
            </summary>
            <value></value>
            <returns>The element in the collection at the current position of the enumerator.</returns>
        </member>
        <member name="P:WHC.OrderWater.Commons.Collections.OrderedDictionaryEnumerator`2.Current">
            <summary>
            Gets the element in the collection at the current position of the enumerator.
            </summary>
            <value></value>
            <returns>The element in the collection at the current position of the enumerator.</returns>
        </member>
        <member name="T:WHC.OrderWater.Commons.SearchInfo">
            <summary>
            查询信息实体类
            </summary>
        </member>
        <member name="M:WHC.OrderWater.Commons.SearchInfo.#ctor(System.String,System.Object,WHC.OrderWater.Commons.SqlOperator)">
            <summary>
            构造函数
            </summary>
            <param name="fieldName">字段名称</param>
            <param name="fieldValue">字段的值</param>
            <param name="sqlOperator">字段的Sql操作符号</param>
        </member>
        <member name="M:WHC.OrderWater.Commons.SearchInfo.#ctor(System.String,System.Object,WHC.OrderWater.Commons.SqlOperator,System.Boolean)">
            <summary>
            构造函数
            </summary>
            <param name="fieldName">字段名称</param>
            <param name="fieldValue">字段的值</param>
            <param name="sqlOperator">字段的Sql操作符号</param>
            <param name="excludeIfEmpty">如果字段为空或者Null则不作为查询条件</param>
        </member>
        <member name="M:WHC.OrderWater.Commons.SearchInfo.#ctor(System.String,System.Object,WHC.OrderWater.Commons.SqlOperator,System.Boolean,System.String)">
            <summary>
            构造函数
            </summary>
            <param name="fieldName">字段名称</param>
            <param name="fieldValue">字段的值</param>
            <param name="sqlOperator">字段的Sql操作符号</param>
            <param name="excludeIfEmpty">如果字段为空或者Null则不作为查询条件</param>
            <param name="groupName">分组的名称，如需构造一个括号内的条件 ( Test = "AA1" OR Test = "AA2"), 定义一个组名集中条件</param>
        </member>
        <member name="P:WHC.OrderWater.Commons.SearchInfo.GroupName">
            <summary>
            分组的名称，如需构造一个括号内的条件 ( Test = "AA1" OR Test = "AA2"), 定义一个组名集中条件
            </summary>
        </member>
        <member name="P:WHC.OrderWater.Commons.SearchInfo.FieldName">
            <summary>
            字段名称
            </summary>
        </member>
        <member name="P:WHC.OrderWater.Commons.SearchInfo.FieldValue">
            <summary>
            字段的值
            </summary>
        </member>
        <member name="P:WHC.OrderWater.Commons.SearchInfo.SqlOperator">
            <summary>
            字段的Sql操作符号
            </summary>
        </member>
        <member name="P:WHC.OrderWater.Commons.SearchInfo.ExcludeIfEmpty">
            <summary>
            如果字段为空或者Null则不作为查询条件
            </summary>
        </member>
        <member name="T:WHC.OrderWater.Commons.SqlOperator">
            <summary>
            Sql的查询符号
            </summary>
        </member>
        <member name="F:WHC.OrderWater.Commons.SqlOperator.Like">
            <summary>
            Like 模糊查询
            </summary>
        </member>
        <member name="F:WHC.OrderWater.Commons.SqlOperator.Equal">
            <summary>
            ＝ is equal to 等于号 
            </summary>
        </member>
        <!-- 对于成员“F:WHC.OrderWater.Commons.SqlOperator.NotEqual”忽略有格式错误的 XML 注释 -->
        <member name="F:WHC.OrderWater.Commons.SqlOperator.MoreThan">
            <summary>
            ＞ is more than 大于号
            </summary>
        </member>
        <member name="F:WHC.OrderWater.Commons.SqlOperator.LessThan">
            <summary>
            ＜ is less than 小于号 
            </summary>
        </member>
        <member name="F:WHC.OrderWater.Commons.SqlOperator.MoreThanOrEqual">
            <summary>
            ≥ is more than or equal to 大于或等于号 
            </summary>
        </member>
        <member name="F:WHC.OrderWater.Commons.SqlOperator.LessThanOrEqual">
            <summary>
            ≤ is less than or equal to 小于或等于号
            </summary>
        </member>
        <member name="F:WHC.OrderWater.Commons.SqlOperator.In">
            <summary>
            在某个字符串值中
            </summary>
        </member>
        <member name="T:WHC.OrderWater.Commons.RTFUtility">
            <summary>
            Static methods to build Rtf characters
            </summary>
        </member>
        <member name="M:WHC.OrderWater.Commons.RTFUtility.RtfToHtml(System.Windows.Forms.RichTextBox)">
            <summary>
            Converts RTF text to HTML text.
            </summary>
            <returns></returns>
        </member>
        <member name="T:WHC.OrderWater.Commons.RMBUtil">
            <summary>
            转换人民币大小金额
            </summary>
        </member>
        <member name="M:WHC.OrderWater.Commons.RMBUtil.CmycurD(System.Decimal)">
            <summary> 
            转换人民币大小金额 
            </summary> 
            <param name="num">金额</param> 
            <returns>返回大写形式</returns> 
        </member>
        <member name="M:WHC.OrderWater.Commons.RMBUtil.CmycurD(System.String)">
            <summary> 
            转换人民币大小金额  (一个重载，将字符串先转换成数字在调用CmycurD)
            </summary> 
            <param name="num">用户输入的金额，字符串形式未转成decimal</param> 
            <returns></returns> 
        </member>
        <member name="M:WHC.OrderWater.Commons.IsolatedStorageHelper.SaveDataTime">
            <summary>
            将程序第一次运行的时间保存在"独立存贮空间" 
            </summary>
            <param name="fromDataTime"></param>
        </member>
        <member name="M:WHC.OrderWater.Commons.IsolatedStorageHelper.GetDataTime">
            <summary> 
            从"独立存贮空间"取程序第一次运行的时间 
            </summary> 
            <returns></returns> 
        </member>
        <member name="T:WHC.OrderWater.Commons.ImeHelper">
            <summary>
            输入法帮助，全角 转换为半角
            </summary>
        </member>
        <member name="M:WHC.OrderWater.Commons.ImeHelper.SetIme(System.Windows.Forms.Form)">
            <summary>
            重载SetIme，传入Form
            </summary>
            <param name="frm"></param>
        </member>
        <member name="M:WHC.OrderWater.Commons.ImeHelper.SetIme(System.Windows.Forms.Control)">
            <summary>
            重载SetIme，传入Control
            </summary>
            <param name="ctl"></param>
        </member>
        <member name="M:WHC.OrderWater.Commons.ImeHelper.SetIme(System.IntPtr)">
            <summary>
            重载SetIme，传入对象句柄
            </summary>
            <param name="Handel"></param>
        </member>
        <member name="M:WHC.OrderWater.Commons.ImeHelper.ctl_Enter(System.Object,System.EventArgs)">
            <summary>
            控件的Enter处理程序
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:WHC.OrderWater.Commons.ImeHelper.ChangeControlIme(System.IntPtr)">
            <summary>
            下面这个函数才是真正检查输入法的全角半角状态
            </summary>
            <param name="h"></param>
        </member>
        <member name="T:WHC.OrderWater.Commons.GDI.TernaryRasterOperations">
            <summary>
                Specifies a raster-operation code. These codes define how the color data for the
                source rectangle is to be combined with the color data for the destination
                rectangle to achieve the final color.
            </summary>
        </member>
        <member name="F:WHC.OrderWater.Commons.GDI.TernaryRasterOperations.SRCCOPY">
            <summary>dest = source</summary>
        </member>
        <member name="F:WHC.OrderWater.Commons.GDI.TernaryRasterOperations.SRCPAINT">
            <summary>dest = source OR dest</summary>
        </member>
        <member name="F:WHC.OrderWater.Commons.GDI.TernaryRasterOperations.SRCAND">
            <summary>dest = source AND dest</summary>
        </member>
        <member name="F:WHC.OrderWater.Commons.GDI.TernaryRasterOperations.SRCINVERT">
            <summary>dest = source XOR dest</summary>
        </member>
        <member name="F:WHC.OrderWater.Commons.GDI.TernaryRasterOperations.SRCERASE">
            <summary>dest = source AND (NOT dest)</summary>
        </member>
        <member name="F:WHC.OrderWater.Commons.GDI.TernaryRasterOperations.NOTSRCCOPY">
            <summary>dest = (NOT source)</summary>
        </member>
        <member name="F:WHC.OrderWater.Commons.GDI.TernaryRasterOperations.NOTSRCERASE">
            <summary>dest = (NOT src) AND (NOT dest)</summary>
        </member>
        <member name="F:WHC.OrderWater.Commons.GDI.TernaryRasterOperations.MERGECOPY">
            <summary>dest = (source AND pattern)</summary>
        </member>
        <member name="F:WHC.OrderWater.Commons.GDI.TernaryRasterOperations.MERGEPAINT">
            <summary>dest = (NOT source) OR dest</summary>
        </member>
        <member name="F:WHC.OrderWater.Commons.GDI.TernaryRasterOperations.PATCOPY">
            <summary>dest = pattern</summary>
        </member>
        <member name="F:WHC.OrderWater.Commons.GDI.TernaryRasterOperations.PATPAINT">
            <summary>dest = DPSnoo</summary>
        </member>
        <member name="F:WHC.OrderWater.Commons.GDI.TernaryRasterOperations.PATINVERT">
            <summary>dest = pattern XOR dest</summary>
        </member>
        <member name="F:WHC.OrderWater.Commons.GDI.TernaryRasterOperations.DSTINVERT">
            <summary>dest = (NOT dest)</summary>
        </member>
        <member name="F:WHC.OrderWater.Commons.GDI.TernaryRasterOperations.BLACKNESS">
            <summary>dest = BLACK</summary>
        </member>
        <member name="F:WHC.OrderWater.Commons.GDI.TernaryRasterOperations.WHITENESS">
            <summary>dest = WHITE</summary>
        </member>
        <member name="T:WHC.OrderWater.Commons.FreezeWindowsUtil">
            <summary>
            对窗体进行冻结、解冻操作
            </summary>
        </member>
        <member name="M:WHC.OrderWater.Commons.FreezeWindowsUtil.FreezeThreads(System.Int32)">
            <summary>
            对进程的窗体进行冻结
            </summary>
            <param name="intPID"></param>
        </member>
        <member name="M:WHC.OrderWater.Commons.FreezeWindowsUtil.UnfreezeThreads(System.Int32)">
            <summary>
            解冻进程的窗体
            </summary>
            <param name="intPID"></param>
        </member>
        <member name="T:WHC.OrderWater.Commons.ExRichTextBox">
            <summary>
            This class adds the following functionality to RichTextBox:
            
            1.	Allows plain text to be inserted or appended programmatically to RTF
            	content.
            2.	Allows the font, text color, and highlight color of plain text to be
            	specified when inserting or appending text as RTF.
            3.	Allows images to be inserted programmatically, or with interaction from
            	the user.
            </summary>
            <remarks>
            Many solutions to the problem of programmatically inserting images
            into a RichTextBox use the clipboard or hard code the RTF for
            the image in the program.  This class is an attempt to make the process of
            inserting images at runtime more flexible without the overhead of maintaining
            the clipboard or the use of huge, cumbersome strings.
            
            RTF Specification v1.6 was used and is referred to many times in this document.
            http://msdn.microsoft.com/library/default.asp?url=/library/en-us/dnrtfspec/html/rtfspec.asp
            
            For information about the RichEdit (Unmanaged RichTextBox) ...
            http://msdn.microsoft.com/library/default.asp?url=/library/en-us/shellcc/platform/commctls/richedit/richeditcontrols/aboutricheditcontrols.asp
            </remarks>
        </member>
        <member name="M:WHC.OrderWater.Commons.ExRichTextBox.#ctor">
            <summary>
            Initializes the text colors, creates dictionaries for RTF colors and
            font families, and stores the horizontal and vertical resolution of
            the RichTextBox's graphics context.
            </summary>
        </member>
        <member name="M:WHC.OrderWater.Commons.ExRichTextBox.#ctor(WHC.OrderWater.Commons.RtfColor)">
            <summary>
            Calls the default constructor then sets the text color.
            </summary>
            <param name="_textColor"></param>
        </member>
        <member name="M:WHC.OrderWater.Commons.ExRichTextBox.#ctor(WHC.OrderWater.Commons.RtfColor,WHC.OrderWater.Commons.RtfColor)">
            <summary>
            Calls the default constructor then sets te text and highlight colors.
            </summary>
            <param name="_textColor"></param>
            <param name="_highlightColor"></param>
        </member>
        <member name="M:WHC.OrderWater.Commons.ExRichTextBox.AppendRtf(System.String)">
            <summary>
            Assumes the string passed as a paramter is valid RTF text and attempts
            to append it as RTF to the content of the control.
            </summary>
            <param name="_rtf"></param>
        </member>
        <member name="M:WHC.OrderWater.Commons.ExRichTextBox.InsertRtf(System.String)">
            <summary>
            Assumes that the string passed as a parameter is valid RTF text and
            attempts to insert it as RTF into the content of the control.
            </summary>
            <remarks>
            NOTE: The text is inserted wherever the caret is at the time of the call,
            and if any text is selected, that text is replaced.
            </remarks>
            <param name="_rtf"></param>
        </member>
        <member name="M:WHC.OrderWater.Commons.ExRichTextBox.AppendTextAsRtf(System.String)">
            <summary>
            Appends the text using the current font, text, and highlight colors.
            </summary>
            <param name="_text"></param>
        </member>
        <member name="M:WHC.OrderWater.Commons.ExRichTextBox.AppendTextAsRtf(System.String,System.Drawing.Font)">
            <summary>
            Appends the text using the given font, and current text and highlight
            colors.
            </summary>
            <param name="_text"></param>
            <param name="_font"></param>
        </member>
        <member name="M:WHC.OrderWater.Commons.ExRichTextBox.AppendTextAsRtf(System.String,System.Drawing.Font,WHC.OrderWater.Commons.RtfColor)">
            <summary>
            Appends the text using the given font and text color, and the current
            highlight color.
            </summary>
            <param name="_text"></param>
            <param name="_font"></param>
            <param name="_color"></param>
        </member>
        <member name="M:WHC.OrderWater.Commons.ExRichTextBox.AppendTextAsRtf(System.String,System.Drawing.Font,WHC.OrderWater.Commons.RtfColor,WHC.OrderWater.Commons.RtfColor)">
            <summary>
            Appends the text using the given font, text, and highlight colors.  Simply
            moves the caret to the end of the RichTextBox's text and makes a call to
            insert.
            </summary>
            <param name="_text"></param>
            <param name="_font"></param>
            <param name="_textColor"></param>
            <param name="_backColor"></param>
        </member>
        <member name="M:WHC.OrderWater.Commons.ExRichTextBox.InsertTextAsRtf(System.String)">
            <summary>
            Inserts the text using the current font, text, and highlight colors.
            </summary>
            <param name="_text"></param>
        </member>
        <member name="M:WHC.OrderWater.Commons.ExRichTextBox.InsertTextAsRtf(System.String,System.Drawing.Font)">
            <summary>
            Inserts the text using the given font, and current text and highlight
            colors.
            </summary>
            <param name="_text"></param>
            <param name="_font"></param>
        </member>
        <member name="M:WHC.OrderWater.Commons.ExRichTextBox.InsertTextAsRtf(System.String,System.Drawing.Font,WHC.OrderWater.Commons.RtfColor)">
            <summary>
            Inserts the text using the given font and text color, and the current
            highlight color.
            </summary>
            <param name="_text"></param>
            <param name="_font"></param>
            <param name="_color"></param>
        </member>
        <member name="M:WHC.OrderWater.Commons.ExRichTextBox.InsertTextAsRtf(System.String,System.Drawing.Font,WHC.OrderWater.Commons.RtfColor,WHC.OrderWater.Commons.RtfColor)">
            <summary>
            Inserts the text using the given font, text, and highlight colors.  The
            text is wrapped in RTF codes so that the specified formatting is kept.
            You can only assign valid RTF to the RichTextBox.Rtf property, else
            an exception is thrown.  The RTF string should follow this format ...
            
            {\rtf1\ansi\ansicpg1252\deff0\deflang1033{\fonttbl{[FONTS]}{\colortbl ;[COLORS]}}
            \viewkind4\uc1\pard\cf1\f0\fs20 [DOCUMENT AREA] }
            
            </summary>
            <remarks>
            NOTE: The text is inserted wherever the caret is at the time of the call,
            and if any text is selected, that text is replaced.
            </remarks>
            <param name="_text"></param>
            <param name="_font"></param>
            <param name="_color"></param>
            <param name="_color"></param>
        </member>
        <member name="M:WHC.OrderWater.Commons.ExRichTextBox.GetDocumentArea(System.String,System.Drawing.Font)">
             <summary>
             Creates the Document Area of the RTF being inserted. The document area
             (in this case) consists of the text being added as RTF and all the
             formatting specified in the Font object passed in. This should have the
             form ...
             
             \viewkind4\uc1\pard\cf1\f0\fs20 [DOCUMENT AREA] }
            
             </summary>
             <param name="_text"></param>
             <param name="_font"></param>
             <returns>
             The document area as a string.
             </returns>
        </member>
        <member name="M:WHC.OrderWater.Commons.ExRichTextBox.InsertImage(System.Drawing.Image)">
            <summary>
            Inserts an image into the RichTextBox.  The image is wrapped in a Windows
            Format Metafile, because although Microsoft discourages the use of a WMF,
            the RichTextBox (and even MS Word), wraps an image in a WMF before inserting
            the image into a document.  The WMF is attached in HEX format (a string of
            HEX numbers).
            
            The RTF Specification v1.6 says that you should be able to insert bitmaps,
            .jpegs, .gifs, .pngs, and Enhanced Metafiles (.emf) directly into an RTF
            document without the WMF wrapper. This works fine with MS Word,
            however, when you don't wrap images in a WMF, WordPad and
            RichTextBoxes simply ignore them.  Both use the riched20.dll or msfted.dll.
            </summary>
            <remarks>
            NOTE: The image is inserted wherever the caret is at the time of the call,
            and if any text is selected, that text is replaced.
            </remarks>
            <param name="_image"></param>
        </member>
        <member name="M:WHC.OrderWater.Commons.ExRichTextBox.GetImagePrefix(System.Drawing.Image)">
            <summary>
            Creates the RTF control string that describes the image being inserted.
            This description (in this case) specifies that the image is an
            MM_ANISOTROPIC metafile, meaning that both X and Y axes can be scaled
            independently.  The control string also gives the images current dimensions,
            and its target dimensions, so if you want to control the size of the
            image being inserted, this would be the place to do it. The prefix should
            have the form ...
            
            {\pict\wmetafile8\picw[A]\pich[B]\picwgoal[C]\pichgoal[D]
            
            where ...
            
            A	= current width of the metafile in hundredths of millimeters (0.01mm)
            	= Image Width in Inches * Number of (0.01mm) per inch
            	= (Image Width in Pixels / Graphics Context's Horizontal Resolution) * 2540
            	= (Image Width in Pixels / Graphics.DpiX) * 2540
            
            B	= current height of the metafile in hundredths of millimeters (0.01mm)
            	= Image Height in Inches * Number of (0.01mm) per inch
            	= (Image Height in Pixels / Graphics Context's Vertical Resolution) * 2540
            	= (Image Height in Pixels / Graphics.DpiX) * 2540
            
            C	= target width of the metafile in twips
            	= Image Width in Inches * Number of twips per inch
            	= (Image Width in Pixels / Graphics Context's Horizontal Resolution) * 1440
            	= (Image Width in Pixels / Graphics.DpiX) * 1440
            
            D	= target height of the metafile in twips
            	= Image Height in Inches * Number of twips per inch
            	= (Image Height in Pixels / Graphics Context's Horizontal Resolution) * 1440
            	= (Image Height in Pixels / Graphics.DpiX) * 1440
            
            </summary>
            <remarks>
            The Graphics Context's resolution is simply the current resolution at which
            windows is being displayed.  Normally it's 96 dpi, but instead of assuming
            I just added the code.
            
            According to Ken Howe at pbdr.com, "Twips are screen-independent units
            used to ensure that the placement and proportion of screen elements in
            your screen application are the same on all display systems."
            
            Units Used
            ----------
            1 Twip = 1/20 Point
            1 Point = 1/72 Inch
            1 Twip = 1/1440 Inch
            
            1 Inch = 2.54 cm
            1 Inch = 25.4 mm
            1 Inch = 2540 (0.01)mm
            </remarks>
            <param name="_image"></param>
            <returns></returns>
        </member>
        <member name="M:WHC.OrderWater.Commons.ExRichTextBox.GdipEmfToWmfBits(System.IntPtr,System.UInt32,System.Byte[],System.Int32,WHC.OrderWater.Commons.ExRichTextBox.EmfToWmfBitsFlags)">
            <summary>
            Use the EmfToWmfBits function in the GDI+ specification to convert a 
            Enhanced Metafile to a Windows Metafile
            </summary>
            <param name="_hEmf">
            A handle to the Enhanced Metafile to be converted
            </param>
            <param name="_bufferSize">
            The size of the buffer used to store the Windows Metafile bits returned
            </param>
            <param name="_buffer">
            An array of bytes used to hold the Windows Metafile bits returned
            </param>
            <param name="_mappingMode">
            The mapping mode of the image.  This control uses MM_ANISOTROPIC.
            </param>
            <param name="_flags">
            Flags used to specify the format of the Windows Metafile returned
            </param>
        </member>
        <member name="M:WHC.OrderWater.Commons.ExRichTextBox.GetRtfImage(System.Drawing.Image)">
            <summary>
            Wraps the image in an Enhanced Metafile by drawing the image onto the
            graphics context, then converts the Enhanced Metafile to a Windows
            Metafile, and finally appends the bits of the Windows Metafile in HEX
            to a string and returns the string.
            </summary>
            <param name="_image"></param>
            <returns>
            A string containing the bits of a Windows Metafile in HEX
            </returns>
        </member>
        <member name="M:WHC.OrderWater.Commons.ExRichTextBox.GetFontTable(System.Drawing.Font)">
            <summary>
            Creates a font table from a font object.  When an Insert or Append 
            operation is performed a font is either specified or the default font
            is used.  In any case, on any Insert or Append, only one font is used,
            thus the font table will always contain a single font.  The font table
            should have the form ...
            
            {\fonttbl{\f0\[FAMILY]\fcharset0 [FONT_NAME];}
            </summary>
            <param name="_font"></param>
            <returns></returns>
        </member>
        <member name="M:WHC.OrderWater.Commons.ExRichTextBox.GetColorTable(WHC.OrderWater.Commons.RtfColor,WHC.OrderWater.Commons.RtfColor)">
            <summary>
            Creates a font table from the RtfColor structure.  When an Insert or Append
            operation is performed, _textColor and _backColor are either specified
            or the default is used.  In any case, on any Insert or Append, only three
            colors are used.  The default color of the RichTextBox (signified by a
            semicolon (;) without a definition), is always the first color (index 0) in
            the color table.  The second color is always the text color, and the third
            is always the highlight color (color behind the text).  The color table
            should have the form ...
            
            {\colortbl ;[TEXT_COLOR];[HIGHLIGHT_COLOR];}
            
            </summary>
            <param name="_textColor"></param>
            <param name="_backColor"></param>
            <returns></returns>
        </member>
        <member name="M:WHC.OrderWater.Commons.ExRichTextBox.RemoveBadChars(System.String)">
            <summary>
            Called by overrided RichTextBox.Rtf accessor.
            Removes the null character from the RTF.  This is residue from developing
            the control for a specific instant messaging protocol and can be ommitted.
            </summary>
            <param name="_originalRtf"></param>
            <returns>RTF without null character</returns>
        </member>
        <member name="T:WHC.OrderWater.Commons.Base64Util">
            <summary>
            基于Base64的加密编码，
            可以设置不同的密码表来获取不同的编码合解码
            </summary>
        </member>
        <member name="M:WHC.OrderWater.Commons.Base64Util.Encrypt(System.String)">
            <summary>
            使用默认的密码表加密字符串
            </summary>
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:WHC.OrderWater.Commons.Base64Util.Decrypt(System.String)">
            <summary>
            使用默认的密码表解密字符串
            </summary>
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:WHC.OrderWater.Commons.Base64Util.GetStandardBase64">
            <summary>
            获取具有标准的Base64密码表的加密类
            </summary>
            <returns></returns>
        </member>
        <member name="M:WHC.OrderWater.Commons.Base64Util.Encode(System.String)">
            <summary>
            返回编码后的字符串
            </summary>
            <param name="source"></param>
            <returns></returns>
        </member>
        <member name="M:WHC.OrderWater.Commons.Base64Util.Decode(System.String)">
            <summary>
            获得解码字符串
            </summary>
            <param name="source"></param>
            <returns></returns>
        </member>
        <member name="M:WHC.OrderWater.Commons.Base64Util.InitDict">
            <summary>
            初始化双向哈西字典
            </summary>
        </member>
        <member name="M:WHC.OrderWater.Commons.Base64Util.ValidateRepeat(System.String)">
            <summary>
            检查字符串中的字符是否有重复
            </summary>
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:WHC.OrderWater.Commons.Base64Util.ValidateEqualPad(System.String,System.String)">
            <summary>
            检查字符串是否包含补码字符
            </summary>
            <param name="input"></param>
            <param name="pad"></param>
        </member>
        <member name="P:WHC.OrderWater.Commons.Base64Util.CodeTable">
            <summary>
            密码表
            </summary>
        </member>
        <member name="P:WHC.OrderWater.Commons.Base64Util.Pad">
            <summary>
            补码
            </summary>
        </member>
        <member name="M:WHC.OrderWater.Commons.CultureInfoUtil.InitializeCulture">
            <summary>
            初始化语言环境
            </summary>
        </member>
        <member name="P:WHC.OrderWater.Commons.CultureInfoUtil.CurrentRegion">
            <summary>
            Region信息（中文）:
                  Name:                            CN
                  DisplayName:                     中华人民共和国
                  EnglishName:                     People's Republic of China
                  IsMetric:                        True
                  ThreeLetterISORegionName:        CHN
                  ThreeLetterWindowsRegionName: CHN
                  TwoLetterISORegionName:          CN
                  CurrencySymbol:                  ￥
                  ISOCurrencySymbol:               CNY
            </summary>
        </member>
        <member name="T:WHC.OrderWater.Commons.WindowsExitHelper">
            <summary>
            计算机重启、关电源、注销、关闭显示器辅助类
            </summary>
        </member>
        <member name="M:WHC.OrderWater.Commons.WindowsExitHelper.Reboot">
            <summary>
            计算机重启
            </summary>
        </member>
        <member name="M:WHC.OrderWater.Commons.WindowsExitHelper.PowerOff">
            <summary>
            计算机关电源
            </summary>
        </member>
        <member name="M:WHC.OrderWater.Commons.WindowsExitHelper.LogoOff">
            <summary>
            计算机注销
            </summary>
        </member>
        <member name="M:WHC.OrderWater.Commons.WindowsExitHelper.CloseMonitor">
            <summary>
            关闭显示器
            </summary>
        </member>
        <member name="T:WHC.OrderWater.Commons.Threading.WorkItemStatus">
            <summary>
            Execution Status of WorkItem object
            </summary>
        </member>
        <member name="F:WHC.OrderWater.Commons.Threading.WorkItemStatus.Completed">
            <summary>
            Item execution is completed
            </summary>
        </member>
        <member name="F:WHC.OrderWater.Commons.Threading.WorkItemStatus.Queued">
            <summary>
            Item is currently in queue for execution
            </summary>
        </member>
        <member name="F:WHC.OrderWater.Commons.Threading.WorkItemStatus.Executing">
            <summary>
            Item is currently executing
            </summary>
        </member>
        <member name="F:WHC.OrderWater.Commons.Threading.WorkItemStatus.Aborted">
            <summary>
            Item execition is aborted
            </summary>
        </member>
        <member name="T:WHC.OrderWater.Commons.Threading.ThreadSafeObjectProvider`1">
            <summary>
            Allows to create thread safe instance for specified object
            </summary>
            <typeparam name="T">Type of the object for which thread safe instance is created</typeparam>
        </member>
        <member name="M:WHC.OrderWater.Commons.Threading.ThreadSafeObjectProvider`1.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:WHC.OrderWater.Commons.Threading.ThreadSafeObjectProvider`1"/> class.
            </summary>
        </member>
        <member name="M:WHC.OrderWater.Commons.Threading.ThreadSafeObjectProvider`1.#ctor(System.Boolean)">
            <summary>
            Initializes a new instance of the <see cref="T:WHC.OrderWater.Commons.Threading.ThreadSafeObjectProvider`1"/> class.
            </summary>
            <param name="nonPublic">true if a public or nonpublic default constructor can match; 
            false if only a public default constructor can match.</param>
        </member>
        <member name="M:WHC.OrderWater.Commons.Threading.ThreadSafeObjectProvider`1.CreateInstance(System.Object[])">
            <summary>
            Creates an instance of the specified type using the constructor that best matches
            the specified parameters.
            </summary>
            <param name="args">An array of one or more arguments that can participate in activation. .</param>
        </member>
        <member name="M:WHC.OrderWater.Commons.Threading.ThreadSafeObjectProvider`1.CreateInstance(System.Reflection.BindingFlags,System.Object[])">
            <summary>
            Creates an instance of the specified type using the constructor that best matches
            the specified parameters.
            </summary>
            <param name="bindingAttr">A combination of zero or more bit flags that affect the 
            search for the type constructor. If bindingAttr is zero, a case-sensitive search for
            public constructors is conducted. .</param>
            <param name="args">An array of one or more arguments that can participate in activation. .</param>
        </member>
        <member name="M:WHC.OrderWater.Commons.Threading.ThreadSafeObjectProvider`1.CreateInstance(System.Reflection.BindingFlags)">
            <summary>
            Creates an instance of the specified type using the constructor that best matches
            the specified parameters.
            </summary>
            <param name="bindingAttr">A combination of zero or more bit flags that affect the 
            search for the type constructor. If bindingAttr is zero, a case-sensitive search for
            public constructors is conducted. .</param>
        </member>
        <member name="M:WHC.OrderWater.Commons.Threading.ThreadSafeObjectProvider`1.CreateInstance(System.Boolean)">
            <summary>
            Creates an instance of the specified type using the constructor that best matches
            the specified parameters.
            </summary>
            <param name="nonPublic">true if a public or nonpublic default constructor can match; 
            false if only a public default constructor can match.</param>
        </member>
        <member name="M:WHC.OrderWater.Commons.Threading.ThreadSafeObjectProvider`1.DisposeManagedResources">
            <summary>
            Override This Method To Dispose Unmanaged Resources.
            </summary>
        </member>
        <member name="P:WHC.OrderWater.Commons.Threading.ThreadSafeObjectProvider`1.Created">
            <summary>
            Gets a value indicating whether this <see cref="T:WHC.OrderWater.Commons.Threading.ThreadSafeObjectProvider`1"/>
            Instance is created.
            </summary>
            <value>
            	<see langword="true"/> if created; otherwise, <see langword="false"/>.
            </value>
        </member>
        <member name="P:WHC.OrderWater.Commons.Threading.ThreadSafeObjectProvider`1.Instance">
            <summary>
            Creates an instance of the specified type
            </summary>
            <returns>Created Instance</returns>
        </member>
        <member name="T:WHC.OrderWater.Commons.Threading.ThreadPoolHelper">
            <summary>
            Sample helper class for ThreadPool.
            </summary>
        </member>
        <member name="M:WHC.OrderWater.Commons.Threading.ThreadPoolHelper.Callback(System.Object)">
            <summary>
            The WaitCallback delegate object in actual of our thread pool.
            </summary>
            <param name="state"></param>
        </member>
        <member name="M:WHC.OrderWater.Commons.Threading.ThreadPoolHelper.QueueUserWorkItem(WHC.OrderWater.Commons.Threading.ThreadPoolHelper.WaitCallbackNew)">
            <summary>
            Queues a method for execution.
            The method executes when a thread pool thread becomes available.
            </summary>
            <param name="proc"></param>
            <returns></returns>
        </member>
        <member name="M:WHC.OrderWater.Commons.Threading.ThreadPoolHelper.QueueUserWorkItems(WHC.OrderWater.Commons.Threading.ThreadPoolHelper.WaitCallbackNew[])">
            <summary>
            Queues a few method for execution.
            The method executes when a thread pool thread becomes available.
            </summary>
            <param name="proc"></param>
            <returns></returns>
        </member>
        <member name="F:WHC.OrderWater.Commons.Threading.ThreadPoolHelper.AutoResetEvents">
            <summary>
            (Collection)Notifies a waiting thread that an event has occurred. This class cannot be inherited.
            </summary>
        </member>
        <member name="M:WHC.OrderWater.Commons.Threading.ThreadPoolHelper.WaitAll">
            <summary>
            Waits for all the elements in the specified array to receive a signal.
            </summary>
            <returns>Waits for all the elements in the specified array to receive a signal.</returns>
        </member>
        <member name="M:WHC.OrderWater.Commons.Threading.ThreadPoolHelper.WaitAny">
            <summary>
            Waits for any of the elements in the specified array to receive a signal.
            </summary>
            <returns>The array index of the object that satisfied the wait.</returns>
        </member>
        <member name="T:WHC.OrderWater.Commons.Threading.ThreadPoolHelper.WaitCallbackNew">
            <summary>
            The delegate for explicit method.
            </summary>
        </member>
        <member name="T:WHC.OrderWater.Commons.Threading.ThreadPoolHelper.WaitCallbackHelper">
            <summary>
            A callback container with a WaitHandle.
            </summary>
        </member>
        <member name="P:WHC.OrderWater.Commons.Threading.ThreadPoolHelper.WaitCallbackHelper.Callback">
             <summary>
            
             </summary>
        </member>
        <member name="T:WHC.OrderWater.Commons.PinYinUtil">
            <summary>
            中文字符串转换为拼音或者拼音首字母的辅助类
            </summary>
        </member>
        <member name="F:WHC.OrderWater.Commons.PinYinUtil.pinyinValues">
            <SUMMARY>
            包含字符 ASC 码的整形数组。
            </SUMMARY>
        </member>
        <member name="F:WHC.OrderWater.Commons.PinYinUtil.pinyinNames">
            <SUMMARY>
            包含汉字拼音的字符串数组。
            </SUMMARY>
        </member>
        <member name="M:WHC.OrderWater.Commons.PinYinUtil.CHSToPinyin(System.String,System.String,System.Boolean)">
            <summary>
            将指定中文字符串转换为拼音形式
            </summary>
            <param name="chs">要转换的中文字符串</param>
            <param name="separator">连接拼音之间的分隔符</param>
            <param name="initialCap">指定是否将首字母大写</param>
            <returns>包含中文字符串的拼音的字符串</returns>
        </member>
        <member name="M:WHC.OrderWater.Commons.PinYinUtil.CHSToPinyin(System.String,System.String)">
            <summary>
            将指定中文字符串转换为拼音形式
            </summary>
            <param name="chs">要转换的中文字符串</param>
            <param name="separator">连接拼音之间的分隔符</param>
            <returns>包含中文字符串的拼音的字符串</returns>
        </member>
        <member name="M:WHC.OrderWater.Commons.PinYinUtil.CHSToPinyin(System.String,System.Boolean)">
            <summary>
            将指定中文字符串转换为拼音形式
            </summary>
            <param name="chs">要转换的中文字符串</param>
            <param name="initialCap">指定是否将首字母大写</param>
            <returns>包含中文字符串的拼音的字符串</returns>
        </member>
        <member name="M:WHC.OrderWater.Commons.PinYinUtil.CHSToPinyin(System.String)">
            <summary>
            将指定中文字符串转换为拼音形式
            </summary>
            <param name="chs">要转换的中文字符串</param>
            <returns>包含中文字符串的拼音的字符串</returns>
        </member>
        <member name="M:WHC.OrderWater.Commons.PinYinUtil.GetFirstPY(System.String)">
            <summary>
            提取首字母。兼容中英文
            </summary>
            <param name="chsStr">单个汉字或字母</param>
            <returns></returns>
        </member>
        <member name="P:WHC.OrderWater.Commons.PinYinUtil.CHSPhraseSpecial">
            <summary>
            设置或获取包含例外词组读音的键/值对的组合
            </summary>
        </member>
        <member name="T:WHC.OrderWater.Commons.FingerprintHelper">
            <summary>
            提供用户硬件唯一信息的辅助类
            </summary>
        </member>
        <member name="T:WHC.OrderWater.Commons.ExRichTextBoxPrintHelper">
            <summary>
            A helper to provide an easy method for printing a RichTextBox
            based of work by Martin Müller http://msdn.microsoft.com/en-us/library/ms996492.aspx
            </summary>
        </member>
        <member name="M:WHC.OrderWater.Commons.ExRichTextBoxPrintHelper.FormatRange(System.Boolean,System.Drawing.Printing.PrintPageEventArgs,System.Int32,System.Int32)">
            <summary>
            Calculate or render the contents of our RichTextBox for printing
            </summary>
            <param name="measureOnly">If true, only the calculation is performed,
            otherwise the text is rendered as well</param>
            <param name="e">The PrintPageEventArgs object from the
            PrintPage event</param>
            <param name="charFrom">Index of first character to be printed</param>
            <param name="charTo">Index of last character to be printed</param>
            <returns>(Index of last character that fitted on the
            page) + 1</returns>
        </member>
        <member name="M:WHC.OrderWater.Commons.ExRichTextBoxPrintHelper.HundredthInchToTwips(System.Int32)">
            <summary>
            Convert between 1/100 inch (unit used by the .NET framework)
            and twips (1/1440 inch, used by Win32 API calls)
            </summary>
            <param name="n">Value in 1/100 inch</param>
            <returns>Value in twips</returns>
        </member>
        <member name="M:WHC.OrderWater.Commons.ExRichTextBoxPrintHelper.FormatRangeDone">
            <summary>
            Free cached data from rich edit control after printing
            </summary>
        </member>
        <member name="M:WHC.OrderWater.Commons.ExRichTextBoxPrintHelper.SetSelectionFont(System.Windows.Forms.RichTextBox,System.String)">
            <summary>
            Sets the font only for the selected part of the rich text box
            without modifying the other properties like size or style
            </summary>
            <param name="face">Name of the font to use</param>
            <returns>true on success, false on failure</returns>
        </member>
        <member name="M:WHC.OrderWater.Commons.ExRichTextBoxPrintHelper.SetSelectionSize(System.Windows.Forms.RichTextBox,System.Int32)">
            <summary>
            Sets the font size only for the selected part of the rich text box
            without modifying the other properties like font or style
            </summary>
            <param name="size">new point size to use</param>
            <returns>true on success, false on failure</returns>
        </member>
        <member name="M:WHC.OrderWater.Commons.ExRichTextBoxPrintHelper.SetSelectionBold(System.Boolean)">
            <summary>
            Sets the bold style only for the selected part of the rich text box
            without modifying the other properties like font or size
            </summary>
            <param name="bold">make selection bold (true) or regular (false)</param>
            <returns>true on success, false on failure</returns>
        </member>
        <member name="M:WHC.OrderWater.Commons.ExRichTextBoxPrintHelper.SetSelectionItalic(System.Boolean)">
            <summary>
            Sets the italic style only for the selected part of the rich text box
            without modifying the other properties like font or size
            </summary>
            <param name="italic">make selection italic (true) or regular (false)</param>
            <returns>true on success, false on failure</returns>
        </member>
        <member name="M:WHC.OrderWater.Commons.ExRichTextBoxPrintHelper.SetSelectionUnderlined(System.Boolean)">
            <summary>
            Sets the underlined style only for the selected part of the rich text box
            without modifying the other properties like font or size
            </summary>
            <param name="underlined">make selection underlined (true) or regular (false)</param>
            <returns>true on success, false on failure</returns>
        </member>
        <member name="M:WHC.OrderWater.Commons.ExRichTextBoxPrintHelper.SetSelectionStyle(System.UInt32,System.UInt32)">
            <summary>
            Set the style only for the selected part of the rich text box
            with the possibility to mask out some styles that are not to be modified
            </summary>
            <param name="mask">modify which styles?</param>
            <param name="effect">new values for the styles</param>
            <returns>true on success, false on failure</returns>
        </member>
        <member name="T:WHC.OrderWater.Commons.AudioHelper">
            <summary>
            声音播放辅助类
            </summary>
        </member>
        <member name="M:WHC.OrderWater.Commons.AudioHelper.Play(System.String)">
            <summary>Plays a .wav sound file.</summary>
            <param name="location">A String containing the name of the sound file </param>
            <PermissionSet><IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" /><IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" /><IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlThread" /><IPermission class="System.Net.WebPermission, System, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" /></PermissionSet>
        </member>
        <member name="M:WHC.OrderWater.Commons.AudioHelper.Play(System.String,WHC.OrderWater.Commons.AudioPlayMode)">
            <summary>Plays a .wav sound file.</summary>
            <param name="playMode">AudioPlayMode Enumeration mode for playing the sound. By default, AudioPlayMode.Background.</param>
            <param name="location">A String containing the name of the sound file </param>
            <PermissionSet><IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" /><IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" /><IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlThread" /><IPermission class="System.Net.WebPermission, System, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" /></PermissionSet>
        </member>
        <member name="M:WHC.OrderWater.Commons.AudioHelper.Play(System.IO.Stream,WHC.OrderWater.Commons.AudioPlayMode)">
            <summary>Plays a .wav sound file.</summary>
            <param name="playMode">AudioPlayMode Enumeration mode for playing the sound. By default, AudioPlayMode.Background.</param>
            <param name="stream"><see cref="T:System.IO.Stream"></see> that represents the sound file.</param>
            <PermissionSet><IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" /><IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" /><IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlThread" /><IPermission class="System.Net.WebPermission, System, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" /></PermissionSet>
        </member>
        <member name="M:WHC.OrderWater.Commons.AudioHelper.Play(System.Byte[],WHC.OrderWater.Commons.AudioPlayMode)">
            <summary>Plays a .wav sound file.</summary>
            <param name="data">Byte array that represents the sound file.</param>
            <param name="playMode">AudioPlayMode Enumeration mode for playing the sound. By default, AudioPlayMode.Background.</param>
            <PermissionSet><IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" /><IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" /><IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlThread" /><IPermission class="System.Net.WebPermission, System, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" /></PermissionSet>
        </member>
        <member name="M:WHC.OrderWater.Commons.AudioHelper.PlaySystemSound(System.Media.SystemSound)">
            <summary>Plays a system sound.</summary>
            <param name="systemSound"><see cref="T:System.Media.SystemSound"></see> object representing the system sound to play.</param>
        </member>
        <member name="M:WHC.OrderWater.Commons.AudioHelper.Stop">
            <summary>Stops a sound playing in the background.</summary>
            <filterpriority>1</filterpriority>
        </member>
        <member name="T:WHC.OrderWater.Commons.AudioPlayMode">
            <summary>Indicates how to play sounds when calling audio methods.</summary>
        </member>
        <member name="F:WHC.OrderWater.Commons.AudioPlayMode.WaitToComplete">
            <summary>
            play the sound, and waits until it completes before calling code continues. 
            </summary>
        </member>
        <member name="F:WHC.OrderWater.Commons.AudioPlayMode.Background">
            <summary>
            play the sound in the background. The calling code continues to execute. 
            </summary>
        </member>
        <member name="F:WHC.OrderWater.Commons.AudioPlayMode.BackgroundLoop">
            <summary>
            play the sound in the background until the Stop Method is called. The calling code continues to execute. 
            </summary>
        </member>
        <member name="T:WHC.OrderWater.Commons.ArgumentValidation">
            <summary>
            Common validation routines for argument validation.(来自Enterprise Library2005的Common项目)
            </summary>
        </member>
        <member name="M:WHC.OrderWater.Commons.ArgumentValidation.CheckForEmptyString(System.String,System.String)">
            <summary>
            <para>检查参数<paramref name="variable"/>是否为空字符串。</para>
            </summary>
            <param name="variable">
            <para>The value to check.</para>
            </param>
            <param name="variableName">
            <para>The name of the variable being checked.</para>
            </param>
            <remarks>
            <para>Before checking the <paramref name="variable"/>, a call is made to <see cref="M:WHC.OrderWater.Commons.ArgumentValidation.CheckForNullReference(System.Object,System.String)"/>.</para>
            </remarks>
            <exception cref="T:System.ArgumentNullException">
            <pararef name="variable"/> can not be <see langword="null"/> (Nothing in Visual Basic).
            <para>- or -</para>
            <pararef name="variableName"/> can not be <see langword="null"/> (Nothing in Visual Basic).
            </exception>
            <exception cref="T:System.ArgumentException">
            <pararef name="variable"/> can not be a zero length <see cref="T:System.String"/>.
            </exception>
        </member>
        <member name="M:WHC.OrderWater.Commons.ArgumentValidation.CheckForNullReference(System.Object,System.String)">
            <summary>
            <para>检查参数<paramref name="variable"/>是否为空引用(Null)。</para>
            </summary>
            <param name="variable">
            <para>The value to check.</para>
            </param>
            <param name="variableName">
            <para>The name of the variable being checked.</para>
            </param>
            <exception cref="T:System.ArgumentNullException">
            <pararef name="variable"/> can not <see langword="null"/> (Nothing in Visual Basic).
            <para>- or -</para>
            <pararef name="variableName"/> can not <see langword="null"/> (Nothing in Visual Basic).
            </exception>
        </member>
        <member name="M:WHC.OrderWater.Commons.ArgumentValidation.CheckForInvalidNullNameReference(System.String,System.String)">
            <summary>
            验证输入的参数messageName非空字符串，也非空引用
            </summary>
            <param name="name">Parameter name</param>
            <param name="messageName">Parameter value</param>
        </member>
        <member name="M:WHC.OrderWater.Commons.ArgumentValidation.CheckForZeroBytes(System.Byte[],System.String)">
            <summary>
            <para>验证参数<paramref name="bytes"/>非零长度，如果为零长度，则抛出异常<see cref="T:System.ArgumentException"/>。</para>
            </summary>
            <param name="bytes">
            The <see cref="T:System.Byte"/> array to check.
            </param>
            <param name="variableName">
            <para>The name of the variable being checked.</para>
            </param>
            <exception cref="T:System.ArgumentNullException">
            <pararef name="variable"/> can not <see langword="null"/> (Nothing in Visual Basic).
            <para>- or -</para>
            <pararef name="variableName"/> can not <see langword="null"/> (Nothing in Visual Basic).
            </exception>
            <exception cref="T:System.ArgumentException">
            <para><paramref name="bytes"/> can not be zero length.</para>
            </exception>
        </member>
        <member name="M:WHC.OrderWater.Commons.ArgumentValidation.CheckExpectedType(System.Object,System.Type)">
            <summary>
            <para>检查参数<paramref name="variable"/>是否符合指定的类型。</para>
            </summary>
            <param name="variable">
            <para>The value to check.</para>
            </param>
            <param name="type">
            <para>The <see cref="T:System.Type"/> expected type of <paramref name="variable"/>.</para>
            </param>
            <exception cref="T:System.ArgumentNullException">
            <pararef name="variable"/> can not <see langword="null"/> (Nothing in Visual Basic).
            <para>- or -</para>
            <pararef name="typeName"/> can not <see langword="null"/> (Nothing in Visual Basic).
            </exception>
            <exception cref="T:System.ArgumentException">
            <paramref name="variable"/> is not the expected <see cref="T:System.Type"/>.
            </exception>
        </member>
        <member name="M:WHC.OrderWater.Commons.ArgumentValidation.CheckEnumeration(System.Type,System.Object,System.String)">
            <summary>
            <para>Check <paramref name="variable"/> to determine if it is a valid defined enumeration for <paramref name="enumType"/>.</para>
            </summary>
            <param name="variable">
            <para>The value to check.</para>
            </param>
            <param name="enumType">
            <para>The <see cref="T:System.Type"/> expected type of <paramref name="variable"/>.</para>
            </param>
            <param name="variableName">
            <para>The name of the variable being checked.</para>
            </param>
            <exception cref="T:System.ArgumentNullException">
            <pararef name="variable"/> can not <see langword="null"/> (Nothing in Visual Basic).
            <para>- or -</para>
            <pararef name="enumType"/> can not <see langword="null"/> (Nothing in Visual Basic).
            <para>- or -</para>
            <pararef name="variableName"/> can not <see langword="null"/> (Nothing in Visual Basic).
            </exception>
            <exception cref="T:System.ArgumentException">
            <paramref name="variable"/> is not the expected <see cref="T:System.Type"/>.
            <para>- or -</para>
            <par><paramref name="enumType"/> is not an <see cref="T:System.Enum"/>. </par>
            </exception>
        </member>
        <member name="M:WHC.OrderWater.Commons.StartupHelper.RunningInstance">
            <summary>
             Process instance = StartupHelper.RunningInstance();
            if (instance == null)
            {
                //正常启动的代码
            }
            else
            {
                 StartupHelper.HandleRunningInstance(instance);
            }
            </summary>
            <returns></returns>
        </member>
        <member name="T:WHC.OrderWater.Commons.WordCombineUtil">
            <summary>
            简单的Word操作对象
            </summary>
            <example>
                        object dest="c:\\template.doc";
                        FT.Commons.Com.WordSupport.SimpleWord.Combine(new string[] { "c:\\0.doc",
                        "c:\\1.doc",
                        "c:\\2.doc",
                        "c:\\3.doc",
                        "c:\\4.doc",
                        "c:\\5.doc",
                        "c:\\6.doc",
                        "c:\\7.doc",
                        "c:\\8.doc",
                        "c:\\9.doc" }, ref dest);
                        
            </example>
        </member>
        <member name="F:WHC.OrderWater.Commons.WordCombineUtil.Miss_Object">
            <summary>
            com对象常用的参数
            </summary>
        </member>
        <member name="M:WHC.OrderWater.Commons.WordCombineUtil.Combine(System.String[],System.Object@)">
            <summary>
            合并word文档
            </summary>
            <param name="orgs">需要合并的文档路径</param>
            <param name="dest">目标文档</param>
        </member>
        <member name="T:WHC.OrderWater.Commons.SpecialDirectories">
            <summary>
            Gets an object that provides properties for accessing commonly referenced directories.
            </summary>
        </member>
        <member name="M:WHC.OrderWater.Commons.SpecialDirectories.GetDirectoryPath(System.String,System.String)">
            <summary>
            Gets the directory path.
            </summary>
            <param name="directory">The directory.</param>
            <param name="directoryNameResID">The directory name res ID.</param>
            <returns></returns>
        </member>
        <member name="M:WHC.OrderWater.Commons.SpecialDirectories.GetLongPath(System.String)">
            <summary>
            Gets the long path.
            </summary>
            <param name="fullPath">The full path.</param>
            <returns></returns>
        </member>
        <member name="M:WHC.OrderWater.Commons.SpecialDirectories.GetParentPathInternal(System.String)">
            <summary>Returns the parent path of the provided path.</summary>
            <returns>String.</returns>
            <param name="path">String. Path to be examined. Required. </param>
        </member>
        <member name="M:WHC.OrderWater.Commons.SpecialDirectories.IsRoot(System.String)">
            <summary>
            Determines whether the specified path is absolute.
            </summary>
            <param name="path">The path.</param>
            <returns>
            	<c>true</c> if the specified path is absolute; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:WHC.OrderWater.Commons.SpecialDirectories.RemoveEndingSeparator(System.String)">
            <summary>
            Removes the ending separator.
            </summary>
            <param name="path">The path.</param>
            <returns>The path.without any ending seperator</returns>
        </member>
        <member name="M:WHC.OrderWater.Commons.SpecialDirectories.GetDataPath(System.String)">
            <summary>
            Gets the data path.
            </summary>
            <param name="basePath">The base path.</param>
            <returns></returns>
        </member>
        <member name="M:WHC.OrderWater.Commons.SpecialDirectories.StringFormat(System.String,System.Object[])">
            <summary>
            Replaces the format item in a specified String with the text equivalent
            of the value of a corresponding Object instance in a specified array. 
            </summary>
            <param name="text">A String containing zero or more format items.</param>
            <param name="args">An Object array containing zero or more objects to format.</param>
            <returns>A copy of format in which the format items have been replaced by the String equivalent of the corresponding instances of Object in args.</returns>
        </member>
        <member name="P:WHC.OrderWater.Commons.SpecialDirectories.AllUsersApplicationData">
            <summary>Gets a path name pointing to the application's data in the 
            \Documents and Setting\All Users\ApplicationData directory.</summary>
            <returns>String.</returns>
            <remarks>If a path does not exist, one is created in the following format: 
            Base Path\ProductName\ProductVersion
            if Base Path Contains "Microsoft", incase of Add-In
            retuns Base Path\{0}\{1}
            Data stored in this path is part of user profile that is enabled for roaming.
            A roaming user works on more than one computer in a network. The user 
            profile for a roaming user is kept on a server on the network and is 
            loaded onto a system when the user logs on. For a user profile to be 
            considered for roaming, the operating system must support roaming 
            profiles and it must be enabled.
            A typical base path is C:\Documents and Settings\All Users\Application Data.
            </remarks>
        </member>
        <member name="P:WHC.OrderWater.Commons.SpecialDirectories.CurrentUserApplicationData">
            <summary>Gets a path name pointing to the CurrentApplicationData directory.</summary>
            <returns>String.</returns>
            <remarks>If a path does not exist, one is created in the following format: 
            Base Path\ProductName\ProductVersion
            if Base Path Contains "Microsoft", incase of Add-In
            retuns Base Path\{0}\{1}
            Data stored in this path is part of user profile that is enabled for roaming.
            A roaming user works on more than one computer in a network. The user 
            profile for a roaming user is kept on a server on the network and is 
            loaded onto a system when the user logs on. For a user profile to be 
            considered for roaming, the operating system must support roaming 
            profiles and it must be enabled.
            A typical base path is C:\Documents and Settings\username\Application Data.
            </remarks>
        </member>
        <member name="P:WHC.OrderWater.Commons.SpecialDirectories.Desktop">
            <summary>Gets a path name pointing to the Desktop directory.</summary>
            <returns>String.</returns>
        </member>
        <member name="P:WHC.OrderWater.Commons.SpecialDirectories.MyDocuments">
            <summary>Gets a path name pointing to the MyDocuments directory.</summary>
            <returns>String.</returns>
        </member>
        <member name="P:WHC.OrderWater.Commons.SpecialDirectories.MyMusic">
            <summary>Gets a path name pointing to the My Music directory.</summary>
            <returns>String.</returns>
        </member>
        <member name="P:WHC.OrderWater.Commons.SpecialDirectories.MyPictures">
            <summary>Gets a path name pointing to the My Pictures directory.</summary>
            <returns>String.</returns>
        </member>
        <member name="P:WHC.OrderWater.Commons.SpecialDirectories.ProgramFiles">
            <summary>Gets a path pointing to the Program Files directory.</summary>
            <returns>String.</returns>
        </member>
        <member name="P:WHC.OrderWater.Commons.SpecialDirectories.Programs">
            <summary>Gets a path name pointing to the Programs directory.</summary>
            <returns>String.</returns>
        </member>
        <member name="P:WHC.OrderWater.Commons.SpecialDirectories.Temp">
            <summary>Gets a path name pointing to the Temp directory.</summary>
            <returns>String.</returns>
        </member>
        <member name="T:WHC.OrderWater.Commons.NativeMethods">
            <summary>
            Contains InterOp method calls used by the application.
            </summary>
        </member>
        <member name="M:WHC.OrderWater.Commons.NativeMethods.#ctor">
            private constructor, not intended for instantiation
        </member>
        <member name="M:WHC.OrderWater.Commons.NativeMethods.BringToFront(System.IntPtr)">
            <summary>
            把指定的窗口提到最前面
            </summary>
            <param name="hWnd"></param>
        </member>
        <member name="M:WHC.OrderWater.Commons.NativeMethods.GetWindow(System.IntPtr,WHC.OrderWater.Commons.NativeMethods.GetWindowConstants)">
            <summary>
            The GetNextWindow function retrieves a handle to the next or previous window in the Z-Order.
            The next window is below the specified window; the previous window is above.
            If the specified window is a topmost window, the function retrieves a handle to the next (or previous) topmost window.
            If the specified window is a top-level window, the function retrieves a handle to the next (or previous) top-level window.
            If the specified window is a child window, the function searches for a handle to the next (or previous) child window.
            </summary>
        </member>
        <member name="M:WHC.OrderWater.Commons.NativeMethods.GetTaskBarInfo(WHC.OrderWater.Commons.NativeMethods.TaskBarEdge@,System.Int32@,System.Boolean@)">
            <summary>
            Method returns information about the Window's TaskBar.
            </summary>
            <param name="taskBarEdge">Location of the TaskBar(Top,Bottom,Left,Right).</param>
            <param name="height">Height of the TaskBar.</param>
            <param name="autoHide">AutoHide property of the TaskBar.</param>
        </member>
        <member name="T:WHC.OrderWater.Commons.NativeMethods.WindowShowStyle">
            <summary>Enumeration of the different ways of showing a window using
            ShowWindow</summary>
        </member>
        <member name="F:WHC.OrderWater.Commons.NativeMethods.WindowShowStyle.Hide">
            <summary>Hides the window and activates another window.</summary>
            <remarks>See SW_HIDE</remarks>
        </member>
        <member name="F:WHC.OrderWater.Commons.NativeMethods.WindowShowStyle.ShowNormal">
            <summary>Activates and displays a window. If the window is minimized
            or maximized, the system restores it to its original size and
            position. An application should specify this flag when displaying
            the window for the first time.</summary>
            <remarks>See SW_SHOWNORMAL</remarks>
        </member>
        <member name="F:WHC.OrderWater.Commons.NativeMethods.WindowShowStyle.ShowMinimized">
            <summary>Activates the window and displays it as a minimized window.</summary>
            <remarks>See SW_SHOWMINIMIZED</remarks>
        </member>
        <member name="F:WHC.OrderWater.Commons.NativeMethods.WindowShowStyle.ShowMaximized">
            <summary>Activates the window and displays it as a maximized window.</summary>
            <remarks>See SW_SHOWMAXIMIZED</remarks>
        </member>
        <member name="F:WHC.OrderWater.Commons.NativeMethods.WindowShowStyle.Maximize">
            <summary>Maximizes the specified window.</summary>
            <remarks>See SW_MAXIMIZE</remarks>
        </member>
        <member name="F:WHC.OrderWater.Commons.NativeMethods.WindowShowStyle.ShowNormalNoActivate">
            <summary>Displays a window in its most recent size and position.
            This value is similar to "ShowNormal", except the window is not
            actived.</summary>
            <remarks>See SW_SHOWNOACTIVATE</remarks>
        </member>
        <member name="F:WHC.OrderWater.Commons.NativeMethods.WindowShowStyle.Show">
            <summary>Activates the window and displays it in its current size
            and position.</summary>
            <remarks>See SW_SHOW</remarks>
        </member>
        <member name="F:WHC.OrderWater.Commons.NativeMethods.WindowShowStyle.Minimize">
            <summary>Minimizes the specified window and activates the next
            top-level window in the Z order.</summary>
            <remarks>See SW_MINIMIZE</remarks>
        </member>
        <member name="F:WHC.OrderWater.Commons.NativeMethods.WindowShowStyle.ShowMinNoActivate">
            <summary>Displays the window as a minimized window. This value is
            similar to "ShowMinimized", except the window is not activated.</summary>
            <remarks>See SW_SHOWMINNOACTIVE</remarks>
        </member>
        <member name="F:WHC.OrderWater.Commons.NativeMethods.WindowShowStyle.ShowNoActivate">
            <summary>Displays the window in its current size and position. This
            value is similar to "Show", except the window is not activated.</summary>
            <remarks>See SW_SHOWNA</remarks>
        </member>
        <member name="F:WHC.OrderWater.Commons.NativeMethods.WindowShowStyle.Restore">
            <summary>Activates and displays the window. If the window is
            minimized or maximized, the system restores it to its original size
            and position. An application should specify this flag when restoring
            a minimized window.</summary>
            <remarks>See SW_RESTORE</remarks>
        </member>
        <member name="F:WHC.OrderWater.Commons.NativeMethods.WindowShowStyle.ShowDefault">
            <summary>Sets the show state based on the SW_ value specified in the
            STARTUPINFO structure passed to the CreateProcess function by the
            program that started the application.</summary>
            <remarks>See SW_SHOWDEFAULT</remarks>
        </member>
        <member name="F:WHC.OrderWater.Commons.NativeMethods.WindowShowStyle.ForceMinimized">
            <summary>Windows 2000/XP: Minimizes a window, even if the thread
            that owns the window is hung. This flag should only be used when
            minimizing windows from a different thread.</summary>
            <remarks>See SW_FORCEMINIMIZE</remarks>
        </member>
        <member name="T:WHC.OrderWater.Commons.NativeMethods.WM">
            <summary>
            Windows Messages
            Defined in winuser.h from Windows SDK v6.1
            Documentation pulled from MSDN.
            </summary>
        </member>
        <member name="F:WHC.OrderWater.Commons.NativeMethods.WM.NULL">
            <summary>
            The WM_NULL message performs no operation. An application sends the WM_NULL message if it wants to post a message that the recipient window will ignore.
            </summary>
        </member>
        <member name="F:WHC.OrderWater.Commons.NativeMethods.WM.CREATE">
            <summary>
            The WM_CREATE message is sent when an application requests that a window be created by calling the CreateWindowEx or CreateWindow function. (The message is sent before the function returns.) The window procedure of the new window receives this message after the window is created, but before the window becomes visible.
            </summary>
        </member>
        <member name="F:WHC.OrderWater.Commons.NativeMethods.WM.DESTROY">
            <summary>
            The WM_DESTROY message is sent when a window is being destroyed. It is sent to the window procedure of the window being destroyed after the window is removed from the screen.
            This message is sent first to the window being destroyed and then to the child windows (if any) as they are destroyed. During the processing of the message, it can be assumed that all child windows still exist.
            /// </summary>
        </member>
        <member name="F:WHC.OrderWater.Commons.NativeMethods.WM.MOVE">
            <summary>
            The WM_MOVE message is sent after a window has been moved.
            </summary>
        </member>
        <member name="F:WHC.OrderWater.Commons.NativeMethods.WM.SIZE">
            <summary>
            The WM_SIZE message is sent to a window after its size has changed.
            </summary>
        </member>
        <member name="F:WHC.OrderWater.Commons.NativeMethods.WM.ACTIVATE">
            <summary>
            The WM_ACTIVATE message is sent to both the window being activated and the window being deactivated. If the windows use the same input queue, the message is sent synchronously, first to the window procedure of the top-level window being deactivated, then to the window procedure of the top-level window being activated. If the windows use different input queues, the message is sent asynchronously, so the window is activated immediately.
            </summary>
        </member>
        <member name="F:WHC.OrderWater.Commons.NativeMethods.WM.SETFOCUS">
            <summary>
            The WM_SETFOCUS message is sent to a window after it has gained the keyboard focus.
            </summary>
        </member>
        <member name="F:WHC.OrderWater.Commons.NativeMethods.WM.KILLFOCUS">
            <summary>
            The WM_KILLFOCUS message is sent to a window immediately before it loses the keyboard focus.
            </summary>
        </member>
        <member name="F:WHC.OrderWater.Commons.NativeMethods.WM.ENABLE">
            <summary>
            The WM_ENABLE message is sent when an application changes the enabled state of a window. It is sent to the window whose enabled state is changing. This message is sent before the EnableWindow function returns, but after the enabled state (WS_DISABLED style bit) of the window has changed.
            </summary>
        </member>
        <member name="F:WHC.OrderWater.Commons.NativeMethods.WM.SETREDRAW">
            <summary>
            An application sends the WM_SETREDRAW message to a window to allow changes in that window to be redrawn or to prevent changes in that window from being redrawn.
            </summary>
        </member>
        <member name="F:WHC.OrderWater.Commons.NativeMethods.WM.SETTEXT">
            <summary>
            An application sends a WM_SETTEXT message to set the text of a window.
            </summary>
        </member>
        <member name="F:WHC.OrderWater.Commons.NativeMethods.WM.GETTEXT">
            <summary>
            An application sends a WM_GETTEXT message to copy the text that corresponds to a window into a buffer provided by the caller.
            </summary>
        </member>
        <member name="F:WHC.OrderWater.Commons.NativeMethods.WM.GETTEXTLENGTH">
            <summary>
            An application sends a WM_GETTEXTLENGTH message to determine the length, in characters, of the text associated with a window.
            </summary>
        </member>
        <member name="F:WHC.OrderWater.Commons.NativeMethods.WM.PAINT">
            <summary>
            The WM_PAINT message is sent when the system or another application makes a request to paint a portion of an application's window. The message is sent when the UpdateWindow or RedrawWindow function is called, or by the DispatchMessage function when the application obtains a WM_PAINT message by using the GetMessage or PeekMessage function.
            </summary>
        </member>
        <member name="F:WHC.OrderWater.Commons.NativeMethods.WM.CLOSE">
            <summary>
            The WM_CLOSE message is sent as a signal that a window or an application should terminate.
            </summary>
        </member>
        <member name="F:WHC.OrderWater.Commons.NativeMethods.WM.QUERYENDSESSION">
            <summary>
            The WM_QUERYENDSESSION message is sent when the user chooses to end the session or when an application calls one of the system shutdown functions. If any application returns zero, the session is not ended. The system stops sending WM_QUERYENDSESSION messages as soon as one application returns zero.
            After processing this message, the system sends the WM_ENDSESSION message with the wParam parameter set to the results of the WM_QUERYENDSESSION message.
            </summary>
        </member>
        <member name="F:WHC.OrderWater.Commons.NativeMethods.WM.QUERYOPEN">
            <summary>
            The WM_QUERYOPEN message is sent to an icon when the user requests that the window be restored to its previous size and position.
            </summary>
        </member>
        <member name="F:WHC.OrderWater.Commons.NativeMethods.WM.ENDSESSION">
            <summary>
            The WM_ENDSESSION message is sent to an application after the system processes the results of the WM_QUERYENDSESSION message. The WM_ENDSESSION message informs the application whether the session is ending.
            </summary>
        </member>
        <member name="F:WHC.OrderWater.Commons.NativeMethods.WM.QUIT">
            <summary>
            The WM_QUIT message indicates a request to terminate an application and is generated when the application calls the PostQuitMessage function. It causes the GetMessage function to return zero.
            </summary>
        </member>
        <member name="F:WHC.OrderWater.Commons.NativeMethods.WM.ERASEBKGND">
            <summary>
            The WM_ERASEBKGND message is sent when the window background must be erased (for example, when a window is resized). The message is sent to prepare an invalidated portion of a window for painting.
            </summary>
        </member>
        <member name="F:WHC.OrderWater.Commons.NativeMethods.WM.SYSCOLORCHANGE">
            <summary>
            This message is sent to all top-level windows when a change is made to a system color setting.
            </summary>
        </member>
        <member name="F:WHC.OrderWater.Commons.NativeMethods.WM.SHOWWINDOW">
            <summary>
            The WM_SHOWWINDOW message is sent to a window when the window is about to be hidden or shown.
            </summary>
        </member>
        <member name="F:WHC.OrderWater.Commons.NativeMethods.WM.WININICHANGE">
            <summary>
            An application sends the WM_WININICHANGE message to all top-level windows after making a change to the WIN.INI file. The SystemParametersInfo function sends this message after an application uses the function to change a setting in WIN.INI.
            Note  The WM_WININICHANGE message is provided only for compatibility with earlier versions of the system. Applications should use the WM_SETTINGCHANGE message.
            </summary>
        </member>
        <member name="F:WHC.OrderWater.Commons.NativeMethods.WM.SETTINGCHANGE">
            <summary>
            An application sends the WM_WININICHANGE message to all top-level windows after making a change to the WIN.INI file. The SystemParametersInfo function sends this message after an application uses the function to change a setting in WIN.INI.
            Note  The WM_WININICHANGE message is provided only for compatibility with earlier versions of the system. Applications should use the WM_SETTINGCHANGE message.
            </summary>
        </member>
        <member name="F:WHC.OrderWater.Commons.NativeMethods.WM.DEVMODECHANGE">
            <summary>
            The WM_DEVMODECHANGE message is sent to all top-level windows whenever the user changes device-mode settings.
            </summary>
        </member>
        <member name="F:WHC.OrderWater.Commons.NativeMethods.WM.ACTIVATEAPP">
            <summary>
            The WM_ACTIVATEAPP message is sent when a window belonging to a different application than the active window is about to be activated. The message is sent to the application whose window is being activated and to the application whose window is being deactivated.
            </summary>
        </member>
        <member name="F:WHC.OrderWater.Commons.NativeMethods.WM.FONTCHANGE">
            <summary>
            An application sends the WM_FONTCHANGE message to all top-level windows in the system after changing the pool of font resources.
            </summary>
        </member>
        <member name="F:WHC.OrderWater.Commons.NativeMethods.WM.TIMECHANGE">
            <summary>
            A message that is sent whenever there is a change in the system time.
            </summary>
        </member>
        <member name="F:WHC.OrderWater.Commons.NativeMethods.WM.CANCELMODE">
            <summary>
            The WM_CANCELMODE message is sent to cancel certain modes, such as mouse capture. For example, the system sends this message to the active window when a dialog box or message box is displayed. Certain functions also send this message explicitly to the specified window regardless of whether it is the active window. For example, the EnableWindow function sends this message when disabling the specified window.
            </summary>
        </member>
        <member name="F:WHC.OrderWater.Commons.NativeMethods.WM.SETCURSOR">
            <summary>
            The WM_SETCURSOR message is sent to a window if the mouse causes the cursor to move within a window and mouse input is not captured.
            </summary>
        </member>
        <member name="F:WHC.OrderWater.Commons.NativeMethods.WM.MOUSEACTIVATE">
            <summary>
            The WM_MOUSEACTIVATE message is sent when the cursor is in an inactive window and the user presses a mouse button. The parent window receives this message only if the child window passes it to the DefWindowProc function.
            </summary>
        </member>
        <member name="F:WHC.OrderWater.Commons.NativeMethods.WM.CHILDACTIVATE">
            <summary>
            The WM_CHILDACTIVATE message is sent to a child window when the user clicks the window's title bar or when the window is activated, moved, or sized.
            </summary>
        </member>
        <member name="F:WHC.OrderWater.Commons.NativeMethods.WM.QUEUESYNC">
            <summary>
            The WM_QUEUESYNC message is sent by a computer-based training (CBT) application to separate user-input messages from other messages sent through the WH_JOURNALPLAYBACK Hook procedure.
            </summary>
        </member>
        <member name="F:WHC.OrderWater.Commons.NativeMethods.WM.GETMINMAXINFO">
            <summary>
            The WM_GETMINMAXINFO message is sent to a window when the size or position of the window is about to change. An application can use this message to override the window's default maximized size and position, or its default minimum or maximum tracking size.
            </summary>
        </member>
        <member name="F:WHC.OrderWater.Commons.NativeMethods.WM.PAINTICON">
            <summary>
            Windows NT 3.51 and earlier: The WM_PAINTICON message is sent to a minimized window when the icon is to be painted. This message is not sent by newer versions of Microsoft Windows, except in unusual circumstances explained in the Remarks.
            </summary>
        </member>
        <member name="F:WHC.OrderWater.Commons.NativeMethods.WM.ICONERASEBKGND">
            <summary>
            Windows NT 3.51 and earlier: The WM_ICONERASEBKGND message is sent to a minimized window when the background of the icon must be filled before painting the icon. A window receives this message only if a class icon is defined for the window; otherwise, WM_ERASEBKGND is sent. This message is not sent by newer versions of Windows.
            </summary>
        </member>
        <member name="F:WHC.OrderWater.Commons.NativeMethods.WM.NEXTDLGCTL">
            <summary>
            The WM_NEXTDLGCTL message is sent to a dialog box procedure to set the keyboard focus to a different control in the dialog box.
            </summary>
        </member>
        <member name="F:WHC.OrderWater.Commons.NativeMethods.WM.SPOOLERSTATUS">
            <summary>
            The WM_SPOOLERSTATUS message is sent from Print Manager whenever a job is added to or removed from the Print Manager queue.
            </summary>
        </member>
        <member name="F:WHC.OrderWater.Commons.NativeMethods.WM.DRAWITEM">
            <summary>
            The WM_DRAWITEM message is sent to the parent window of an owner-drawn button, combo box, list box, or menu when a visual aspect of the button, combo box, list box, or menu has changed.
            </summary>
        </member>
        <member name="F:WHC.OrderWater.Commons.NativeMethods.WM.MEASUREITEM">
            <summary>
            The WM_MEASUREITEM message is sent to the owner window of a combo box, list box, list view control, or menu item when the control or menu is created.
            </summary>
        </member>
        <member name="F:WHC.OrderWater.Commons.NativeMethods.WM.DELETEITEM">
            <summary>
            Sent to the owner of a list box or combo box when the list box or combo box is destroyed or when items are removed by the LB_DELETESTRING, LB_RESETCONTENT, CB_DELETESTRING, or CB_RESETCONTENT message. The system sends a WM_DELETEITEM message for each deleted item. The system sends the WM_DELETEITEM message for any deleted list box or combo box item with nonzero item data.
            </summary>
        </member>
        <member name="F:WHC.OrderWater.Commons.NativeMethods.WM.VKEYTOITEM">
            <summary>
            Sent by a list box with the LBS_WANTKEYBOARDINPUT style to its owner in response to a WM_KEYDOWN message.
            </summary>
        </member>
        <member name="F:WHC.OrderWater.Commons.NativeMethods.WM.CHARTOITEM">
            <summary>
            Sent by a list box with the LBS_WANTKEYBOARDINPUT style to its owner in response to a WM_CHAR message.
            </summary>
        </member>
        <member name="F:WHC.OrderWater.Commons.NativeMethods.WM.SETFONT">
            <summary>
            An application sends a WM_SETFONT message to specify the font that a control is to use when drawing text.
            </summary>
        </member>
        <member name="F:WHC.OrderWater.Commons.NativeMethods.WM.GETFONT">
            <summary>
            An application sends a WM_GETFONT message to a control to retrieve the font with which the control is currently drawing its text.
            </summary>
        </member>
        <member name="F:WHC.OrderWater.Commons.NativeMethods.WM.SETHOTKEY">
            <summary>
            An application sends a WM_SETHOTKEY message to a window to associate a hot key with the window. When the user presses the hot key, the system activates the window.
            </summary>
        </member>
        <member name="F:WHC.OrderWater.Commons.NativeMethods.WM.GETHOTKEY">
            <summary>
            An application sends a WM_GETHOTKEY message to determine the hot key associated with a window.
            </summary>
        </member>
        <member name="F:WHC.OrderWater.Commons.NativeMethods.WM.QUERYDRAGICON">
            <summary>
            The WM_QUERYDRAGICON message is sent to a minimized (iconic) window. The window is about to be dragged by the user but does not have an icon defined for its class. An application can return a handle to an icon or cursor. The system displays this cursor or icon while the user drags the icon.
            </summary>
        </member>
        <member name="F:WHC.OrderWater.Commons.NativeMethods.WM.COMPAREITEM">
            <summary>
            The system sends the WM_COMPAREITEM message to determine the relative position of a new item in the sorted list of an owner-drawn combo box or list box. Whenever the application adds a new item, the system sends this message to the owner of a combo box or list box created with the CBS_SORT or LBS_SORT style.
            </summary>
        </member>
        <member name="F:WHC.OrderWater.Commons.NativeMethods.WM.GETOBJECT">
            <summary>
            Active Accessibility sends the WM_GETOBJECT message to obtain information about an accessible object contained in a server application.
            Applications never send this message directly. It is sent only by Active Accessibility in response to calls to AccessibleObjectFromPoint, AccessibleObjectFromEvent, or AccessibleObjectFromWindow. However, server applications handle this message.
            </summary>
        </member>
        <member name="F:WHC.OrderWater.Commons.NativeMethods.WM.COMPACTING">
            <summary>
            The WM_COMPACTING message is sent to all top-level windows when the system detects more than 12.5 percent of system time over a 30- to 60-second interval is being spent compacting memory. This indicates that system memory is low.
            </summary>
        </member>
        <member name="F:WHC.OrderWater.Commons.NativeMethods.WM.COMMNOTIFY">
            <summary>
            WM_COMMNOTIFY is Obsolete for Win32-Based Applications
            </summary>
        </member>
        <member name="F:WHC.OrderWater.Commons.NativeMethods.WM.WINDOWPOSCHANGING">
            <summary>
            The WM_WINDOWPOSCHANGING message is sent to a window whose size, position, or place in the Z order is about to change as a result of a call to the SetWindowPos function or another window-management function.
            </summary>
        </member>
        <member name="F:WHC.OrderWater.Commons.NativeMethods.WM.WINDOWPOSCHANGED">
            <summary>
            The WM_WINDOWPOSCHANGED message is sent to a window whose size, position, or place in the Z order has changed as a result of a call to the SetWindowPos function or another window-management function.
            </summary>
        </member>
        <member name="F:WHC.OrderWater.Commons.NativeMethods.WM.POWER">
            <summary>
            Notifies applications that the system, typically a battery-powered personal computer, is about to enter a suspended mode.
            Use: POWERBROADCAST
            </summary>
        </member>
        <member name="F:WHC.OrderWater.Commons.NativeMethods.WM.COPYDATA">
            <summary>
            An application sends the WM_COPYDATA message to pass data to another application.
            </summary>
        </member>
        <member name="F:WHC.OrderWater.Commons.NativeMethods.WM.CANCELJOURNAL">
            <summary>
            The WM_CANCELJOURNAL message is posted to an application when a user cancels the application's journaling activities. The message is posted with a NULL window handle.
            </summary>
        </member>
        <member name="F:WHC.OrderWater.Commons.NativeMethods.WM.NOTIFY">
            <summary>
            Sent by a common control to its parent window when an event has occurred or the control requires some information.
            </summary>
        </member>
        <member name="F:WHC.OrderWater.Commons.NativeMethods.WM.INPUTLANGCHANGEREQUEST">
            <summary>
            The WM_INPUTLANGCHANGEREQUEST message is posted to the window with the focus when the user chooses a new input language, either with the hotkey (specified in the Keyboard control panel application) or from the indicator on the system taskbar. An application can accept the change by passing the message to the DefWindowProc function or reject the change (and prevent it from taking place) by returning immediately.
            </summary>
        </member>
        <member name="F:WHC.OrderWater.Commons.NativeMethods.WM.INPUTLANGCHANGE">
            <summary>
            The WM_INPUTLANGCHANGE message is sent to the topmost affected window after an application's input language has been changed. You should make any application-specific settings and pass the message to the DefWindowProc function, which passes the message to all first-level child windows. These child windows can pass the message to DefWindowProc to have it pass the message to their child windows, and so on.
            </summary>
        </member>
        <member name="F:WHC.OrderWater.Commons.NativeMethods.WM.TCARD">
            <summary>
            Sent to an application that has initiated a training card with Microsoft Windows Help. The message informs the application when the user clicks an authorable button. An application initiates a training card by specifying the HELP_TCARD command in a call to the WinHelp function.
            </summary>
        </member>
        <member name="F:WHC.OrderWater.Commons.NativeMethods.WM.HELP">
            <summary>
            Indicates that the user pressed the F1 key. If a menu is active when F1 is pressed, WM_HELP is sent to the window associated with the menu; otherwise, WM_HELP is sent to the window that has the keyboard focus. If no window has the keyboard focus, WM_HELP is sent to the currently active window.
            </summary>
        </member>
        <member name="F:WHC.OrderWater.Commons.NativeMethods.WM.USERCHANGED">
            <summary>
            The WM_USERCHANGED message is sent to all windows after the user has logged on or off. When the user logs on or off, the system updates the user-specific settings. The system sends this message immediately after updating the settings.
            </summary>
        </member>
        <member name="F:WHC.OrderWater.Commons.NativeMethods.WM.NOTIFYFORMAT">
            <summary>
            Determines if a window accepts ANSI or Unicode structures in the WM_NOTIFY notification message. WM_NOTIFYFORMAT messages are sent from a common control to its parent window and from the parent window to the common control.
            </summary>
        </member>
        <member name="F:WHC.OrderWater.Commons.NativeMethods.WM.CONTEXTMENU">
            <summary>
            The WM_CONTEXTMENU message notifies a window that the user clicked the right mouse button (right-clicked) in the window.
            </summary>
        </member>
        <member name="F:WHC.OrderWater.Commons.NativeMethods.WM.STYLECHANGING">
            <summary>
            The WM_STYLECHANGING message is sent to a window when the SetWindowLong function is about to change one or more of the window's styles.
            </summary>
        </member>
        <member name="F:WHC.OrderWater.Commons.NativeMethods.WM.STYLECHANGED">
            <summary>
            The WM_STYLECHANGED message is sent to a window after the SetWindowLong function has changed one or more of the window's styles
            </summary>
        </member>
        <member name="F:WHC.OrderWater.Commons.NativeMethods.WM.DISPLAYCHANGE">
            <summary>
            The WM_DISPLAYCHANGE message is sent to all windows when the display resolution has changed.
            </summary>
        </member>
        <member name="F:WHC.OrderWater.Commons.NativeMethods.WM.GETICON">
            <summary>
            The WM_GETICON message is sent to a window to retrieve a handle to the large or small icon associated with a window. The system displays the large icon in the ALT+TAB dialog, and the small icon in the window caption.
            </summary>
        </member>
        <member name="F:WHC.OrderWater.Commons.NativeMethods.WM.SETICON">
            <summary>
            An application sends the WM_SETICON message to associate a new large or small icon with a window. The system displays the large icon in the ALT+TAB dialog box, and the small icon in the window caption.
            </summary>
        </member>
        <member name="F:WHC.OrderWater.Commons.NativeMethods.WM.NCCREATE">
            <summary>
            The WM_NCCREATE message is sent prior to the WM_CREATE message when a window is first created.
            </summary>
        </member>
        <member name="F:WHC.OrderWater.Commons.NativeMethods.WM.NCDESTROY">
            <summary>
            The WM_NCDESTROY message informs a window that its nonclient area is being destroyed. The DestroyWindow function sends the WM_NCDESTROY message to the window following the WM_DESTROY message. WM_DESTROY is used to free the allocated memory object associated with the window.
            The WM_NCDESTROY message is sent after the child windows have been destroyed. In contrast, WM_DESTROY is sent before the child windows are destroyed.
            </summary>
        </member>
        <member name="F:WHC.OrderWater.Commons.NativeMethods.WM.NCCALCSIZE">
            <summary>
            The WM_NCCALCSIZE message is sent when the size and position of a window's client area must be calculated. By processing this message, an application can control the content of the window's client area when the size or position of the window changes.
            </summary>
        </member>
        <member name="F:WHC.OrderWater.Commons.NativeMethods.WM.NCHITTEST">
            <summary>
            The WM_NCHITTEST message is sent to a window when the cursor moves, or when a mouse button is pressed or released. If the mouse is not captured, the message is sent to the window beneath the cursor. Otherwise, the message is sent to the window that has captured the mouse.
            </summary>
        </member>
        <member name="F:WHC.OrderWater.Commons.NativeMethods.WM.NCPAINT">
            <summary>
            The WM_NCPAINT message is sent to a window when its frame must be painted.
            </summary>
        </member>
        <member name="F:WHC.OrderWater.Commons.NativeMethods.WM.NCACTIVATE">
            <summary>
            The WM_NCACTIVATE message is sent to a window when its nonclient area needs to be changed to indicate an active or inactive state.
            </summary>
        </member>
        <member name="F:WHC.OrderWater.Commons.NativeMethods.WM.GETDLGCODE">
            <summary>
            The WM_GETDLGCODE message is sent to the window procedure associated with a control. By default, the system handles all keyboard input to the control; the system interprets certain types of keyboard input as dialog box navigation keys. To override this default behavior, the control can respond to the WM_GETDLGCODE message to indicate the types of input it wants to process itself.
            </summary>
        </member>
        <member name="F:WHC.OrderWater.Commons.NativeMethods.WM.SYNCPAINT">
            <summary>
            The WM_SYNCPAINT message is used to synchronize painting while avoiding linking independent GUI threads.
            </summary>
        </member>
        <member name="F:WHC.OrderWater.Commons.NativeMethods.WM.NCMOUSEMOVE">
            <summary>
            The WM_NCMOUSEMOVE message is posted to a window when the cursor is moved within the nonclient area of the window. This message is posted to the window that contains the cursor. If a window has captured the mouse, this message is not posted.
            </summary>
        </member>
        <member name="F:WHC.OrderWater.Commons.NativeMethods.WM.NCLBUTTONDOWN">
            <summary>
            The WM_NCLBUTTONDOWN message is posted when the user presses the left mouse button while the cursor is within the nonclient area of a window. This message is posted to the window that contains the cursor. If a window has captured the mouse, this message is not posted.
            </summary>
        </member>
        <member name="F:WHC.OrderWater.Commons.NativeMethods.WM.NCLBUTTONUP">
            <summary>
            The WM_NCLBUTTONUP message is posted when the user releases the left mouse button while the cursor is within the nonclient area of a window. This message is posted to the window that contains the cursor. If a window has captured the mouse, this message is not posted.
            </summary>
        </member>
        <member name="F:WHC.OrderWater.Commons.NativeMethods.WM.NCLBUTTONDBLCLK">
            <summary>
            The WM_NCLBUTTONDBLCLK message is posted when the user double-clicks the left mouse button while the cursor is within the nonclient area of a window. This message is posted to the window that contains the cursor. If a window has captured the mouse, this message is not posted.
            </summary>
        </member>
        <member name="F:WHC.OrderWater.Commons.NativeMethods.WM.NCRBUTTONDOWN">
            <summary>
            The WM_NCRBUTTONDOWN message is posted when the user presses the right mouse button while the cursor is within the nonclient area of a window. This message is posted to the window that contains the cursor. If a window has captured the mouse, this message is not posted.
            </summary>
        </member>
        <member name="F:WHC.OrderWater.Commons.NativeMethods.WM.NCRBUTTONUP">
            <summary>
            The WM_NCRBUTTONUP message is posted when the user releases the right mouse button while the cursor is within the nonclient area of a window. This message is posted to the window that contains the cursor. If a window has captured the mouse, this message is not posted.
            </summary>
        </member>
        <member name="F:WHC.OrderWater.Commons.NativeMethods.WM.NCRBUTTONDBLCLK">
            <summary>
            The WM_NCRBUTTONDBLCLK message is posted when the user double-clicks the right mouse button while the cursor is within the nonclient area of a window. This message is posted to the window that contains the cursor. If a window has captured the mouse, this message is not posted.
            </summary>
        </member>
        <member name="F:WHC.OrderWater.Commons.NativeMethods.WM.NCMBUTTONDOWN">
            <summary>
            The WM_NCMBUTTONDOWN message is posted when the user presses the middle mouse button while the cursor is within the nonclient area of a window. This message is posted to the window that contains the cursor. If a window has captured the mouse, this message is not posted.
            </summary>
        </member>
        <member name="F:WHC.OrderWater.Commons.NativeMethods.WM.NCMBUTTONUP">
            <summary>
            The WM_NCMBUTTONUP message is posted when the user releases the middle mouse button while the cursor is within the nonclient area of a window. This message is posted to the window that contains the cursor. If a window has captured the mouse, this message is not posted.
            </summary>
        </member>
        <member name="F:WHC.OrderWater.Commons.NativeMethods.WM.NCMBUTTONDBLCLK">
            <summary>
            The WM_NCMBUTTONDBLCLK message is posted when the user double-clicks the middle mouse button while the cursor is within the nonclient area of a window. This message is posted to the window that contains the cursor. If a window has captured the mouse, this message is not posted.
            </summary>
        </member>
        <member name="F:WHC.OrderWater.Commons.NativeMethods.WM.NCXBUTTONDOWN">
            <summary>
            The WM_NCXBUTTONDOWN message is posted when the user presses the first or second X button while the cursor is in the nonclient area of a window. This message is posted to the window that contains the cursor. If a window has captured the mouse, this message is not posted.
            </summary>
        </member>
        <member name="F:WHC.OrderWater.Commons.NativeMethods.WM.NCXBUTTONUP">
            <summary>
            The WM_NCXBUTTONUP message is posted when the user releases the first or second X button while the cursor is in the nonclient area of a window. This message is posted to the window that contains the cursor. If a window has captured the mouse, this message is not posted.
            </summary>
        </member>
        <member name="F:WHC.OrderWater.Commons.NativeMethods.WM.NCXBUTTONDBLCLK">
            <summary>
            The WM_NCXBUTTONDBLCLK message is posted when the user double-clicks the first or second X button while the cursor is in the nonclient area of a window. This message is posted to the window that contains the cursor. If a window has captured the mouse, this message is not posted.
            </summary>
        </member>
        <member name="F:WHC.OrderWater.Commons.NativeMethods.WM.INPUT_DEVICE_CHANGE">
            <summary>
            The WM_INPUT_DEVICE_CHANGE message is sent to the window that registered to receive raw input. A window receives this message through its WindowProc function.
            </summary>
        </member>
        <member name="F:WHC.OrderWater.Commons.NativeMethods.WM.INPUT">
            <summary>
            The WM_INPUT message is sent to the window that is getting raw input.
            </summary>
        </member>
        <member name="F:WHC.OrderWater.Commons.NativeMethods.WM.KEYFIRST">
            <summary>
            This message filters for keyboard messages.
            </summary>
        </member>
        <member name="F:WHC.OrderWater.Commons.NativeMethods.WM.KEYDOWN">
            <summary>
            The WM_KEYDOWN message is posted to the window with the keyboard focus when a nonsystem key is pressed. A nonsystem key is a key that is pressed when the ALT key is not pressed.
            </summary>
        </member>
        <member name="F:WHC.OrderWater.Commons.NativeMethods.WM.KEYUP">
            <summary>
            The WM_KEYUP message is posted to the window with the keyboard focus when a nonsystem key is released. A nonsystem key is a key that is pressed when the ALT key is not pressed, or a keyboard key that is pressed when a window has the keyboard focus.
            </summary>
        </member>
        <member name="F:WHC.OrderWater.Commons.NativeMethods.WM.CHAR">
            <summary>
            The WM_CHAR message is posted to the window with the keyboard focus when a WM_KEYDOWN message is translated by the TranslateMessage function. The WM_CHAR message contains the character code of the key that was pressed.
            </summary>
        </member>
        <member name="F:WHC.OrderWater.Commons.NativeMethods.WM.DEADCHAR">
            <summary>
            The WM_DEADCHAR message is posted to the window with the keyboard focus when a WM_KEYUP message is translated by the TranslateMessage function. WM_DEADCHAR specifies a character code generated by a dead key. A dead key is a key that generates a character, such as the umlaut (double-dot), that is combined with another character to form a composite character. For example, the umlaut-O character (Ö) is generated by typing the dead key for the umlaut character, and then typing the O key.
            </summary>
        </member>
        <member name="F:WHC.OrderWater.Commons.NativeMethods.WM.SYSKEYDOWN">
            <summary>
            The WM_SYSKEYDOWN message is posted to the window with the keyboard focus when the user presses the F10 key (which activates the menu bar) or holds down the ALT key and then presses another key. It also occurs when no window currently has the keyboard focus; in this case, the WM_SYSKEYDOWN message is sent to the active window. The window that receives the message can distinguish between these two contexts by checking the context code in the lParam parameter.
            </summary>
        </member>
        <member name="F:WHC.OrderWater.Commons.NativeMethods.WM.SYSKEYUP">
            <summary>
            The WM_SYSKEYUP message is posted to the window with the keyboard focus when the user releases a key that was pressed while the ALT key was held down. It also occurs when no window currently has the keyboard focus; in this case, the WM_SYSKEYUP message is sent to the active window. The window that receives the message can distinguish between these two contexts by checking the context code in the lParam parameter.
            </summary>
        </member>
        <member name="F:WHC.OrderWater.Commons.NativeMethods.WM.SYSCHAR">
            <summary>
            The WM_SYSCHAR message is posted to the window with the keyboard focus when a WM_SYSKEYDOWN message is translated by the TranslateMessage function. It specifies the character code of a system character key — that is, a character key that is pressed while the ALT key is down.
            </summary>
        </member>
        <member name="F:WHC.OrderWater.Commons.NativeMethods.WM.SYSDEADCHAR">
            <summary>
            The WM_SYSDEADCHAR message is sent to the window with the keyboard focus when a WM_SYSKEYDOWN message is translated by the TranslateMessage function. WM_SYSDEADCHAR specifies the character code of a system dead key — that is, a dead key that is pressed while holding down the ALT key.
            </summary>
        </member>
        <member name="F:WHC.OrderWater.Commons.NativeMethods.WM.UNICHAR">
            <summary>
            The WM_UNICHAR message is posted to the window with the keyboard focus when a WM_KEYDOWN message is translated by the TranslateMessage function. The WM_UNICHAR message contains the character code of the key that was pressed.
            The WM_UNICHAR message is equivalent to WM_CHAR, but it uses Unicode Transformation Format (UTF)-32, whereas WM_CHAR uses UTF-16. It is designed to send or post Unicode characters to ANSI windows and it can can handle Unicode Supplementary Plane characters.
            </summary>
        </member>
        <member name="F:WHC.OrderWater.Commons.NativeMethods.WM.KEYLAST">
            <summary>
            This message filters for keyboard messages.
            </summary>
        </member>
        <member name="F:WHC.OrderWater.Commons.NativeMethods.WM.IME_STARTCOMPOSITION">
            <summary>
            Sent immediately before the IME generates the composition string as a result of a keystroke. A window receives this message through its WindowProc function.
            </summary>
        </member>
        <member name="F:WHC.OrderWater.Commons.NativeMethods.WM.IME_ENDCOMPOSITION">
            <summary>
            Sent to an application when the IME ends composition. A window receives this message through its WindowProc function.
            </summary>
        </member>
        <member name="F:WHC.OrderWater.Commons.NativeMethods.WM.IME_COMPOSITION">
            <summary>
            Sent to an application when the IME changes composition status as a result of a keystroke. A window receives this message through its WindowProc function.
            </summary>
        </member>
        <member name="F:WHC.OrderWater.Commons.NativeMethods.WM.INITDIALOG">
            <summary>
            The WM_INITDIALOG message is sent to the dialog box procedure immediately before a dialog box is displayed. Dialog box procedures typically use this message to initialize controls and carry out any other initialization tasks that affect the appearance of the dialog box.
            </summary>
        </member>
        <member name="F:WHC.OrderWater.Commons.NativeMethods.WM.COMMAND">
            <summary>
            The WM_COMMAND message is sent when the user selects a command item from a menu, when a control sends a notification message to its parent window, or when an accelerator keystroke is translated.
            </summary>
        </member>
        <member name="F:WHC.OrderWater.Commons.NativeMethods.WM.SYSCOMMAND">
            <summary>
            A window receives this message when the user chooses a command from the Window menu (formerly known as the system or control menu) or when the user chooses the maximize button, minimize button, restore button, or close button.
            </summary>
        </member>
        <member name="F:WHC.OrderWater.Commons.NativeMethods.WM.TIMER">
            <summary>
            The WM_TIMER message is posted to the installing thread's message queue when a timer expires. The message is posted by the GetMessage or PeekMessage function.
            </summary>
        </member>
        <member name="F:WHC.OrderWater.Commons.NativeMethods.WM.HSCROLL">
            <summary>
            The WM_HSCROLL message is sent to a window when a scroll event occurs in the window's standard horizontal scroll bar. This message is also sent to the owner of a horizontal scroll bar control when a scroll event occurs in the control.
            </summary>
        </member>
        <member name="F:WHC.OrderWater.Commons.NativeMethods.WM.VSCROLL">
            <summary>
            The WM_VSCROLL message is sent to a window when a scroll event occurs in the window's standard vertical scroll bar. This message is also sent to the owner of a vertical scroll bar control when a scroll event occurs in the control.
            </summary>
        </member>
        <member name="F:WHC.OrderWater.Commons.NativeMethods.WM.INITMENU">
            <summary>
            The WM_INITMENU message is sent when a menu is about to become active. It occurs when the user clicks an item on the menu bar or presses a menu key. This allows the application to modify the menu before it is displayed.
            </summary>
        </member>
        <member name="F:WHC.OrderWater.Commons.NativeMethods.WM.INITMENUPOPUP">
            <summary>
            The WM_INITMENUPOPUP message is sent when a drop-down menu or submenu is about to become active. This allows an application to modify the menu before it is displayed, without changing the entire menu.
            </summary>
        </member>
        <member name="F:WHC.OrderWater.Commons.NativeMethods.WM.MENUSELECT">
            <summary>
            The WM_MENUSELECT message is sent to a menu's owner window when the user selects a menu item.
            </summary>
        </member>
        <member name="F:WHC.OrderWater.Commons.NativeMethods.WM.MENUCHAR">
            <summary>
            The WM_MENUCHAR message is sent when a menu is active and the user presses a key that does not correspond to any mnemonic or accelerator key. This message is sent to the window that owns the menu.
            </summary>
        </member>
        <member name="F:WHC.OrderWater.Commons.NativeMethods.WM.ENTERIDLE">
            <summary>
            The WM_ENTERIDLE message is sent to the owner window of a modal dialog box or menu that is entering an idle state. A modal dialog box or menu enters an idle state when no messages are waiting in its queue after it has processed one or more previous messages.
            </summary>
        </member>
        <member name="F:WHC.OrderWater.Commons.NativeMethods.WM.MENURBUTTONUP">
            <summary>
            The WM_MENURBUTTONUP message is sent when the user releases the right mouse button while the cursor is on a menu item.
            </summary>
        </member>
        <member name="F:WHC.OrderWater.Commons.NativeMethods.WM.MENUDRAG">
            <summary>
            The WM_MENUDRAG message is sent to the owner of a drag-and-drop menu when the user drags a menu item.
            </summary>
        </member>
        <member name="F:WHC.OrderWater.Commons.NativeMethods.WM.MENUGETOBJECT">
            <summary>
            The WM_MENUGETOBJECT message is sent to the owner of a drag-and-drop menu when the mouse cursor enters a menu item or moves from the center of the item to the top or bottom of the item.
            </summary>
        </member>
        <member name="F:WHC.OrderWater.Commons.NativeMethods.WM.UNINITMENUPOPUP">
            <summary>
            The WM_UNINITMENUPOPUP message is sent when a drop-down menu or submenu has been destroyed.
            </summary>
        </member>
        <member name="F:WHC.OrderWater.Commons.NativeMethods.WM.MENUCOMMAND">
            <summary>
            The WM_MENUCOMMAND message is sent when the user makes a selection from a menu.
            </summary>
        </member>
        <member name="F:WHC.OrderWater.Commons.NativeMethods.WM.CHANGEUISTATE">
            <summary>
            An application sends the WM_CHANGEUISTATE message to indicate that the user interface (UI) state should be changed.
            </summary>
        </member>
        <member name="F:WHC.OrderWater.Commons.NativeMethods.WM.UPDATEUISTATE">
            <summary>
            An application sends the WM_UPDATEUISTATE message to change the user interface (UI) state for the specified window and all its child windows.
            </summary>
        </member>
        <member name="F:WHC.OrderWater.Commons.NativeMethods.WM.QUERYUISTATE">
            <summary>
            An application sends the WM_QUERYUISTATE message to retrieve the user interface (UI) state for a window.
            </summary>
        </member>
        <member name="F:WHC.OrderWater.Commons.NativeMethods.WM.CTLCOLORMSGBOX">
            <summary>
            The WM_CTLCOLORMSGBOX message is sent to the owner window of a message box before Windows draws the message box. By responding to this message, the owner window can set the text and background colors of the message box by using the given display device context handle.
            </summary>
        </member>
        <member name="F:WHC.OrderWater.Commons.NativeMethods.WM.CTLCOLOREDIT">
            <summary>
            An edit control that is not read-only or disabled sends the WM_CTLCOLOREDIT message to its parent window when the control is about to be drawn. By responding to this message, the parent window can use the specified device context handle to set the text and background colors of the edit control.
            </summary>
        </member>
        <member name="F:WHC.OrderWater.Commons.NativeMethods.WM.CTLCOLORLISTBOX">
            <summary>
            Sent to the parent window of a list box before the system draws the list box. By responding to this message, the parent window can set the text and background colors of the list box by using the specified display device context handle.
            </summary>
        </member>
        <member name="F:WHC.OrderWater.Commons.NativeMethods.WM.CTLCOLORBTN">
            <summary>
            The WM_CTLCOLORBTN message is sent to the parent window of a button before drawing the button. The parent window can change the button's text and background colors. However, only owner-drawn buttons respond to the parent window processing this message.
            </summary>
        </member>
        <member name="F:WHC.OrderWater.Commons.NativeMethods.WM.CTLCOLORDLG">
            <summary>
            The WM_CTLCOLORDLG message is sent to a dialog box before the system draws the dialog box. By responding to this message, the dialog box can set its text and background colors using the specified display device context handle.
            </summary>
        </member>
        <member name="F:WHC.OrderWater.Commons.NativeMethods.WM.CTLCOLORSCROLLBAR">
            <summary>
            The WM_CTLCOLORSCROLLBAR message is sent to the parent window of a scroll bar control when the control is about to be drawn. By responding to this message, the parent window can use the display context handle to set the background color of the scroll bar control.
            </summary>
        </member>
        <member name="F:WHC.OrderWater.Commons.NativeMethods.WM.CTLCOLORSTATIC">
            <summary>
            A static control, or an edit control that is read-only or disabled, sends the WM_CTLCOLORSTATIC message to its parent window when the control is about to be drawn. By responding to this message, the parent window can use the specified device context handle to set the text and background colors of the static control.
            </summary>
        </member>
        <member name="F:WHC.OrderWater.Commons.NativeMethods.WM.MOUSEFIRST">
            <summary>
            Use WM_MOUSEFIRST to specify the first mouse message. Use the PeekMessage() Function.
            </summary>
        </member>
        <member name="F:WHC.OrderWater.Commons.NativeMethods.WM.MOUSEMOVE">
            <summary>
            The WM_MOUSEMOVE message is posted to a window when the cursor moves. If the mouse is not captured, the message is posted to the window that contains the cursor. Otherwise, the message is posted to the window that has captured the mouse.
            </summary>
        </member>
        <member name="F:WHC.OrderWater.Commons.NativeMethods.WM.LBUTTONDOWN">
            <summary>
            The WM_LBUTTONDOWN message is posted when the user presses the left mouse button while the cursor is in the client area of a window. If the mouse is not captured, the message is posted to the window beneath the cursor. Otherwise, the message is posted to the window that has captured the mouse.
            </summary>
        </member>
        <member name="F:WHC.OrderWater.Commons.NativeMethods.WM.LBUTTONUP">
            <summary>
            The WM_LBUTTONUP message is posted when the user releases the left mouse button while the cursor is in the client area of a window. If the mouse is not captured, the message is posted to the window beneath the cursor. Otherwise, the message is posted to the window that has captured the mouse.
            </summary>
        </member>
        <member name="F:WHC.OrderWater.Commons.NativeMethods.WM.LBUTTONDBLCLK">
            <summary>
            The WM_LBUTTONDBLCLK message is posted when the user double-clicks the left mouse button while the cursor is in the client area of a window. If the mouse is not captured, the message is posted to the window beneath the cursor. Otherwise, the message is posted to the window that has captured the mouse.
            </summary>
        </member>
        <member name="F:WHC.OrderWater.Commons.NativeMethods.WM.RBUTTONDOWN">
            <summary>
            The WM_RBUTTONDOWN message is posted when the user presses the right mouse button while the cursor is in the client area of a window. If the mouse is not captured, the message is posted to the window beneath the cursor. Otherwise, the message is posted to the window that has captured the mouse.
            </summary>
        </member>
        <member name="F:WHC.OrderWater.Commons.NativeMethods.WM.RBUTTONUP">
            <summary>
            The WM_RBUTTONUP message is posted when the user releases the right mouse button while the cursor is in the client area of a window. If the mouse is not captured, the message is posted to the window beneath the cursor. Otherwise, the message is posted to the window that has captured the mouse.
            </summary>
        </member>
        <member name="F:WHC.OrderWater.Commons.NativeMethods.WM.RBUTTONDBLCLK">
            <summary>
            The WM_RBUTTONDBLCLK message is posted when the user double-clicks the right mouse button while the cursor is in the client area of a window. If the mouse is not captured, the message is posted to the window beneath the cursor. Otherwise, the message is posted to the window that has captured the mouse.
            </summary>
        </member>
        <member name="F:WHC.OrderWater.Commons.NativeMethods.WM.MBUTTONDOWN">
            <summary>
            The WM_MBUTTONDOWN message is posted when the user presses the middle mouse button while the cursor is in the client area of a window. If the mouse is not captured, the message is posted to the window beneath the cursor. Otherwise, the message is posted to the window that has captured the mouse.
            </summary>
        </member>
        <member name="F:WHC.OrderWater.Commons.NativeMethods.WM.MBUTTONUP">
            <summary>
            The WM_MBUTTONUP message is posted when the user releases the middle mouse button while the cursor is in the client area of a window. If the mouse is not captured, the message is posted to the window beneath the cursor. Otherwise, the message is posted to the window that has captured the mouse.
            </summary>
        </member>
        <member name="F:WHC.OrderWater.Commons.NativeMethods.WM.MBUTTONDBLCLK">
            <summary>
            The WM_MBUTTONDBLCLK message is posted when the user double-clicks the middle mouse button while the cursor is in the client area of a window. If the mouse is not captured, the message is posted to the window beneath the cursor. Otherwise, the message is posted to the window that has captured the mouse.
            </summary>
        </member>
        <member name="F:WHC.OrderWater.Commons.NativeMethods.WM.MOUSEWHEEL">
            <summary>
            The WM_MOUSEWHEEL message is sent to the focus window when the mouse wheel is rotated. The DefWindowProc function propagates the message to the window's parent. There should be no internal forwarding of the message, since DefWindowProc propagates it up the parent chain until it finds a window that processes it.
            </summary>
        </member>
        <member name="F:WHC.OrderWater.Commons.NativeMethods.WM.XBUTTONDOWN">
            <summary>
            The WM_XBUTTONDOWN message is posted when the user presses the first or second X button while the cursor is in the client area of a window. If the mouse is not captured, the message is posted to the window beneath the cursor. Otherwise, the message is posted to the window that has captured the mouse.
            </summary>
        </member>
        <member name="F:WHC.OrderWater.Commons.NativeMethods.WM.XBUTTONUP">
            <summary>
            The WM_XBUTTONUP message is posted when the user releases the first or second X button while the cursor is in the client area of a window. If the mouse is not captured, the message is posted to the window beneath the cursor. Otherwise, the message is posted to the window that has captured the mouse.
            </summary>
        </member>
        <member name="F:WHC.OrderWater.Commons.NativeMethods.WM.XBUTTONDBLCLK">
            <summary>
            The WM_XBUTTONDBLCLK message is posted when the user double-clicks the first or second X button while the cursor is in the client area of a window. If the mouse is not captured, the message is posted to the window beneath the cursor. Otherwise, the message is posted to the window that has captured the mouse.
            </summary>
        </member>
        <member name="F:WHC.OrderWater.Commons.NativeMethods.WM.MOUSEHWHEEL">
            <summary>
            The WM_MOUSEHWHEEL message is sent to the focus window when the mouse's horizontal scroll wheel is tilted or rotated. The DefWindowProc function propagates the message to the window's parent. There should be no internal forwarding of the message, since DefWindowProc propagates it up the parent chain until it finds a window that processes it.
            </summary>
        </member>
        <member name="F:WHC.OrderWater.Commons.NativeMethods.WM.MOUSELAST">
            <summary>
            Use WM_MOUSELAST to specify the last mouse message. Used with PeekMessage() Function.
            </summary>
        </member>
        <member name="F:WHC.OrderWater.Commons.NativeMethods.WM.PARENTNOTIFY">
            <summary>
            The WM_PARENTNOTIFY message is sent to the parent of a child window when the child window is created or destroyed, or when the user clicks a mouse button while the cursor is over the child window. When the child window is being created, the system sends WM_PARENTNOTIFY just before the CreateWindow or CreateWindowEx function that creates the window returns. When the child window is being destroyed, the system sends the message before any processing to destroy the window takes place.
            </summary>
        </member>
        <member name="F:WHC.OrderWater.Commons.NativeMethods.WM.ENTERMENULOOP">
            <summary>
            The WM_ENTERMENULOOP message informs an application's main window procedure that a menu modal loop has been entered.
            </summary>
        </member>
        <member name="F:WHC.OrderWater.Commons.NativeMethods.WM.EXITMENULOOP">
            <summary>
            The WM_EXITMENULOOP message informs an application's main window procedure that a menu modal loop has been exited.
            </summary>
        </member>
        <member name="F:WHC.OrderWater.Commons.NativeMethods.WM.NEXTMENU">
            <summary>
            The WM_NEXTMENU message is sent to an application when the right or left arrow key is used to switch between the menu bar and the system menu.
            </summary>
        </member>
        <member name="F:WHC.OrderWater.Commons.NativeMethods.WM.SIZING">
            <summary>
            The WM_SIZING message is sent to a window that the user is resizing. By processing this message, an application can monitor the size and position of the drag rectangle and, if needed, change its size or position.
            </summary>
        </member>
        <member name="F:WHC.OrderWater.Commons.NativeMethods.WM.CAPTURECHANGED">
            <summary>
            The WM_CAPTURECHANGED message is sent to the window that is losing the mouse capture.
            </summary>
        </member>
        <member name="F:WHC.OrderWater.Commons.NativeMethods.WM.MOVING">
            <summary>
            The WM_MOVING message is sent to a window that the user is moving. By processing this message, an application can monitor the position of the drag rectangle and, if needed, change its position.
            </summary>
        </member>
        <member name="F:WHC.OrderWater.Commons.NativeMethods.WM.POWERBROADCAST">
            <summary>
            Notifies applications that a power-management event has occurred.
            </summary>
        </member>
        <member name="F:WHC.OrderWater.Commons.NativeMethods.WM.DEVICECHANGE">
            <summary>
            Notifies an application of a change to the hardware configuration of a device or the computer.
            </summary>
        </member>
        <member name="F:WHC.OrderWater.Commons.NativeMethods.WM.MDICREATE">
            <summary>
            An application sends the WM_MDICREATE message to a multiple-document interface (MDI) client window to create an MDI child window.
            </summary>
        </member>
        <member name="F:WHC.OrderWater.Commons.NativeMethods.WM.MDIDESTROY">
            <summary>
            An application sends the WM_MDIDESTROY message to a multiple-document interface (MDI) client window to close an MDI child window.
            </summary>
        </member>
        <member name="F:WHC.OrderWater.Commons.NativeMethods.WM.MDIACTIVATE">
            <summary>
            An application sends the WM_MDIACTIVATE message to a multiple-document interface (MDI) client window to instruct the client window to activate a different MDI child window.
            </summary>
        </member>
        <member name="F:WHC.OrderWater.Commons.NativeMethods.WM.MDIRESTORE">
            <summary>
            An application sends the WM_MDIRESTORE message to a multiple-document interface (MDI) client window to restore an MDI child window from maximized or minimized size.
            </summary>
        </member>
        <member name="F:WHC.OrderWater.Commons.NativeMethods.WM.MDINEXT">
            <summary>
            An application sends the WM_MDINEXT message to a multiple-document interface (MDI) client window to activate the next or previous child window.
            </summary>
        </member>
        <member name="F:WHC.OrderWater.Commons.NativeMethods.WM.MDIMAXIMIZE">
            <summary>
            An application sends the WM_MDIMAXIMIZE message to a multiple-document interface (MDI) client window to maximize an MDI child window. The system resizes the child window to make its client area fill the client window. The system places the child window's window menu icon in the rightmost position of the frame window's menu bar, and places the child window's restore icon in the leftmost position. The system also appends the title bar text of the child window to that of the frame window.
            </summary>
        </member>
        <member name="F:WHC.OrderWater.Commons.NativeMethods.WM.MDITILE">
            <summary>
            An application sends the WM_MDITILE message to a multiple-document interface (MDI) client window to arrange all of its MDI child windows in a tile format.
            </summary>
        </member>
        <member name="F:WHC.OrderWater.Commons.NativeMethods.WM.MDICASCADE">
            <summary>
            An application sends the WM_MDICASCADE message to a multiple-document interface (MDI) client window to arrange all its child windows in a cascade format.
            </summary>
        </member>
        <member name="F:WHC.OrderWater.Commons.NativeMethods.WM.MDIICONARRANGE">
            <summary>
            An application sends the WM_MDIICONARRANGE message to a multiple-document interface (MDI) client window to arrange all minimized MDI child windows. It does not affect child windows that are not minimized.
            </summary>
        </member>
        <member name="F:WHC.OrderWater.Commons.NativeMethods.WM.MDIGETACTIVE">
            <summary>
            An application sends the WM_MDIGETACTIVE message to a multiple-document interface (MDI) client window to retrieve the handle to the active MDI child window.
            </summary>
        </member>
        <member name="F:WHC.OrderWater.Commons.NativeMethods.WM.MDISETMENU">
            <summary>
            An application sends the WM_MDISETMENU message to a multiple-document interface (MDI) client window to replace the entire menu of an MDI frame window, to replace the window menu of the frame window, or both.
            </summary>
        </member>
        <member name="F:WHC.OrderWater.Commons.NativeMethods.WM.ENTERSIZEMOVE">
            <summary>
            The WM_ENTERSIZEMOVE message is sent one time to a window after it enters the moving or sizing modal loop. The window enters the moving or sizing modal loop when the user clicks the window's title bar or sizing border, or when the window passes the WM_SYSCOMMAND message to the DefWindowProc function and the wParam parameter of the message specifies the SC_MOVE or SC_SIZE value. The operation is complete when DefWindowProc returns.
            The system sends the WM_ENTERSIZEMOVE message regardless of whether the dragging of full windows is enabled.
            </summary>
        </member>
        <member name="F:WHC.OrderWater.Commons.NativeMethods.WM.EXITSIZEMOVE">
            <summary>
            The WM_EXITSIZEMOVE message is sent one time to a window, after it has exited the moving or sizing modal loop. The window enters the moving or sizing modal loop when the user clicks the window's title bar or sizing border, or when the window passes the WM_SYSCOMMAND message to the DefWindowProc function and the wParam parameter of the message specifies the SC_MOVE or SC_SIZE value. The operation is complete when DefWindowProc returns.
            </summary>
        </member>
        <member name="F:WHC.OrderWater.Commons.NativeMethods.WM.DROPFILES">
            <summary>
            Sent when the user drops a file on the window of an application that has registered itself as a recipient of dropped files.
            </summary>
        </member>
        <member name="F:WHC.OrderWater.Commons.NativeMethods.WM.MDIREFRESHMENU">
            <summary>
            An application sends the WM_MDIREFRESHMENU message to a multiple-document interface (MDI) client window to refresh the window menu of the MDI frame window.
            </summary>
        </member>
        <member name="F:WHC.OrderWater.Commons.NativeMethods.WM.IME_SETCONTEXT">
            <summary>
            Sent to an application when a window is activated. A window receives this message through its WindowProc function.
            </summary>
        </member>
        <member name="F:WHC.OrderWater.Commons.NativeMethods.WM.IME_NOTIFY">
            <summary>
            Sent to an application to notify it of changes to the IME window. A window receives this message through its WindowProc function.
            </summary>
        </member>
        <member name="F:WHC.OrderWater.Commons.NativeMethods.WM.IME_CONTROL">
            <summary>
            Sent by an application to direct the IME window to carry out the requested command. The application uses this message to control the IME window that it has created. To send this message, the application calls the SendMessage function with the following parameters.
            </summary>
        </member>
        <member name="F:WHC.OrderWater.Commons.NativeMethods.WM.IME_COMPOSITIONFULL">
            <summary>
            Sent to an application when the IME window finds no space to extend the area for the composition window. A window receives this message through its WindowProc function.
            </summary>
        </member>
        <member name="F:WHC.OrderWater.Commons.NativeMethods.WM.IME_SELECT">
            <summary>
            Sent to an application when the operating system is about to change the current IME. A window receives this message through its WindowProc function.
            </summary>
        </member>
        <member name="F:WHC.OrderWater.Commons.NativeMethods.WM.IME_CHAR">
            <summary>
            Sent to an application when the IME gets a character of the conversion result. A window receives this message through its WindowProc function.
            </summary>
        </member>
        <member name="F:WHC.OrderWater.Commons.NativeMethods.WM.IME_REQUEST">
            <summary>
            Sent to an application to provide commands and request information. A window receives this message through its WindowProc function.
            </summary>
        </member>
        <member name="F:WHC.OrderWater.Commons.NativeMethods.WM.IME_KEYDOWN">
            <summary>
            Sent to an application by the IME to notify the application of a key press and to keep message order. A window receives this message through its WindowProc function.
            </summary>
        </member>
        <member name="F:WHC.OrderWater.Commons.NativeMethods.WM.IME_KEYUP">
            <summary>
            Sent to an application by the IME to notify the application of a key release and to keep message order. A window receives this message through its WindowProc function.
            </summary>
        </member>
        <member name="F:WHC.OrderWater.Commons.NativeMethods.WM.MOUSEHOVER">
            <summary>
            The WM_MOUSEHOVER message is posted to a window when the cursor hovers over the client area of the window for the period of time specified in a prior call to TrackMouseEvent.
            </summary>
        </member>
        <member name="F:WHC.OrderWater.Commons.NativeMethods.WM.MOUSELEAVE">
            <summary>
            The WM_MOUSELEAVE message is posted to a window when the cursor leaves the client area of the window specified in a prior call to TrackMouseEvent.
            </summary>
        </member>
        <member name="F:WHC.OrderWater.Commons.NativeMethods.WM.NCMOUSEHOVER">
            <summary>
            The WM_NCMOUSEHOVER message is posted to a window when the cursor hovers over the nonclient area of the window for the period of time specified in a prior call to TrackMouseEvent.
            </summary>
        </member>
        <member name="F:WHC.OrderWater.Commons.NativeMethods.WM.NCMOUSELEAVE">
            <summary>
            The WM_NCMOUSELEAVE message is posted to a window when the cursor leaves the nonclient area of the window specified in a prior call to TrackMouseEvent.
            </summary>
        </member>
        <member name="F:WHC.OrderWater.Commons.NativeMethods.WM.WTSSESSION_CHANGE">
            <summary>
            The WM_WTSSESSION_CHANGE message notifies applications of changes in session state.
            </summary>
        </member>
        <member name="F:WHC.OrderWater.Commons.NativeMethods.WM.CUT">
            <summary>
            An application sends a WM_CUT message to an edit control or combo box to delete (cut) the current selection, if any, in the edit control and copy the deleted text to the clipboard in CF_TEXT format.
            </summary>
        </member>
        <member name="F:WHC.OrderWater.Commons.NativeMethods.WM.COPY">
            <summary>
            An application sends the WM_COPY message to an edit control or combo box to copy the current selection to the clipboard in CF_TEXT format.
            </summary>
        </member>
        <member name="F:WHC.OrderWater.Commons.NativeMethods.WM.PASTE">
            <summary>
            An application sends a WM_PASTE message to an edit control or combo box to copy the current content of the clipboard to the edit control at the current caret position. Data is inserted only if the clipboard contains data in CF_TEXT format.
            </summary>
        </member>
        <member name="F:WHC.OrderWater.Commons.NativeMethods.WM.CLEAR">
            <summary>
            An application sends a WM_CLEAR message to an edit control or combo box to delete (clear) the current selection, if any, from the edit control.
            </summary>
        </member>
        <member name="F:WHC.OrderWater.Commons.NativeMethods.WM.UNDO">
            <summary>
            An application sends a WM_UNDO message to an edit control to undo the last operation. When this message is sent to an edit control, the previously deleted text is restored or the previously added text is deleted.
            </summary>
        </member>
        <member name="F:WHC.OrderWater.Commons.NativeMethods.WM.RENDERFORMAT">
            <summary>
            The WM_RENDERFORMAT message is sent to the clipboard owner if it has delayed rendering a specific clipboard format and if an application has requested data in that format. The clipboard owner must render data in the specified format and place it on the clipboard by calling the SetClipboardData function.
            </summary>
        </member>
        <member name="F:WHC.OrderWater.Commons.NativeMethods.WM.RENDERALLFORMATS">
            <summary>
            The WM_RENDERALLFORMATS message is sent to the clipboard owner before it is destroyed, if the clipboard owner has delayed rendering one or more clipboard formats. For the content of the clipboard to remain available to other applications, the clipboard owner must render data in all the formats it is capable of generating, and place the data on the clipboard by calling the SetClipboardData function.
            </summary>
        </member>
        <member name="F:WHC.OrderWater.Commons.NativeMethods.WM.DESTROYCLIPBOARD">
            <summary>
            The WM_DESTROYCLIPBOARD message is sent to the clipboard owner when a call to the EmptyClipboard function empties the clipboard.
            </summary>
        </member>
        <member name="F:WHC.OrderWater.Commons.NativeMethods.WM.DRAWCLIPBOARD">
            <summary>
            The WM_DRAWCLIPBOARD message is sent to the first window in the clipboard viewer chain when the content of the clipboard changes. This enables a clipboard viewer window to display the new content of the clipboard.
            </summary>
        </member>
        <member name="F:WHC.OrderWater.Commons.NativeMethods.WM.PAINTCLIPBOARD">
            <summary>
            The WM_PAINTCLIPBOARD message is sent to the clipboard owner by a clipboard viewer window when the clipboard contains data in the CF_OWNERDISPLAY format and the clipboard viewer's client area needs repainting.
            </summary>
        </member>
        <member name="F:WHC.OrderWater.Commons.NativeMethods.WM.VSCROLLCLIPBOARD">
            <summary>
            The WM_VSCROLLCLIPBOARD message is sent to the clipboard owner by a clipboard viewer window when the clipboard contains data in the CF_OWNERDISPLAY format and an event occurs in the clipboard viewer's vertical scroll bar. The owner should scroll the clipboard image and update the scroll bar values.
            </summary>
        </member>
        <member name="F:WHC.OrderWater.Commons.NativeMethods.WM.SIZECLIPBOARD">
            <summary>
            The WM_SIZECLIPBOARD message is sent to the clipboard owner by a clipboard viewer window when the clipboard contains data in the CF_OWNERDISPLAY format and the clipboard viewer's client area has changed size.
            </summary>
        </member>
        <member name="F:WHC.OrderWater.Commons.NativeMethods.WM.ASKCBFORMATNAME">
            <summary>
            The WM_ASKCBFORMATNAME message is sent to the clipboard owner by a clipboard viewer window to request the name of a CF_OWNERDISPLAY clipboard format.
            </summary>
        </member>
        <member name="F:WHC.OrderWater.Commons.NativeMethods.WM.CHANGECBCHAIN">
            <summary>
            The WM_CHANGECBCHAIN message is sent to the first window in the clipboard viewer chain when a window is being removed from the chain.
            </summary>
        </member>
        <member name="F:WHC.OrderWater.Commons.NativeMethods.WM.HSCROLLCLIPBOARD">
            <summary>
            The WM_HSCROLLCLIPBOARD message is sent to the clipboard owner by a clipboard viewer window. This occurs when the clipboard contains data in the CF_OWNERDISPLAY format and an event occurs in the clipboard viewer's horizontal scroll bar. The owner should scroll the clipboard image and update the scroll bar values.
            </summary>
        </member>
        <member name="F:WHC.OrderWater.Commons.NativeMethods.WM.QUERYNEWPALETTE">
            <summary>
            This message informs a window that it is about to receive the keyboard focus, giving the window the opportunity to realize its logical palette when it receives the focus.
            </summary>
        </member>
        <member name="F:WHC.OrderWater.Commons.NativeMethods.WM.PALETTEISCHANGING">
            <summary>
            The WM_PALETTEISCHANGING message informs applications that an application is going to realize its logical palette.
            </summary>
        </member>
        <member name="F:WHC.OrderWater.Commons.NativeMethods.WM.PALETTECHANGED">
            <summary>
            This message is sent by the OS to all top-level and overlapped windows after the window with the keyboard focus realizes its logical palette.
            This message enables windows that do not have the keyboard focus to realize their logical palettes and update their client areas.
            </summary>
        </member>
        <member name="F:WHC.OrderWater.Commons.NativeMethods.WM.HOTKEY">
            <summary>
            The WM_HOTKEY message is posted when the user presses a hot key registered by the RegisterHotKey function. The message is placed at the top of the message queue associated with the thread that registered the hot key.
            </summary>
        </member>
        <member name="F:WHC.OrderWater.Commons.NativeMethods.WM.PRINT">
            <summary>
            The WM_PRINT message is sent to a window to request that it draw itself in the specified device context, most commonly in a printer device context.
            </summary>
        </member>
        <member name="F:WHC.OrderWater.Commons.NativeMethods.WM.PRINTCLIENT">
            <summary>
            The WM_PRINTCLIENT message is sent to a window to request that it draw its client area in the specified device context, most commonly in a printer device context.
            </summary>
        </member>
        <member name="F:WHC.OrderWater.Commons.NativeMethods.WM.APPCOMMAND">
            <summary>
            The WM_APPCOMMAND message notifies a window that the user generated an application command event, for example, by clicking an application command button using the mouse or typing an application command key on the keyboard.
            </summary>
        </member>
        <member name="F:WHC.OrderWater.Commons.NativeMethods.WM.THEMECHANGED">
            <summary>
            The WM_THEMECHANGED message is broadcast to every window following a theme change event. Examples of theme change events are the activation of a theme, the deactivation of a theme, or a transition from one theme to another.
            </summary>
        </member>
        <member name="F:WHC.OrderWater.Commons.NativeMethods.WM.CLIPBOARDUPDATE">
            <summary>
            Sent when the contents of the clipboard have changed.
            </summary>
        </member>
        <member name="F:WHC.OrderWater.Commons.NativeMethods.WM.DWMCOMPOSITIONCHANGED">
            <summary>
            The system will send a window the WM_DWMCOMPOSITIONCHANGED message to indicate that the availability of desktop composition has changed.
            </summary>
        </member>
        <member name="F:WHC.OrderWater.Commons.NativeMethods.WM.DWMNCRENDERINGCHANGED">
            <summary>
            WM_DWMNCRENDERINGCHANGED is called when the non-client area rendering status of a window has changed. Only windows that have set the flag DWM_BLURBEHIND.fTransitionOnMaximized to true will get this message.
            </summary>
        </member>
        <member name="F:WHC.OrderWater.Commons.NativeMethods.WM.DWMCOLORIZATIONCOLORCHANGED">
            <summary>
            Sent to all top-level windows when the colorization color has changed.
            </summary>
        </member>
        <member name="F:WHC.OrderWater.Commons.NativeMethods.WM.DWMWINDOWMAXIMIZEDCHANGE">
            <summary>
            WM_DWMWINDOWMAXIMIZEDCHANGE will let you know when a DWM composed window is maximized. You also have to register for this message as well. You'd have other windowd go opaque when this message is sent.
            </summary>
        </member>
        <member name="F:WHC.OrderWater.Commons.NativeMethods.WM.GETTITLEBARINFOEX">
            <summary>
            Sent to request extended title bar information. A window receives this message through its WindowProc function.
            </summary>
        </member>
        <member name="F:WHC.OrderWater.Commons.NativeMethods.WM.APP">
            <summary>
            The WM_APP constant is used by applications to help define private messages, usually of the form WM_APP+X, where X is an integer value.
            </summary>
        </member>
        <member name="F:WHC.OrderWater.Commons.NativeMethods.WM.USER">
            <summary>
            The WM_USER constant is used by applications to help define private messages for use by private window classes, usually of the form WM_USER+X, where X is an integer value.
            </summary>
        </member>
        <member name="F:WHC.OrderWater.Commons.NativeMethods.WM.CPL_LAUNCH">
            <summary>
            An application sends the WM_CPL_LAUNCH message to Windows Control Panel to request that a Control Panel application be started.
            </summary>
        </member>
        <member name="F:WHC.OrderWater.Commons.NativeMethods.WM.CPL_LAUNCHED">
            <summary>
            The WM_CPL_LAUNCHED message is sent when a Control Panel application, started by the WM_CPL_LAUNCH message, has closed. The WM_CPL_LAUNCHED message is sent to the window identified by the wParam parameter of the WM_CPL_LAUNCH message that started the application.
            </summary>
        </member>
        <member name="F:WHC.OrderWater.Commons.NativeMethods.WM.SYSTIMER">
            <summary>
            WM_SYSTIMER is a well-known yet still undocumented message. Windows uses WM_SYSTIMER for internal actions like scrolling.
            </summary>
        </member>
        <member name="T:WHC.OrderWater.Commons.NativeMethods.WindowStyles">
            <summary>
            Window Styles.
            The following styles can be specified wherever a window style is required. After the control has been created, these styles cannot be modified, except as noted.
            </summary>
        </member>
        <member name="F:WHC.OrderWater.Commons.NativeMethods.WindowStyles.WS_OVERLAPPED">
            <summary>
            Creates an overlapped window. An overlapped window usually has a caption and a border.
            </summary>
        </member>
        <member name="F:WHC.OrderWater.Commons.NativeMethods.WindowStyles.WS_POPUP">
            <summary>
            Creates a pop-up window. Cannot be used with the <see cref="F:WHC.OrderWater.Commons.NativeMethods.WindowStyles.WS_CHILD"/> style.
            </summary>
        </member>
        <member name="F:WHC.OrderWater.Commons.NativeMethods.WindowStyles.WS_CHILD">
            <summary>
            Creates a child window. Cannot be used with the <see cref="F:WHC.OrderWater.Commons.NativeMethods.WindowStyles.WS_POPUP"/> style.
            </summary>
        </member>
        <member name="F:WHC.OrderWater.Commons.NativeMethods.WindowStyles.WS_MINIMIZE">
            <summary>
            Creates a window that is initially minimized. For use with the <see cref="F:WHC.OrderWater.Commons.NativeMethods.WindowStyles.WS_OVERLAPPED"/> style only.
            </summary>
        </member>
        <member name="F:WHC.OrderWater.Commons.NativeMethods.WindowStyles.WS_VISIBLE">
            <summary>
            Creates a window that is initially visible.
            </summary>
        </member>
        <member name="F:WHC.OrderWater.Commons.NativeMethods.WindowStyles.WS_DISABLED">
            <summary>
            Creates a window that is initially disabled.
            </summary>
        </member>
        <member name="F:WHC.OrderWater.Commons.NativeMethods.WindowStyles.WS_CLIPSIBLINGS">
            <summary>
            Clips child windows relative to each other; that is, when a particular child window receives a paint message, the WS_CLIPSIBLINGS style clips all other overlapped child windows out of the region of the child window to be updated. (If WS_CLIPSIBLINGS is not given and child windows overlap, when you draw within the client area of a child window, it is possible to draw within the client area of a neighboring child window.) For use with the <see cref="F:WHC.OrderWater.Commons.NativeMethods.WindowStyles.WS_CHILD"/> style only.
            </summary>
        </member>
        <member name="F:WHC.OrderWater.Commons.NativeMethods.WindowStyles.WS_CLIPCHILDREN">
            <summary>
            Excludes the area occupied by child windows when you draw within the parent window.
            Used when you create the parent window.
            </summary>
        </member>
        <member name="F:WHC.OrderWater.Commons.NativeMethods.WindowStyles.WS_MAXIMIZE">
            <summary>
            Creates a window of maximum size.
            </summary>
        </member>
        <member name="F:WHC.OrderWater.Commons.NativeMethods.WindowStyles.WS_BORDER">
            <summary>
            Creates a window that has a border.
            </summary>
        </member>
        <member name="F:WHC.OrderWater.Commons.NativeMethods.WindowStyles.WS_DLGFRAME">
            <summary>
            Creates a window with a double border but no title.
            </summary>
        </member>
        <member name="F:WHC.OrderWater.Commons.NativeMethods.WindowStyles.WS_VSCROLL">
            <summary>
            Creates a window that has a vertical scroll bar.
            </summary>
        </member>
        <member name="F:WHC.OrderWater.Commons.NativeMethods.WindowStyles.WS_HSCROLL">
            <summary>
            Creates a window that has a horizontal scroll bar.
            </summary>
        </member>
        <member name="F:WHC.OrderWater.Commons.NativeMethods.WindowStyles.WS_SYSMENU">
            <summary>
            Creates a window that has a Control-menu box in its title bar. Used only for windows with title bars.
            </summary>
        </member>
        <member name="F:WHC.OrderWater.Commons.NativeMethods.WindowStyles.WS_THICKFRAME">
            <summary>
            Creates a window with a thick frame that can be used to size the window.
            </summary>
        </member>
        <member name="F:WHC.OrderWater.Commons.NativeMethods.WindowStyles.WS_GROUP">
            <summary>
            Specifies the first control of a group of controls in which the user can move from one control to the next with the arrow keys. All controls defined with the WS_GROUP style FALSE after the first control belong to the same group. The next control with the WS_GROUP style starts the next group (that is, one group ends where the next begins).
            </summary>
        </member>
        <member name="F:WHC.OrderWater.Commons.NativeMethods.WindowStyles.WS_TABSTOP">
            <summary>
            Specifies one of any number of controls through which the user can move by using the TAB key. The TAB key moves the user to the next control specified by the WS_TABSTOP style.
            </summary>
        </member>
        <member name="F:WHC.OrderWater.Commons.NativeMethods.WindowStyles.WS_MINIMIZEBOX">
            <summary>
            Creates a window that has a Minimize button.
            </summary>
        </member>
        <member name="F:WHC.OrderWater.Commons.NativeMethods.WindowStyles.WS_MAXIMIZEBOX">
            <summary>
            Creates a window that has a Maximize button.
            </summary>
        </member>
        <member name="F:WHC.OrderWater.Commons.NativeMethods.WindowStyles.WS_CAPTION">
            <summary>
            Creates a window that has a title bar (implies the <see cref="F:WHC.OrderWater.Commons.NativeMethods.WindowStyles.WS_BORDER"/> style).
            Cannot be used with the <see cref="F:WHC.OrderWater.Commons.NativeMethods.WindowStyles.WS_DLGFRAME"/> style.
            </summary>
        </member>
        <member name="F:WHC.OrderWater.Commons.NativeMethods.WindowStyles.WS_TILED">
            <summary>
            Creates an overlapped window. An overlapped window has a title bar and a border. Same as the <see cref="F:WHC.OrderWater.Commons.NativeMethods.WindowStyles.WS_OVERLAPPED"/> style.
            </summary>
        </member>
        <member name="F:WHC.OrderWater.Commons.NativeMethods.WindowStyles.WS_ICONIC">
            <summary>
            Creates a window that is initially minimized. Same as the <see cref="F:WHC.OrderWater.Commons.NativeMethods.WindowStyles.WS_MINIMIZE"/> style.
            </summary>
        </member>
        <member name="F:WHC.OrderWater.Commons.NativeMethods.WindowStyles.WS_SIZEBOX">
            <summary>
            Creates a window that has a sizing border. Same as the <see cref="F:WHC.OrderWater.Commons.NativeMethods.WindowStyles.WS_THICKFRAME"/> style.
            </summary>
        </member>
        <member name="F:WHC.OrderWater.Commons.NativeMethods.WindowStyles.WS_TILEDWINDOW">
            <summary>
            Creates an overlapped window with the <see cref="F:WHC.OrderWater.Commons.NativeMethods.WindowStyles.WS_OVERLAPPED"/>, <see cref="F:WHC.OrderWater.Commons.NativeMethods.WindowStyles.WS_CAPTION"/>, <see cref="F:WHC.OrderWater.Commons.NativeMethods.WindowStyles.WS_SYSMENU"/>, <see cref="F:WHC.OrderWater.Commons.NativeMethods.WindowStyles.WS_THICKFRAME"/>, <see cref="F:WHC.OrderWater.Commons.NativeMethods.WindowStyles.WS_MINIMIZEBOX"/>, and <see cref="F:WHC.OrderWater.Commons.NativeMethods.WindowStyles.WS_MAXIMIZEBOX"/> styles. Same as the <see cref="F:WHC.OrderWater.Commons.NativeMethods.WindowStyles.WS_OVERLAPPEDWINDOW"/> style.
            </summary>
        </member>
        <member name="F:WHC.OrderWater.Commons.NativeMethods.WindowStyles.WS_OVERLAPPEDWINDOW">
            <summary>
            Creates an overlapped window with the <see cref="F:WHC.OrderWater.Commons.NativeMethods.WindowStyles.WS_OVERLAPPED"/>, <see cref="F:WHC.OrderWater.Commons.NativeMethods.WindowStyles.WS_CAPTION"/>, <see cref="F:WHC.OrderWater.Commons.NativeMethods.WindowStyles.WS_SYSMENU"/>, <see cref="F:WHC.OrderWater.Commons.NativeMethods.WindowStyles.WS_THICKFRAME"/>, <see cref="F:WHC.OrderWater.Commons.NativeMethods.WindowStyles.WS_MINIMIZEBOX"/>, and <see cref="F:WHC.OrderWater.Commons.NativeMethods.WindowStyles.WS_MAXIMIZEBOX"/> styles.
            </summary>
        </member>
        <member name="F:WHC.OrderWater.Commons.NativeMethods.WindowStyles.WS_POPUPWINDOW">
            <summary>
            Creates a pop-up window with the <see cref="F:WHC.OrderWater.Commons.NativeMethods.WindowStyles.WS_BORDER"/>, <see cref="F:WHC.OrderWater.Commons.NativeMethods.WindowStyles.WS_POPUP"/>, and <see cref="F:WHC.OrderWater.Commons.NativeMethods.WindowStyles.WS_SYSMENU"/> styles. The WS_CAPTION style must be combined with the <see cref="F:WHC.OrderWater.Commons.NativeMethods.WindowStyles.WS_POPUPWINDOW"/> style to make the Control menu visible.
            </summary>
        </member>
        <member name="F:WHC.OrderWater.Commons.NativeMethods.WindowStyles.WS_CHILDWINDOW">
            <summary>
            Same as the <see cref="F:WHC.OrderWater.Commons.NativeMethods.WindowStyles.WS_CHILD"/> style.
            </summary>
        </member>
        <member name="F:WHC.OrderWater.Commons.NativeMethods.WindowStyles.WS_EX_DLGMODALFRAME">
            <summary>
            Designates a window with a double border that may (optionally) be created with a title bar when you specify the <see cref="F:WHC.OrderWater.Commons.NativeMethods.WindowStyles.WS_CAPTION"/> style flag in the dwStyle parameter.
            </summary>
        </member>
        <member name="F:WHC.OrderWater.Commons.NativeMethods.WindowStyles.WS_EX_NOPARENTNOTIFY">
            <summary>
            Specifies that a child window created with this style will not send the <see cref="!:WM_PARENTNOTIFY"/> message to its parent window when the child window is created or destroyed.
            </summary>
        </member>
        <member name="F:WHC.OrderWater.Commons.NativeMethods.WindowStyles.WS_EX_TOPMOST">
            <summary>
            Specifies that a window created with this style should be placed above all nontopmost windows and stay above them even when the window is deactivated. An application can use the <see cref="M:WHC.OrderWater.Commons.NativeMethods.SetWindowPos(System.IntPtr,System.IntPtr,System.Int32,System.Int32,System.Int32,System.Int32,System.UInt32)"/> member function to add or remove this attribute.
            </summary>
        </member>
        <member name="F:WHC.OrderWater.Commons.NativeMethods.WindowStyles.WS_EX_ACCEPTFILES">
            <summary>
            Specifies that a window created with this style accepts drag-and-drop files.
            </summary>
        </member>
        <member name="F:WHC.OrderWater.Commons.NativeMethods.WindowStyles.WS_EX_TRANSPARENT">
            <summary>
            Specifies that a window created with this style is to be transparent. That is, any windows that are beneath the window are not obscured by the window. A window created with this style receives <see cref="!:WM_PAINT"/> messages only after all sibling windows beneath it have been updated.
            </summary>
        </member>
        <member name="F:WHC.OrderWater.Commons.NativeMethods.WindowStyles.WS_EX_MDICHILD">
            <summary>
            Creates an MDI child window.
            </summary>
        </member>
        <member name="F:WHC.OrderWater.Commons.NativeMethods.WindowStyles.WS_EX_TOOLWINDOW">
            <summary>
            Creates a tool window, which is a window intended to be used as a floating toolbar. A tool window has a title bar that is shorter than a normal title bar, and the window title is drawn using a smaller font. A tool window does not appear in the task bar or in the window that appears when the user presses ALT+TAB.
            </summary>
        </member>
        <member name="F:WHC.OrderWater.Commons.NativeMethods.WindowStyles.WS_EX_WINDOWEDGE">
            <summary>
            Specifies that a window has a border with a raised edge.
            </summary>
        </member>
        <member name="F:WHC.OrderWater.Commons.NativeMethods.WindowStyles.WS_EX_CLIENTEDGE">
            <summary>
            Specifies that a window has a 3D look — that is, a border with a sunken edge.
            </summary>
        </member>
        <member name="F:WHC.OrderWater.Commons.NativeMethods.WindowStyles.WS_EX_CONTEXTHELP">
            <summary>
            Includes a question mark in the title bar of the window. When the user clicks the question mark, the cursor changes to a question mark with a pointer. If the user then clicks a child window, the child receives a <see cref="!:WM_HELP"/> message.
            </summary>
        </member>
        <member name="F:WHC.OrderWater.Commons.NativeMethods.WindowStyles.WS_EX_RIGHT">
            <summary>
            Gives a window generic right-aligned properties. This depends on the window class.
            </summary>
        </member>
        <member name="F:WHC.OrderWater.Commons.NativeMethods.WindowStyles.WS_EX_LEFT">
            <summary>
            Gives window generic left-aligned properties. This is the default.
            </summary>
        </member>
        <member name="F:WHC.OrderWater.Commons.NativeMethods.WindowStyles.WS_EX_RTLREADING">
            <summary>
            Displays the window text using right-to-left reading order properties.
            </summary>
        </member>
        <member name="F:WHC.OrderWater.Commons.NativeMethods.WindowStyles.WS_EX_LTRREADING">
            <summary>
            Displays the window text using left-to-right reading order properties. This is the default.
            </summary>
        </member>
        <member name="F:WHC.OrderWater.Commons.NativeMethods.WindowStyles.WS_EX_LEFTSCROLLBAR">
            <summary>
            Places a vertical scroll bar to the left of the client area.
            </summary>
        </member>
        <member name="F:WHC.OrderWater.Commons.NativeMethods.WindowStyles.WS_EX_RIGHTSCROLLBAR">
            <summary>
            Places a vertical scroll bar (if present) to the right of the client area. This is the default.
            </summary>
        </member>
        <member name="F:WHC.OrderWater.Commons.NativeMethods.WindowStyles.WS_EX_CONTROLPARENT">
            <summary>
            Allows the user to navigate among the child windows of the window by using the TAB key.
            </summary>
        </member>
        <member name="F:WHC.OrderWater.Commons.NativeMethods.WindowStyles.WS_EX_STATICEDGE">
            <summary>
            Creates a window with a three-dimensional border style intended to be used for items that do not accept user input.
            </summary>
        </member>
        <member name="F:WHC.OrderWater.Commons.NativeMethods.WindowStyles.WS_EX_APPWINDOW">
            <summary>
            Forces a top-level window onto the taskbar when the window is visible.
            </summary>
        </member>
        <member name="F:WHC.OrderWater.Commons.NativeMethods.WindowStyles.WS_EX_OVERLAPPEDWINDOW">
            <summary>
            Combines the <see cref="F:WHC.OrderWater.Commons.NativeMethods.WindowStyles.WS_EX_CLIENTEDGE"/> and <see cref="F:WHC.OrderWater.Commons.NativeMethods.WindowStyles.WS_EX_WINDOWEDGE"/> styles.
            </summary>
        </member>
        <member name="F:WHC.OrderWater.Commons.NativeMethods.WindowStyles.WS_EX_PALETTEWINDOW">
            <summary>
            Combines the <see cref="F:WHC.OrderWater.Commons.NativeMethods.WindowStyles.WS_EX_WINDOWEDGE"/> and <see cref="F:WHC.OrderWater.Commons.NativeMethods.WindowStyles.WS_EX_TOPMOST"/> styles.
            </summary>
        </member>
        <member name="F:WHC.OrderWater.Commons.NativeMethods.WindowStyles.WS_EX_LAYERED">
            <summary>
            Windows 2000/XP: Creates a layered window. Note that this cannot be used for child windows. Also, this cannot be used if the window has a class style of either <see cref="!:CS_OWNDC"/> or <see cref="!:CS_CLASSDC"/>.
            </summary>
        </member>
        <member name="F:WHC.OrderWater.Commons.NativeMethods.WindowStyles.WS_EX_NOINHERITLAYOUT">
            <summary>
            Windows 2000/XP: A window created with this style does not pass its window layout to its child windows.
            </summary>
        </member>
        <member name="F:WHC.OrderWater.Commons.NativeMethods.WindowStyles.WS_EX_LAYOUTRTL">
            <summary>
            Arabic and Hebrew versions of Windows 98/Me, Windows 2000/XP: Creates a window whose horizontal origin is on the right edge. Increasing horizontal values advance to the left.
            </summary>
        </member>
        <member name="F:WHC.OrderWater.Commons.NativeMethods.WindowStyles.WS_EX_COMPOSITED">
            <summary>
            Windows XP: Paints all descendants of a window in bottom-to-top painting order using double-buffering. For more information, see Remarks. This cannot be used if the window has a class style of either <see cref="!:CS_OWNDC"/> or <see cref="!:CS_CLASSDC"/>.
            </summary>
        </member>
        <member name="F:WHC.OrderWater.Commons.NativeMethods.WindowStyles.WS_EX_NOACTIVATE">
            <summary>
            Windows 2000/XP: A top-level window created with this style does not become the foreground window when the user clicks it. The system does not bring this window to the foreground when the user minimizes or closes the foreground window.
            To activate the window, use the <see cref="M:WHC.OrderWater.Commons.NativeMethods.SetActiveWindow(System.IntPtr)"/> or <see cref="M:WHC.OrderWater.Commons.NativeMethods.SetForegroundWindow(System.IntPtr)"/> function.
            The window does not appear on the taskbar by default. To force the window to appear on the taskbar, use the <see cref="F:WHC.OrderWater.Commons.NativeMethods.WindowStyles.WS_EX_APPWINDOW"/> style.
            </summary>
        </member>
        <member name="T:WHC.OrderWater.Commons.EnumHelper">
            <summary>
            枚举操作公共类
            </summary>
        </member>
        <member name="M:WHC.OrderWater.Commons.EnumHelper.GetInstance``1(System.String)">
            <summary>
            通过字符串获取枚举成员实例
            </summary>
            <typeparam name="T">枚举名,比如Enum1</typeparam>
            <param name="member">枚举成员的常量名或常量值,
            范例:Enum1枚举有两个成员A=0,B=1,则传入"A"或"0"获取 Enum1.A 枚举类型</param>
        </member>
        <member name="M:WHC.OrderWater.Commons.EnumHelper.GetMemberKeyValue``1">
            <summary>
            获取枚举成员名称和成员值的键值对集合
            </summary>
            <typeparam name="T">枚举名,比如Enum1</typeparam>
        </member>
        <member name="M:WHC.OrderWater.Commons.EnumHelper.GetMemberNames``1">
            <summary>
            获取枚举所有成员名称
            </summary>
            <typeparam name="T">枚举名,比如Enum1</typeparam>
        </member>
        <member name="M:WHC.OrderWater.Commons.EnumHelper.GetMemberName``1(System.Object)">
            <summary>
            获取枚举成员的名称
            </summary>
            <typeparam name="T">枚举名,比如Enum1</typeparam>
            <param name="member">枚举成员实例或成员值,
            范例:Enum1枚举有两个成员A=0,B=1,则传入Enum1.A或0,获取成员名称"A"</param>
        </member>
        <member name="M:WHC.OrderWater.Commons.EnumHelper.GetMemberValues``1">
            <summary>
            获取枚举所有成员值
            </summary>
            <typeparam name="T">枚举名,比如Enum1</typeparam>
        </member>
        <member name="M:WHC.OrderWater.Commons.EnumHelper.GetMemberValue``1(System.String)">
            <summary>
            获取枚举成员的值
            </summary>
            <typeparam name="T">枚举名,比如Enum1</typeparam>
            <param name="memberName">枚举成员的常量名,
            范例:Enum1枚举有两个成员A=0,B=1,则传入"A"获取0</param>
        </member>
        <member name="M:WHC.OrderWater.Commons.EnumHelper.GetUnderlyingType(System.Type)">
            <summary>
            获取枚举的基础类型
            </summary>
            <param name="enumType">枚举类型</param>
        </member>
        <member name="M:WHC.OrderWater.Commons.EnumHelper.IsDefined``1(System.String)">
            <summary>
            检测枚举是否包含指定成员
            </summary>
            <typeparam name="T">枚举名,比如Enum1</typeparam>
            <param name="member">枚举成员名或成员值</param>
        </member>
        <member name="M:WHC.OrderWater.Commons.EnumHelper.GetDescription(System.Type,System.Object)">
            <summary>
            返回指定枚举类型的指定值的描述
            </summary>
            <param name="t">枚举类型</param>
            <param name="v">枚举值</param>
            <returns></returns>
        </member>
        <member name="T:WHC.OrderWater.Commons.ConvertHelper">
            <summary>
            处理数据类型转换，数制转换、编码转换相关的类
            </summary>
        </member>
        <member name="M:WHC.OrderWater.Commons.ConvertHelper.ConvertBase(System.String,System.Int32,System.Int32)">
            <summary>
            实现各进制数间的转换。ConvertBase("15",10,16)表示将十进制数15转换为16进制的数。
            </summary>
            <param name="value">要转换的值,即原值</param>
            <param name="from">原值的进制,只能是2,8,10,16四个值。</param>
            <param name="to">要转换到的目标进制，只能是2,8,10,16四个值。</param>
        </member>
        <member name="M:WHC.OrderWater.Commons.ConvertHelper.isBaseNumber(System.Int32)">
            <summary>
            判断是否是  2 8 10 16
            </summary>
            <param name="baseNumber"></param>
            <returns></returns>
        </member>
        <member name="M:WHC.OrderWater.Commons.ConvertHelper.StringToBytes(System.String)">
            <summary>
            将string转换成byte[]
            </summary>
            <param name="text">要转换的字符串</param>
        </member>
        <member name="M:WHC.OrderWater.Commons.ConvertHelper.StringToBytes(System.String,System.Text.Encoding)">
            <summary>
            使用指定字符集将string转换成byte[]
            </summary>
            <param name="text">要转换的字符串</param>
            <param name="encoding">字符编码</param>
        </member>
        <member name="M:WHC.OrderWater.Commons.ConvertHelper.BytesToString(System.Byte[])">
            <summary>
            将byte[]转换成string
            </summary>
            <param name="bytes">要转换的字节数组</param>
        </member>
        <member name="M:WHC.OrderWater.Commons.ConvertHelper.BytesToString(System.Byte[],System.Text.Encoding)">
            <summary>
            使用指定字符集将byte[]转换成string
            </summary>
            <param name="bytes">要转换的字节数组</param>
            <param name="encoding">字符编码</param>
        </member>
        <member name="M:WHC.OrderWater.Commons.ConvertHelper.BytesToInt32(System.Byte[])">
            <summary>
            将byte[]转换成int
            </summary>
            <param name="data">需要转换成整数的byte数组</param>
        </member>
        <member name="M:WHC.OrderWater.Commons.ConvertHelper.ToInt32``1(``0,System.Int32)">
            <summary>
            将数据转换为整型   转换失败返回默认值
            </summary>
            <typeparam name="T">数据类型</typeparam>
            <param name="data">数据</param>
            <param name="defValue">默认值</param>
            <returns></returns>
        </member>
        <member name="M:WHC.OrderWater.Commons.ConvertHelper.ToInt32(System.String,System.Int32)">
            <summary>
            将数据转换为整型   转换失败返回默认值
            </summary>
            <param name="data">数据</param>
            <param name="defValue">默认值</param>
            <returns></returns>
        </member>
        <member name="M:WHC.OrderWater.Commons.ConvertHelper.ToInt32(System.Object,System.Int32)">
            <summary>
            将数据转换为整型  转换失败返回默认值
            </summary>
            <param name="data">数据</param>
            <param name="defValue">默认值</param>
            <returns></returns>
        </member>
        <member name="M:WHC.OrderWater.Commons.ConvertHelper.ToBoolean``1(``0,System.Boolean)">
            <summary>
            将数据转换为布尔类型  转换失败返回默认值
            </summary>
            <typeparam name="T">数据类型</typeparam>
            <param name="data">数据</param>
            <param name="defValue">默认值</param>
            <returns></returns>
        </member>
        <member name="M:WHC.OrderWater.Commons.ConvertHelper.ToBoolean(System.String,System.Boolean)">
            <summary>
            将数据转换为布尔类型  转换失败返回 默认值
            </summary>
            <param name="data">数据</param>
            <param name="defValue">默认值</param>
            <returns></returns>
        </member>
        <member name="M:WHC.OrderWater.Commons.ConvertHelper.ToBoolean(System.Object,System.Boolean)">
            <summary>
            将数据转换为布尔类型  转换失败返回 默认值
            </summary>
            <param name="data">数据</param>
            <param name="defValue">默认值</param>
            <returns></returns>
        </member>
        <member name="M:WHC.OrderWater.Commons.ConvertHelper.ToFloat``1(``0,System.Single)">
            <summary>
            将数据转换为单精度浮点型  转换失败 返回默认值
            </summary>
            <typeparam name="T">数据类型</typeparam>
            <param name="data">数据</param>
            <param name="defValue">默认值</param>
            <returns></returns>
        </member>
        <member name="M:WHC.OrderWater.Commons.ConvertHelper.ToFloat(System.Object,System.Single)">
            <summary>
            将数据转换为单精度浮点型   转换失败返回默认值
            </summary>
            <param name="data">数据</param>
            <param name="defValue">默认值</param>
            <returns></returns>
        </member>
        <member name="M:WHC.OrderWater.Commons.ConvertHelper.ToFloat(System.String,System.Single)">
            <summary>
            将数据转换为单精度浮点型   转换失败返回默认值
            </summary>
            <param name="data">数据</param>
            <param name="defValue">默认值</param>
            <returns></returns>
        </member>
        <member name="M:WHC.OrderWater.Commons.ConvertHelper.ToDouble``1(``0,System.Double)">
            <summary>
            将数据转换为双精度浮点型   转换失败返回默认值
            </summary>
            <typeparam name="T">数据的类型</typeparam>
            <param name="data">要转换的数据</param>
            <param name="defValue">默认值</param>
            <returns></returns>
        </member>
        <member name="M:WHC.OrderWater.Commons.ConvertHelper.ToDouble``1(``0,System.Int32,System.Double)">
            <summary>
            将数据转换为双精度浮点型,并设置小数位   转换失败返回默认值
            </summary>
            <typeparam name="T">数据的类型</typeparam>
            <param name="data">要转换的数据</param>
            <param name="decimals">小数的位数</param>
            <param name="defValue">默认值</param>
            <returns></returns>
        </member>
        <member name="M:WHC.OrderWater.Commons.ConvertHelper.ToDouble(System.Object,System.Double)">
            <summary>
            将数据转换为双精度浮点型  转换失败返回默认值
            </summary>
            <param name="data">要转换的数据</param>
            <param name="defValue">默认值</param>
            <returns></returns>
        </member>
        <member name="M:WHC.OrderWater.Commons.ConvertHelper.ToDouble(System.String,System.Double)">
            <summary>
            将数据转换为双精度浮点型  转换失败返回默认值
            </summary>
            <param name="data">要转换的数据</param>
            <param name="defValue">默认值</param>
            <returns></returns>
        </member>
        <member name="M:WHC.OrderWater.Commons.ConvertHelper.ToDouble(System.Object,System.Int32,System.Double)">
            <summary>
            将数据转换为双精度浮点型,并设置小数位  转换失败返回默认值
            </summary>
            <param name="data">要转换的数据</param>
            <param name="decimals">小数的位数</param>
            <param name="defValue">默认值</param>
            <returns></returns>
        </member>
        <member name="M:WHC.OrderWater.Commons.ConvertHelper.ToDouble(System.String,System.Int32,System.Double)">
            <summary>
            将数据转换为双精度浮点型,并设置小数位  转换失败返回默认值
            </summary>
            <param name="data">要转换的数据</param>
            <param name="decimals">小数的位数</param>
            <param name="defValue">默认值</param>
            <returns></returns>
        </member>
        <member name="M:WHC.OrderWater.Commons.ConvertHelper.ConvertTo(System.Object,System.Type)">
            <summary>
            将数据转换为指定类型
            </summary>
            <param name="data">转换的数据</param>
            <param name="targetType">转换的目标类型</param>
        </member>
        <member name="M:WHC.OrderWater.Commons.ConvertHelper.ConvertTo``1(System.Object)">
            <summary>
            将数据转换为指定类型
            </summary>
            <typeparam name="T">转换的目标类型</typeparam>
            <param name="data">转换的数据</param>
        </member>
        <member name="M:WHC.OrderWater.Commons.ConvertHelper.ToDecimal``1(``0,System.Decimal)">
            <summary>
            将数据转换为Decimal  转换失败返回默认值
            </summary>
            <typeparam name="T">数据类型</typeparam>
            <param name="data">数据</param>
            <param name="defValue">默认值</param>
            <returns></returns>
        </member>
        <member name="M:WHC.OrderWater.Commons.ConvertHelper.ToDecimal(System.Object,System.Decimal)">
            <summary>
            将数据转换为Decimal  转换失败返回 默认值
            </summary>
            <param name="data">数据</param>
            <param name="defValue">默认值</param>
            <returns></returns>
        </member>
        <member name="M:WHC.OrderWater.Commons.ConvertHelper.ToDecimal(System.String,System.Decimal)">
            <summary>
            将数据转换为Decimal  转换失败返回 默认值
            </summary>
            <param name="data">数据</param>
            <param name="defValue">默认值</param>
            <returns></returns>
        </member>
        <member name="M:WHC.OrderWater.Commons.ConvertHelper.ToDateTime``1(``0,System.DateTime)">
            <summary>
            将数据转换为DateTime  转换失败返回默认值
            </summary>
            <typeparam name="T">数据类型</typeparam>
            <param name="data">数据</param>
            <param name="defValue">默认值</param>
            <returns></returns>
        </member>
        <member name="M:WHC.OrderWater.Commons.ConvertHelper.ToDateTime(System.Object,System.DateTime)">
            <summary>
            将数据转换为DateTime  转换失败返回 默认值
            </summary>
            <param name="data">数据</param>
            <param name="defValue">默认值</param>
            <returns></returns>
        </member>
        <member name="M:WHC.OrderWater.Commons.ConvertHelper.ToDateTime(System.String,System.DateTime)">
            <summary>
            将数据转换为DateTime  转换失败返回 默认值
            </summary>
            <param name="data">数据</param>
            <param name="defValue">默认值</param>
            <returns></returns>
        </member>
        <member name="M:WHC.OrderWater.Commons.ConvertHelper.ConvertToSBC(System.String)">
             <summary>
             转全角的函数(SBC case)
             </summary>
             <param name="input">任意字符串</param>
             <returns>全角字符串</returns>
            <remarks>
            全角空格为12288，半角空格为32
            其他字符半角(33-126)与全角(65281-65374)的对应关系是：均相差65248
            </remarks>
        </member>
        <member name="M:WHC.OrderWater.Commons.ConvertHelper.ConvertToDBC(System.String)">
             <summary> 转半角的函数(DBC case) </summary>
             <param name="input">任意字符串</param>
             <returns>半角字符串</returns>
            <remarks>
            全角空格为12288，半角空格为32
            其他字符半角(33-126)与全角(65281-65374)的对应关系是：均相差65248
            </remarks>
        </member>
        <member name="T:WHC.OrderWater.Commons.ClipboardHepler">
            <summary>Provides methods for manipulating the Clipboard.</summary>
        </member>
        <member name="M:WHC.OrderWater.Commons.ClipboardHepler.Clear">
            <summary>Clears the Clipboard.</summary>
        </member>
        <member name="M:WHC.OrderWater.Commons.ClipboardHepler.ContainsAudio">
            <summary>Indicates whether the Clipboard contains audio data.</summary>
            <returns>True if audio data is stored on the Clipboard; otherwise False.</returns>
            <PermissionSet><IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" /><IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" /><IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence" /></PermissionSet>
        </member>
        <member name="M:WHC.OrderWater.Commons.ClipboardHepler.ContainsData(System.String)">
            <summary>Indicates whether the Clipboard contains data in the specified custom format.</summary>
            <returns>True if data in the specified custom format is stored on the Clipboard; otherwise False.</returns>
            <param name="format">String. Name of the custom format to be checked. Required. </param>
            <PermissionSet><IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" /><IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" /><IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence" /></PermissionSet>
        </member>
        <member name="M:WHC.OrderWater.Commons.ClipboardHepler.ContainsFileDropList">
            <summary>Returns a Boolean indicating whether the Clipboard contains a file drop list.</summary>
            <returns>True if a file drop list is stored on the Clipboard; otherwise False.</returns>
            <PermissionSet><IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" /><IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" /><IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence" /></PermissionSet>
        </member>
        <member name="M:WHC.OrderWater.Commons.ClipboardHepler.ContainsImage">
            <summary>Returns a Boolean indicating whether an image is stored on the Clipboard.</summary>
            <returns>True if an image is stored on the Clipboard; otherwise False.</returns>
            <PermissionSet><IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" /><IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" /><IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence" /></PermissionSet>
        </member>
        <member name="M:WHC.OrderWater.Commons.ClipboardHepler.ContainsText">
            <summary>Determines if there is text on the Clipboard.</summary>
            <returns>True if the Clipboard contains text; otherwise False.</returns>
            <PermissionSet><IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" /><IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" /><IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence" /></PermissionSet>
        </member>
        <member name="M:WHC.OrderWater.Commons.ClipboardHepler.ContainsText(System.Windows.Forms.TextDataFormat)">
            <summary>Determines if there is text on the Clipboard.</summary>
            <returns>True if the Clipboard contains text; otherwise False.</returns>
            <param name="format"><see cref="T:System.Windows.Forms.TextDataFormat"></see>. If specified, identifies what text format to be checked for. Required. </param>
            <PermissionSet><IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" /><IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" /><IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence" /></PermissionSet>
        </member>
        <member name="M:WHC.OrderWater.Commons.ClipboardHepler.GetAudioStream">
            <summary>Retrieves an audio stream from the Clipboard.</summary>
            <returns><see cref="T:System.IO.Stream"></see></returns>
            <PermissionSet><IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" /><IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" /><IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence" /></PermissionSet>
        </member>
        <member name="M:WHC.OrderWater.Commons.ClipboardHepler.GetData(System.String)">
            <summary>Retrieves data in a custom format from the Clipboard.</summary>
            <returns>Object.</returns>
            <param name="format">String. Name of the data format. Required. </param>
            <PermissionSet><IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" /><IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" /><IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence" /></PermissionSet>
        </member>
        <member name="M:WHC.OrderWater.Commons.ClipboardHepler.GetDataObject">
            <summary>Retrieves data from the Clipboard as an <see cref="T:System.Windows.Forms.IDataObject"></see>.</summary>
            <returns><see cref="T:System.Windows.Forms.IDataObject"></see></returns>
            <PermissionSet><IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" /><IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" /><IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence" /></PermissionSet>
        </member>
        <member name="M:WHC.OrderWater.Commons.ClipboardHepler.GetFileDropList">
            <summary>Retrieves a collection of strings representing file names from the Clipboard.</summary>
            <returns><see cref="T:System.Collections.Specialized.StringCollection"></see></returns>
            <PermissionSet><IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" /><IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" /><IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence" /></PermissionSet>
        </member>
        <member name="M:WHC.OrderWater.Commons.ClipboardHepler.GetImage">
            <summary>Retrieves an image from the Clipboard.</summary>
            <returns><see cref="T:System.Drawing.Image"></see></returns>
            <filterpriority>1</filterpriority>
            <PermissionSet><IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" /><IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" /><IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence" /></PermissionSet>
        </member>
        <member name="M:WHC.OrderWater.Commons.ClipboardHepler.GetText">
            <summary>Retrieves text from the Clipboard.</summary>
            <returns>String.</returns>
            <PermissionSet><IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" /><IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" /><IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence" /></PermissionSet>
        </member>
        <member name="M:WHC.OrderWater.Commons.ClipboardHepler.GetText(System.Windows.Forms.TextDataFormat)">
            <summary>Retrieves text from the Clipboard.</summary>
            <returns>String.</returns>
            <param name="format"><see cref="T:System.Windows.Forms.TextDataFormat"></see>. If specified, identifies what text format should be retrieved. Default is <see cref="F:System.Windows.Forms.TextDataFormat.CommaSeparatedValue"></see>. Required. </param>
            <PermissionSet><IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" /><IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" /><IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence" /></PermissionSet>
        </member>
        <member name="M:WHC.OrderWater.Commons.ClipboardHepler.SetAudio(System.IO.Stream)">
            <summary>Writes audio data to the Clipboard.</summary>
            <param name="audioStream"><see cref="T:System.IO.Stream"></see> Audio data to be written to the clipboard. Required. </param>
        </member>
        <member name="M:WHC.OrderWater.Commons.ClipboardHepler.SetAudio(System.Byte[])">
            <summary>Writes audio data to the Clipboard.</summary>
            <param name="audioBytes">Byte array. Audio data to be written to the Clipboard. Required. </param>
        </member>
        <member name="M:WHC.OrderWater.Commons.ClipboardHepler.SetData(System.String,System.Object)">
            <summary>Writes data in a custom format to the Clipboard.</summary>
            <param name="data">Object. Data object to be written to the Clipboard. Required. </param>
            <param name="format">String. Format of data. Required. </param>
        </member>
        <member name="M:WHC.OrderWater.Commons.ClipboardHepler.SetDataObject(System.Windows.Forms.DataObject)">
            <summary>Writes a <see cref="T:System.Windows.Forms.DataObject"></see> to the Clipboard.</summary>
            <param name="data"><see cref="T:System.Windows.Forms.DataObject"></see>. Data object to be written to the Clipboard. Required. </param>
        </member>
        <member name="M:WHC.OrderWater.Commons.ClipboardHepler.SetFileDropList(System.Collections.Specialized.StringCollection)">
            <summary>Writes a collection of strings representing file paths to the Clipboard.</summary>
            <param name="filePaths"><see cref="T:System.Collections.Specialized.StringCollection"></see>. List of file names. Required. </param>
        </member>
        <member name="M:WHC.OrderWater.Commons.ClipboardHepler.SetImage(System.Drawing.Image)">
            <summary>Writes an image to the Clipboard.</summary>
            <param name="image"><see cref="T:System.Drawing.Image"></see>. Image to be written. Required. </param>
        </member>
        <member name="M:WHC.OrderWater.Commons.ClipboardHepler.SetText(System.String)">
            <summary>Writes text to the Clipboard.</summary>
            <param name="text">String. Text to be written. Required. </param>
        </member>
        <member name="M:WHC.OrderWater.Commons.ClipboardHepler.SetText(System.String,System.Windows.Forms.TextDataFormat)">
            <summary>Writes text to the Clipboard.</summary>
            <param name="format"><see cref="T:System.Windows.Forms.TextDataFormat"></see>. Format to be used when writing text. Default is <see cref="F:System.Windows.Forms.TextDataFormat.UnicodeText"></see>. Required. </param>
            <param name="text">String. Text to be written. Required. </param>
        </member>
        <member name="M:WHC.OrderWater.Commons.ClipboardHepler.SafeSetClipboard(System.Object)">
            <summary>
            线程安全的设置内容
            </summary>
            <param name="dataObject"></param>
        </member>
        <member name="T:WHC.OrderWater.Commons.OleDbHelper">
            <summary>
            常用的Access数据库Sql操作辅助类库
            </summary>
        </member>
        <member name="M:WHC.OrderWater.Commons.OleDbHelper.#ctor(System.String)">
            <summary>
            构造函数
            </summary>
            <param name="accessFilePath"></param>
        </member>
        <member name="M:WHC.OrderWater.Commons.OleDbHelper.TestConnection">
            <summary>
            测试数据库是否正常连接
            </summary>
            <returns></returns>
        </member>
        <member name="M:WHC.OrderWater.Commons.OleDbHelper.ExecuteNonQuery(System.Collections.Generic.List{System.String})">
            <summary>
            执行Sql，并返回成功的数量
            </summary>
            <param name="sqlList">待执行的Sql列表</param>
            <returns></returns>
        </member>
        <member name="M:WHC.OrderWater.Commons.OleDbHelper.ExecuteNoQuery(System.String)">
            <summary>
            执行无返回值的语句，成功返回True，否则False
            </summary>
            <param name="sql">待执行的Sql</param>
            <returns></returns>
        </member>
        <member name="M:WHC.OrderWater.Commons.OleDbHelper.ExecuteScalar(System.String)">
            <summary>
            执行单返回值的语句
            </summary>
            <param name="sql">待执行的Sql</param>
            <returns></returns>
        </member>
        <member name="M:WHC.OrderWater.Commons.OleDbHelper.ExecuteReader(System.String)">
            <summary>
            执行Sql，并返回IDataReader对象。
            </summary>
            <param name="sql">待执行的Sql</param>
            <returns></returns>
        </member>
        <member name="M:WHC.OrderWater.Commons.OleDbHelper.ExecuteDataSet(System.String)">
            <summary>
            执行Sql并返回DataSet集合
            </summary>
            <param name="sql">待执行的Sql</param>
            <returns></returns>
        </member>
        <member name="T:WHC.OrderWater.Commons.Threading.DelegateHelper">
            <summary>
            Help functions for Delgates.
            </summary>
        </member>
        <member name="M:WHC.OrderWater.Commons.Threading.DelegateHelper.InvokeDelegate(System.Delegate,System.Object[])">
            <summary>
            Executes the delegate.
            </summary>
            <param name="target">The target.</param>
            <param name="args">The args.</param>
        </member>
        <member name="M:WHC.OrderWater.Commons.Threading.DelegateHelper.InvokeDelegate(System.Delegate)">
            <summary>
            Executes the delegate.
            </summary>
            <param name="target">The target.</param>
        </member>
        <member name="M:WHC.OrderWater.Commons.Threading.DelegateHelper.AbortDelegate(WHC.OrderWater.Commons.Threading.WorkItem)">
            <summary>
            Aborts the specified Queue delegate..
            </summary>
            <param name="target">The target.</param>
            <returns>Status of abort operation on item queue</returns>
        </member>
        <member name="M:WHC.OrderWater.Commons.Threading.DelegateHelper.DynamicInvoke(System.Object)">
            <summary>
            Dynamically invoke the delegate.
            </summary>
            <param name="obj">The obj.</param>
        </member>
        <member name="T:WHC.OrderWater.Commons.SafeToolStripLabel">
            <summary>
            Provides a Sate Text property for a ToolStripStatusLabel
            </summary>
        </member>
        <member name="T:WHC.OrderWater.Commons.MouseHelper">
            <summary>
            模拟鼠标点击
            </summary>
        </member>
        <member name="M:WHC.OrderWater.Commons.MouseHelper.GetDoubleClickTime">
            <summary>
            连续两次鼠标单击之间会被处理成双击事件的间隔时间。
            </summary>
            <returns>以毫秒表示的双击时间</returns>
        </member>
        <member name="M:WHC.OrderWater.Commons.MouseHelper.GetCursorPos(System.Drawing.Point)">
            <summary>
            检取光标的位置，以屏幕坐标表示。
            </summary>
            <param name="lpPoint">POINT结构指针，该结构接收光标的屏幕坐标。</param>
            <returns>如果成功，返回值非零；如果失败，返回值为零。</returns>
        </member>
        <member name="M:WHC.OrderWater.Commons.MouseHelper.SetCursorPos(System.Int32,System.Int32)">
            <summary>
            把光标移到屏幕的指定位置。如果新位置不在由 ClipCursor函数设置的屏幕矩形区域之内，则系统自动调整坐标，使得光标在矩形之内。
            </summary>
            <param name="x">指定光标的新的X坐标，以屏幕坐标表示。</param>
            <param name="y">指定光标的新的Y坐标，以屏幕坐标表示。</param>
            <returns>如果成功，返回非零值；如果失败，返回值是零</returns>
        </member>
        <member name="M:WHC.OrderWater.Commons.MouseHelper.MouseClick">
            <summary>
            在当前鼠标的位置左键点击一下
            </summary>
        </member>
        <member name="M:WHC.OrderWater.Commons.MouseHelper.MouseClick(System.Drawing.Point)">
            <summary>
            移动到坐标位置点击
            </summary>
            <param name="location">要点击的坐标位置,屏幕绝对值</param>
        </member>
        <member name="M:WHC.OrderWater.Commons.MouseHelper.MouseRightClick(System.Drawing.Point)">
            <summary>
            移动到坐标位置点击
            </summary>
            <param name="location">要点击的坐标位置,屏幕绝对值</param>
        </member>
        <member name="M:WHC.OrderWater.Commons.MouseHelper.MouseMove(System.Drawing.Point)">
            <summary>
            移动到坐标位置
            </summary>
        </member>
        <member name="P:WHC.OrderWater.Commons.MouseHelper.MousePresent">
            <summary>
            检查鼠标是否已经安装.
            </summary>
        </member>
        <member name="P:WHC.OrderWater.Commons.MouseHelper.WheelExists">
            <summary>
            检查鼠标是否存在滚轮
            </summary>
        </member>
        <member name="P:WHC.OrderWater.Commons.MouseHelper.WheelScrollLines">
            <summary>
            获取鼠标滚轮每次滚动的行数
            </summary>
        </member>
        <member name="T:WHC.OrderWater.Commons.SysTray">
            <summary>
            SysTray class that can be used to display animated icons or text in the system tray
            http://blogs.msdn.com/abhinaba/archive/2005/09/12/464150.aspx
            by Abhinaba
            </summary>
        </member>
        <member name="M:WHC.OrderWater.Commons.SysTray.#ctor(System.String,System.Drawing.Icon,System.Windows.Forms.ContextMenu)">
            <summary>
            The constructor
            </summary>
            <param name="text">The toolip text</param>
            <param name="icon">The icon that will be shown by default, can be null</param>
            <param name="menu">The context menu to be opened on right clicking on the
                               icon in the tray. This can be null.</param>
        </member>
        <member name="M:WHC.OrderWater.Commons.SysTray.ShowText(System.String)">
            <summary>
            Shows text instead of icon in the tray
            </summary>
            <param name="text">The text to be displayed on the tray.
                               Make this only 1 or 2 characters. E.g. "23"</param>
        </member>
        <member name="M:WHC.OrderWater.Commons.SysTray.ShowText(System.String,System.Drawing.Color)">
            <summary>
            Shows text instead of icon in the tray
            </summary>
            <param name="text">Same as above</param>
            <param name="col">Color to be used to display the text in the tray</param>
        </member>
        <member name="M:WHC.OrderWater.Commons.SysTray.ShowText(System.String,System.Drawing.Font)">
            <summary>
            Shows text instead of icon in the tray
            </summary>
            <param name="text">Same as above</param>
            <param name="font">The default color will be used but in user given font</param>
        </member>
        <member name="M:WHC.OrderWater.Commons.SysTray.ShowText(System.String,System.Drawing.Font,System.Drawing.Color)">
            <summary>
            Shows text instead of icon in the tray
            </summary>
            <param name="text">the text to be displayed</param>
            <param name="font">The font to be used</param>
            <param name="col">The color to be used</param>
        </member>
        <member name="M:WHC.OrderWater.Commons.SysTray.SetAnimationClip(System.Drawing.Icon[])">
            <summary>
            Sets the animation clip that will be displayed in the system tray
            </summary>
            <param name="icons">The array of icons which forms each frame of the animation
                                This'll work by showing one icon after another in the array.
                                Each of the icons must be 16x16 pixels </param>
        </member>
        <member name="M:WHC.OrderWater.Commons.SysTray.SetAnimationClip(System.Drawing.Bitmap[])">
            <summary>
            Sets the animation clip that will be displayed in the system tray
            </summary>
            <param name="icons">The array of bitmaps which forms each frame of the animation
                                This'll work by showing one bitmap after another in the array.
                                Each of the bitmaps must be 16x16 pixels  </param>
        </member>
        <member name="M:WHC.OrderWater.Commons.SysTray.SetAnimationClip(System.Drawing.Bitmap)">
            <summary>
            Sets the animation clip that will be displayed in the system tray
            </summary>
            <param name="icons">The bitmap strip that contains the frames of animation.
                                This can be created by creating a image of size 16*n by 16 pixels
                                Where n is the number of frames. Then in the first 16x16 pixel put
                                first image and then from 16 to 32 pixel put the second image and so on</param>
        </member>
        <member name="M:WHC.OrderWater.Commons.SysTray.StartAnimation(System.Int32,System.Int32)">
            <summary>
            Start showing the animation. This needs to be called after
            setting the clip using any of the above methods
            </summary>
            <param name="loop">whether to loop infinitely or stop after one iteration</param>
            <param name="interval">Interval in millisecond in between each frame. Typicall 100</param>
        </member>
        <member name="M:WHC.OrderWater.Commons.SysTray.StopAnimation">
            <summary>
            Stop animation started with StartAnimation with loop = true
            </summary>
        </member>
        <member name="T:WHC.OrderWater.Commons.Win32Window">
            <summary>
            Encapsulates window functions that aren't in the framework.
            NOTE: This class is not thread-safe.
            </summary>
        </member>
        <member name="F:WHC.OrderWater.Commons.Win32Window.GWL_EXSTYLE">
             <summary>
             Turn this window into a tool window, so it doesn't show up in the Alt-tab list...
             </summary>
            
        </member>
        <member name="M:WHC.OrderWater.Commons.Win32Window.GetThreadWindows(System.Int32)">
            <summary>
            Return all windows of a given thread
            </summary>
            <param name="threadId">The thread id</param>
            <returns></returns>
        </member>
        <member name="M:WHC.OrderWater.Commons.Win32Window.FindWindow(System.String,System.String)">
            <summary>
            Find a window by name or class
            </summary>
            <param name="className">Name of the class, or null</param>
            <param name="windowName">Name of the window, or null</param>
            <returns></returns>
        </member>
        <member name="M:WHC.OrderWater.Commons.Win32Window.IsChild(WHC.OrderWater.Commons.Win32Window,WHC.OrderWater.Commons.Win32Window)">
            <summary>
            Tests whether one window is a child of another
            </summary>
            <param name="parent">Parent window</param>
            <param name="window">Window to test</param>
            <returns></returns>
        </member>
        <member name="M:WHC.OrderWater.Commons.Win32Window.#ctor(System.IntPtr)">
            <summary>
            Create a Win32Window
            </summary>
            <param name="window">The window handle</param>
        </member>
        <member name="M:WHC.OrderWater.Commons.Win32Window.BringWindowToTop">
            <summary>
            Bring a window to the top
            </summary>
        </member>
        <member name="M:WHC.OrderWater.Commons.Win32Window.FindChild(System.String,System.String)">
            <summary>
            Find a child of this window
            </summary>
            <param name="className">Name of the class, or null</param>
            <param name="windowName">Name of the window, or null</param>
            <returns></returns>
        </member>
        <member name="M:WHC.OrderWater.Commons.Win32Window.SendMessage(System.Int32,System.Int32,System.Int32)">
            <summary>
            Send a windows message to this window
            </summary>
            <param name="message"></param>
            <param name="wparam"></param>
            <param name="lparam"></param>
            <returns></returns>
        </member>
        <member name="M:WHC.OrderWater.Commons.Win32Window.PostMessage(System.Int32,System.Int32,System.Int32)">
            <summary>
            Post a windows message to this window
            </summary>
            <param name="message"></param>
            <param name="wparam"></param>
            <param name="lparam"></param>
            <returns></returns>
        </member>
        <member name="M:WHC.OrderWater.Commons.Win32Window.SendMessage(System.Int32,System.Int32,System.String)">
            <summary>
            Send a windows message to this window
            </summary>
            <param name="wMsg"></param>
            <param name="wParam"></param>
            <param name="lpstring"></param>
            <returns></returns>
        </member>
        <member name="M:WHC.OrderWater.Commons.Win32Window.MakeLParam(System.Int32,System.Int32)">
            <summary>
            MakeLParam Macro
            </summary>
        </member>
        <member name="M:WHC.OrderWater.Commons.Win32Window.GetWindowLong(System.Int32)">
            <summary>
            Get a long value for this window. See GetWindowLong()
            </summary>
            <param name="index"></param>
            <returns></returns>
        </member>
        <member name="M:WHC.OrderWater.Commons.Win32Window.SetWindowLong(System.Int32,System.Int32)">
            <summary>
            Set a long value for this window. See SetWindowLong()
            </summary>
            <param name="index"></param>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="P:WHC.OrderWater.Commons.Win32Window.TopLevelWindows">
            <summary>
            All top level windows
            </summary>
        </member>
        <member name="P:WHC.OrderWater.Commons.Win32Window.DesktopWindow">
            <summary>
            The deskop window
            </summary>
        </member>
        <member name="P:WHC.OrderWater.Commons.Win32Window.ForegroundWindow">
            <summary>
            The current foreground window
            </summary>
        </member>
        <member name="P:WHC.OrderWater.Commons.Win32Window.Window">
            <summary>
            Extract the window handle
            </summary>
        </member>
        <member name="P:WHC.OrderWater.Commons.Win32Window.IsNull">
            <summary>
            Return true if this window is null
            </summary>
        </member>
        <member name="P:WHC.OrderWater.Commons.Win32Window.Children">
            <summary>
            The children of this window, as an ArrayList
            </summary>
        </member>
        <member name="P:WHC.OrderWater.Commons.Win32Window.Parent">
            <summary>
            Get the parent of this window. Null if this is a top-level window
            </summary>
        </member>
        <member name="P:WHC.OrderWater.Commons.Win32Window.LastActivePopup">
            <summary>
            Get the last (topmost) active popup
            </summary>
        </member>
        <member name="P:WHC.OrderWater.Commons.Win32Window.Text">
            <summary>
            The text in this window
            </summary>
        </member>
        <member name="P:WHC.OrderWater.Commons.Win32Window.ThreadId">
            <summary>
            The id of the thread that owns this window
            </summary>
        </member>
        <member name="P:WHC.OrderWater.Commons.Win32Window.ProcessId">
            <summary>
            The id of the process that owns this window
            </summary>
        </member>
        <member name="P:WHC.OrderWater.Commons.Win32Window.WindowPlacement">
            <summary>
            The placement of this window
            </summary>
        </member>
        <member name="P:WHC.OrderWater.Commons.Win32Window.Minimized">
            <summary>
            Whether the window is minimized
            </summary>
        </member>
        <member name="P:WHC.OrderWater.Commons.Win32Window.Maximized">
            <summary>
            Whether the window is maximized
            </summary>
        </member>
        <member name="T:WHC.OrderWater.Commons.Threading.DisposeState">
            <summary>
            State of Object Implementing <see cref="T:System.IDisposable"/> Interface
            </summary>
            <remarks>Used to Store Disposing State Of Object.</remarks>
        </member>
        <member name="F:WHC.OrderWater.Commons.Threading.DisposeState.None">
            <summary>
            Object is Fully Initialized.
            </summary>
        </member>
        <member name="F:WHC.OrderWater.Commons.Threading.DisposeState.Disposing">
            <summary>
            Object is Trying to be Dispose.
            </summary>
        </member>
        <member name="F:WHC.OrderWater.Commons.Threading.DisposeState.Disposed">
            <summary>
            Object is Fully Disposed
            </summary>
        </member>
        <member name="M:WHC.OrderWater.Commons.ShellIcon.GetTypeInfo(System.String)">
            <summary>
            获取扩展名信息
            </summary>
            <param name="ext"></param>
            <returns></returns>
        </member>
        <member name="M:WHC.OrderWater.Commons.ShellIcon.GetSmallTypeIcon(System.String)">
            <summary>
            获取扩展名的图标
            </summary>
            <param name="ext"></param>
            <returns></returns>
        </member>
        <member name="M:WHC.OrderWater.Commons.ShellIcon.GetSmallIcon(System.String)">
            <summary>
            获取文件的小图标
            </summary>
            <param name="fileName"></param>
            <returns></returns>
        </member>
        <member name="M:WHC.OrderWater.Commons.ShellIcon.GetLargeIcon(System.String)">
            <summary>
            获取文件的大图标
            </summary>
            <param name="fileName"></param>
            <returns></returns>
        </member>
        <member name="T:WHC.OrderWater.Commons.RandomChinese">
            <summary>
            随机汉字辅助类
            </summary>
        </member>
        <!-- 对于成员“M:WHC.OrderWater.Commons.RandomChinese.GetRandomChinese(System.Int32)”忽略有格式错误的 XML 注释 -->
        <member name="M:WHC.OrderWater.Commons.RandomChinese.CreateRegionCode(System.Int32)">
                    此函数在汉字编码范围内随机创建含两个元素的十六进制字节数组，每个字节数组代表一个汉字，并将 
                    四个字节数组存储在object数组中。 
                    参数：strlength，代表需要产生的汉字个数 
                    *
        </member>
        <member name="M:WHC.OrderWater.Commons.RandomChinese.GetRandomChars(System.Int32,System.Int32[])">
            <summary>
            <param name="Length">字符串长度</param>
            <param name="Seed">随机函数种子值</param>
            <returns>指定长度的随机字符串</returns>
            </summary> 
        </member>
        <member name="M:WHC.OrderWater.Commons.RandomChinese.GetRandomChinese2(System.Int32)">
            <summary>
            此函数为生成指定数目的汉字
            </summary>
            <param name="charLen">汉字数目</param>
            <returns>所有汉字</returns>
        </member>
        <member name="M:WHC.OrderWater.Commons.RandomChinese.GetRandomNumber(System.Int32)">
            <summary>
            生成随机数字
            </summary>
            <param name="length">生成长度</param>
            <returns></returns>
        </member>
        <member name="M:WHC.OrderWater.Commons.RandomChinese.GetRandomNumber(System.Int32,System.Boolean)">
            <summary>
            生成随机数字
            </summary>
            <param name="Length">生成长度</param>
            <param name="Sleep">是否要在生成前将当前线程阻止以避免重复</param>
            <returns></returns>
        </member>
        <member name="M:WHC.OrderWater.Commons.RandomChinese.GetRandomPureChar(System.Int32)">
            <summary>
            生成随机纯字母随机数
            </summary>
            <param name="IntStr">生成长度</param>
            <returns></returns>
        </member>
        <member name="M:WHC.OrderWater.Commons.RandomChinese.GetRandomPureChar(System.Int32,System.Boolean)">
            <summary>
            生成随机纯字母随机数
            </summary>
            <param name="Length">生成长度</param>
            <param name="Sleep">是否要在生成前将当前线程阻止以避免重复</param>
            <returns></returns>
        </member>
        <member name="T:WHC.OrderWater.Commons.KeyboardHelper">
            <summary>
            Provides properties for accessing the current state of the keyboard, 
            such as what keys are currently pressed, and provides a method to send keystrokes to the active window.
            </summary>
        </member>
        <member name="M:WHC.OrderWater.Commons.KeyboardHelper.SendKeys(System.String)">
            <summary>Sends one or more keystrokes to the active window, as if typed on the keyboard.</summary>
            <param name="keys">A String that defines the keys to send.</param>
        </member>
        <member name="M:WHC.OrderWater.Commons.KeyboardHelper.SendKeys(System.String,System.Boolean)">
            <summary>Sends one or more keystrokes to the active window, as if typed on the keyboard.</summary>
            <param name="keys">A String that defines the keys to send.</param>
            <param name="wait">Optional. A Boolean that specifies whether or not to wait for keystrokes to get processed before the application continues. True by default.</param>
            <filterpriority>1</filterpriority>
            <PermissionSet><IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" /><IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" /><IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence" /></PermissionSet>
        </member>
        <member name="P:WHC.OrderWater.Commons.KeyboardHelper.AltKeyDown">
            <summary>Gets a Boolean indicating if the ALT key is down.</summary>
            <returns>A Boolean value: True if the ALT key is down; otherwise False.</returns>
        </member>
        <member name="P:WHC.OrderWater.Commons.KeyboardHelper.CapsLock">
            <summary>Gets a Boolean indicating if CAPS LOCK is turned on. </summary>
            <returns>A Boolean value: True if CAPS LOCK is turned on; otherwise False.</returns>
            <filterpriority>1</filterpriority>
        </member>
        <member name="P:WHC.OrderWater.Commons.KeyboardHelper.CtrlKeyDown">
            <summary>Gets a Boolean indicating if a CTRL key is down.</summary>
            <returns>A Boolean value. True if a CTRL key is down; otherwise False.</returns>
            <filterpriority>1</filterpriority>
        </member>
        <member name="P:WHC.OrderWater.Commons.KeyboardHelper.NumLock">
            <summary>Gets a Boolean indicating if the NUM LOCK key is on. </summary>
            <returns>A Boolean value. True if NUM LOCK is on; otherwise False.</returns>
            <filterpriority>1</filterpriority>
        </member>
        <member name="P:WHC.OrderWater.Commons.KeyboardHelper.ScrollLock">
            <summary>Gets a Boolean indicating whether the SCROLL LOCK key is on. </summary>
            <returns>A Boolean value. True if SCROLL LOCK is on; otherwise False.</returns>
            <filterpriority>1</filterpriority>
        </member>
        <member name="P:WHC.OrderWater.Commons.KeyboardHelper.ShiftKeyDown">
            <summary>Gets a Boolean indicating if a SHIFT key is down.</summary>
            <returns>A Boolean value. True if a SHIFT key is down; otherwise False.</returns>
            <filterpriority>1</filterpriority>
        </member>
        <member name="T:WHC.OrderWater.Commons.ImagePrintHelper">
            <summary>
            Description of PrintHelper.
            </summary>
        </member>
        <member name="F:WHC.OrderWater.Commons.ImagePrintHelper.AllowPrintCenter">
            <summary>
            Align printouts centered on the page.
            </summary>
        </member>
        <member name="F:WHC.OrderWater.Commons.ImagePrintHelper.AllowPrintRotate">
            <summary>
            rotate the image if it fits the page better
            </summary>
        </member>
        <member name="F:WHC.OrderWater.Commons.ImagePrintHelper.AllowPrintEnlarge">
            <summary>
            scale the image to fit the page better
            </summary>
        </member>
        <member name="F:WHC.OrderWater.Commons.ImagePrintHelper.AllowPrintShrink">
            <summary>
            scale the image to fit the page better
            </summary>
        </member>
        <member name="T:WHC.OrderWater.Commons.ScaleHelper">
            <summary>
            Offers a few helper functions for scaling/aligning an element with another element
            </summary>
        </member>
        <member name="M:WHC.OrderWater.Commons.ScaleHelper.GetScaledSize(System.Drawing.SizeF,System.Drawing.SizeF,System.Boolean)">
            <summary>
            calculates the Size an element must be resized to, in order to fit another element, keeping aspect ratio
            </summary>
            <param name="currentSize">the size of the element to be resized</param>
            <param name="targetSize">the target size of the element</param>
            <param name="crop">in case the aspect ratio of currentSize and targetSize differs: shall the scaled size fit into targetSize (i.e. that one of its dimensions is smaller - false) or vice versa (true)</param>
            <returns>a new SizeF object indicating the width and height the element should be scaled to</returns>
        </member>
        <member name="M:WHC.OrderWater.Commons.ScaleHelper.GetAlignedRectangle(System.Drawing.RectangleF,System.Drawing.RectangleF,System.Drawing.ContentAlignment)">
            <summary>
            calculates the position of an element depending on the desired alignment within a RectangleF
            </summary>
            <param name="currentRect">the bounds of the element to be aligned</param>
            <param name="targetRect">the rectangle reference for aligment of the element</param>
            <param name="alignment">the System.Drawing.ContentAlignment value indicating how the element is to be aligned should the width or height differ from targetSize</param>
            <returns>a new RectangleF object with Location aligned aligned to targetRect</returns>
        </member>
        <member name="M:WHC.OrderWater.Commons.ScaleHelper.GetScaledRectangle(System.Drawing.RectangleF,System.Drawing.RectangleF,System.Boolean,System.Drawing.ContentAlignment)">
            <summary>
            calculates the Rectangle an element must be resized an positioned to, in ordder to fit another element, keeping aspect ratio
            </summary>
            <param name="currentRect">the rectangle of the element to be resized/repositioned</param>
            <param name="targetRect">the target size/position of the element</param>
            <param name="crop">in case the aspect ratio of currentSize and targetSize differs: shall the scaled size fit into targetSize (i.e. that one of its dimensions is smaller - false) or vice versa (true)</param>
            <param name="alignment">the System.Drawing.ContentAlignment value indicating how the element is to be aligned should the width or height differ from targetSize</param>
            <returns>a new RectangleF object indicating the width and height the element should be scaled to and the position that should be applied to it for proper alignment</returns>
        </member>
        <member name="M:WHC.OrderWater.Commons.HttpHelper.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:WHC.OrderWater.Commons.HttpHelper"/> class.
            </summary>
        </member>
        <member name="M:WHC.OrderWater.Commons.HttpHelper.#ctor(System.Net.CookieContainer)">
            <summary>
            Initializes a new instance of the <see cref="T:WHC.OrderWater.Commons.HttpHelper"/> class.
            </summary>
            <param name="cc">The cc.</param>
        </member>
        <member name="M:WHC.OrderWater.Commons.HttpHelper.#ctor(System.String,System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:WHC.OrderWater.Commons.HttpHelper"/> class.
            </summary>
            <param name="contentType">Type of the content.</param>
            <param name="accept">The accept.</param>
            <param name="userAgent">The user agent.</param>
        </member>
        <member name="M:WHC.OrderWater.Commons.HttpHelper.#ctor(System.Net.CookieContainer,System.String,System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:WHC.OrderWater.Commons.HttpHelper"/> class.
            </summary>
            <param name="cc">The cc.</param>
            <param name="contentType">Type of the content.</param>
            <param name="accept">The accept.</param>
            <param name="userAgent">The user agent.</param>
        </member>
        <member name="M:WHC.OrderWater.Commons.HttpHelper.GetHtml(System.String,System.Net.CookieContainer,System.String,System.Boolean)">
            <summary>
            获取指定页面的HTML代码
            </summary>
            <param name="url">指定页面的路径</param>
            <param name="postData">回发的数据</param>
            <param name="isPost">是否以post方式发送请求</param>
            <param name="cookieCollection">Cookie集合</param>
            <returns></returns>
        </member>
        <member name="M:WHC.OrderWater.Commons.HttpHelper.GetHtml(System.String,System.Net.CookieContainer,System.String,System.Boolean,System.String)">
            <summary>
            获取指定页面的HTML代码
            </summary>
            <param name="url">指定页面的路径</param>
            <param name="postData">回发的数据</param>
            <param name="isPost">是否以post方式发送请求</param>
            <param name="cookieCollection">Cookie集合</param>
            <returns></returns>
        </member>
        <member name="M:WHC.OrderWater.Commons.HttpHelper.GetHtml(System.String,System.Net.CookieContainer,System.String)">
            <summary>
            获取指定页面的HTML代码
            </summary>
            <param name="url">指定页面的路径</param>
            <param name="cookieCollection">Cookie集合</param>
            <returns></returns>
        </member>
        <member name="M:WHC.OrderWater.Commons.HttpHelper.GetHtml(System.String)">
            <summary>
            获取指定页面的HTML代码
            </summary>
            <param name="url">指定页面的路径</param>
            <returns></returns>
        </member>
        <member name="M:WHC.OrderWater.Commons.HttpHelper.GetHtml(System.String,System.String)">
            <summary>
            获取指定页面的HTML代码
            </summary>
            <param name="url">指定页面的路径</param>
            <returns></returns>
        </member>
        <member name="M:WHC.OrderWater.Commons.HttpHelper.GetHtml(System.String,System.String,System.Boolean)">
            <summary>
            获取指定页面的HTML代码
            </summary>
            <param name="url">指定页面的路径</param>
            <param name="postData">回发的数据</param>
            <param name="isPost">是否以post方式发送请求</param>
            <returns></returns>
        </member>
        <member name="M:WHC.OrderWater.Commons.HttpHelper.GetStream(System.String,System.Net.CookieContainer)">
            <summary>
            获取指定页面的Stream
            </summary>
            <param name="url">指定页面的路径</param>
            <param name="postData">回发的数据</param>
            <param name="isPost">是否以post方式发送请求</param>
            <param name="cookieCollection">Cookie集合</param>
            <returns></returns>
        </member>
        <member name="M:WHC.OrderWater.Commons.HttpHelper.GetStream(System.String,System.Net.CookieContainer,System.String)">
            <summary>
            获取指定页面的Stream
            </summary>
            <param name="url">指定页面的路径</param>
            <param name="postData">回发的数据</param>
            <param name="isPost">是否以post方式发送请求</param>
            <param name="cookieCollection">Cookie集合</param>
            <returns></returns>
        </member>
        <member name="M:WHC.OrderWater.Commons.HttpHelper.GetHiddenKeyValue(System.String,System.String)">
            <summary>
            获取HTML页面内制定Key的Value内容
            </summary>
            <param name="html"></param>
            <param name="key"></param>
            <returns></returns>
        </member>
        <member name="M:WHC.OrderWater.Commons.HttpHelper.GetUrlError(System.String)">
            <summary>
            判断URL是否有效
            </summary>
            <param name="url">待判断的URL，可以是网页以及图片链接等</param>
            <returns>200为正确，其余为大致网页错误代码</returns>
        </member>
        <member name="M:WHC.OrderWater.Commons.HttpHelper.RemoveHtml(System.String)">
            <summary>
            移除Html标记
            </summary>
            <param name="content"></param>
            <returns></returns>
        </member>
        <member name="M:WHC.OrderWater.Commons.HttpHelper.HtmlEncode(System.String)">
            <summary>
            返回 HTML 字符串的编码结果
            </summary>
            <param name="inputData">字符串</param>
            <returns>编码结果</returns>
        </member>
        <member name="M:WHC.OrderWater.Commons.HttpHelper.HtmlDecode(System.String)">
            <summary>
            返回 HTML 字符串的解码结果
            </summary>
            <param name="str">字符串</param>
            <returns>解码结果</returns>
        </member>
        <member name="P:WHC.OrderWater.Commons.HttpHelper.CookieContainer">
            <summary>
            Cookie容器
            </summary>
        </member>
        <member name="P:WHC.OrderWater.Commons.HttpHelper.Encoding">
            <summary>
            获取网页源码时使用的编码
            </summary>
            <value></value>
        </member>
        <member name="T:WHC.OrderWater.Commons.Export2Excel">
            <summary>
            This class processes the DataView that it is provided and
            Exports this DataView to an Excel document.
            </summary>
        </member>
        <member name="M:WHC.OrderWater.Commons.Export2Excel.ExportToExcel(System.Data.DataView,System.String,System.String)">
            <summary>
            Exports a DataView to Excel
            </summary>
            <param name="dv">DataView to use</param>
            <param name="path">The path to save/open the EXCEL file to/from</param>
            <param name="sheetName">The target sheet within the EXCEL file</param>
        </member>
        <member name="M:WHC.OrderWater.Commons.Export2Excel.NAR(System.Object)">
            <summary>
            释放对象内存，推出进程
            </summary>
            <param name="obj"></param>
        </member>
        <member name="M:WHC.OrderWater.Commons.Export2Excel.OnProgressChange(WHC.OrderWater.Commons.ProgressEventArgs)">
            Raises the OnProgressChange event for the parent form. 
        </member>
        <member name="T:WHC.OrderWater.Commons.ProgressEventArgs">
            <summary>
            Provides the ProgressEventArgs 
            </summary>
        </member>
        <member name="M:WHC.OrderWater.Commons.ProgressEventArgs.#ctor(System.Int32)">
            Constructs a new ProgressEventArgs object using the parameters provided
            @param prgValue : new progress value
        </member>
        <member name="P:WHC.OrderWater.Commons.ProgressEventArgs.ProgressValue">
            Returns the progress value
        </member>
        <member name="T:WHC.OrderWater.Commons.Computer">
            <summary>
            电脑信息
            </summary>
        </member>
        <member name="M:WHC.OrderWater.Commons.Computer.GetCpuUsage">
            <summary>
            获得Cpu使用率
            </summary>
            <returns>返回使用率</returns>
        </member>
        <member name="M:WHC.OrderWater.Commons.Computer.GetCpuID">
            <summary>
            获取CPU序列号代码
            </summary>
            <returns></returns>
        </member>
        <member name="M:WHC.OrderWater.Commons.Computer.GetMacAddress">
            <summary>
            获取网卡硬件地址
            </summary>
            <returns></returns>
        </member>
        <member name="M:WHC.OrderWater.Commons.Computer.GetDiskID">
            <summary>
            获取硬盘ID
            </summary>
            <returns></returns>
        </member>
        <member name="M:WHC.OrderWater.Commons.Computer.GetUserName">
            <summary>
            操作系统的登录用户名
            </summary>
            <returns></returns>
        </member>
        <member name="M:WHC.OrderWater.Commons.Computer.GetComputerName">
            <summary>
            获取计算机名
            </summary>
            <returns></returns>
        </member>
        <member name="M:WHC.OrderWater.Commons.Computer.GetSystemType">
            <summary>
            PC类型
            </summary>
            <returns></returns>
        </member>
        <member name="M:WHC.OrderWater.Commons.Computer.GetTotalPhysicalMemory">
            <summary>
            物理内存
            </summary>
            <returns></returns>
        </member>
        <member name="T:WHC.OrderWater.Commons.Computer.CpuUsage">
            <summary>
            Defines an abstract base class for implementations of CPU usage counters.
            </summary>
        </member>
        <member name="M:WHC.OrderWater.Commons.Computer.CpuUsage.Create">
            <summary>
            Creates and returns a CpuUsage instance that can be used to query the CPU time on this operating system.
            </summary>
            <returns>An instance of the CpuUsage class.</returns>
            <exception cref="T:System.NotSupportedException">This platform is not supported -or- initialization of the CPUUsage object failed.</exception>
        </member>
        <member name="M:WHC.OrderWater.Commons.Computer.CpuUsage.Query">
            <summary>
            Determines the current average CPU load.
            </summary>
            <returns>An integer that holds the CPU load percentage.</returns>
            <exception cref="T:System.NotSupportedException">One of the system calls fails. The CPU time can not be obtained.</exception>
        </member>
        <member name="F:WHC.OrderWater.Commons.Computer.CpuUsage.m_CpuUsage">
            <summary>
            Holds an instance of the CPUUsage class.
            </summary>
        </member>
        <member name="T:WHC.OrderWater.Commons.Computer.CpuUsage9x">
            <summary>
            Inherits the CPUUsage class and implements the Query method for Windows 9x systems.
            </summary>
            <remarks>
            <p>This class works on Windows 98 and Windows Millenium Edition.</p>
            <p>You should not use this class directly in your code. Use the CPUUsage.Create() method to instantiate a CPUUsage object.</p>
            </remarks>
        </member>
        <member name="M:WHC.OrderWater.Commons.Computer.CpuUsage9x.#ctor">
            <summary>
            Initializes a new CPUUsage9x instance.
            </summary>
            <exception cref="T:System.NotSupportedException">One of the system calls fails.</exception>
        </member>
        <member name="M:WHC.OrderWater.Commons.Computer.CpuUsage9x.Query">
            <summary>
            Determines the current average CPU load.
            </summary>
            <returns>An integer that holds the CPU load percentage.</returns>
            <exception cref="T:System.NotSupportedException">One of the system calls fails. The CPU time can not be obtained.</exception>
        </member>
        <member name="M:WHC.OrderWater.Commons.Computer.CpuUsage9x.Finalize">
            <summary>
            Closes the allocated resources.
            </summary>
        </member>
        <member name="F:WHC.OrderWater.Commons.Computer.CpuUsage9x.m_StatData">
            <summary>Holds the registry key that's used to read the CPU load.</summary>
        </member>
        <member name="T:WHC.OrderWater.Commons.Computer.CpuUsageNt">
            <summary>
            Inherits the CPUUsage class and implements the Query method for Windows NT systems.
            </summary>
            <remarks>
            <p>This class works on Windows NT4, Windows 2000, Windows XP, Windows .NET Server and higher.</p>
            <p>You should not use this class directly in your code. Use the CPUUsage.Create() method to instantiate a CPUUsage object.</p>
            </remarks>
        </member>
        <member name="F:WHC.OrderWater.Commons.Computer.CpuUsageNt.SYSTEM_BASICINFORMATION">
            <summary>Returns the number of processors in the system in a SYSTEM_BASIC_INFORMATION structure.</summary>
        </member>
        <member name="F:WHC.OrderWater.Commons.Computer.CpuUsageNt.SYSTEM_PERFORMANCEINFORMATION">
            <summary>Returns an opaque SYSTEM_PERFORMANCE_INFORMATION structure.</summary>
        </member>
        <member name="F:WHC.OrderWater.Commons.Computer.CpuUsageNt.SYSTEM_TIMEINFORMATION">
            <summary>Returns an opaque SYSTEM_TIMEOFDAY_INFORMATION structure.</summary>
        </member>
        <member name="F:WHC.OrderWater.Commons.Computer.CpuUsageNt.NO_ERROR">
            <summary>The value returned by NtQuerySystemInformation is no error occurred.</summary>
        </member>
        <member name="M:WHC.OrderWater.Commons.Computer.CpuUsageNt.#ctor">
            <summary>
            Initializes a new CpuUsageNt instance.
            </summary>
            <exception cref="T:System.NotSupportedException">One of the system calls fails.</exception>
        </member>
        <member name="M:WHC.OrderWater.Commons.Computer.CpuUsageNt.Query">
            <summary>
            Determines the current average CPU load.
            </summary>
            <returns>An integer that holds the CPU load percentage.</returns>
            <exception cref="T:System.NotSupportedException">One of the system calls fails. The CPU time can not be obtained.</exception>
        </member>
        <member name="M:WHC.OrderWater.Commons.Computer.CpuUsageNt.NtQuerySystemInformation(System.Int32,System.Byte[],System.Int32,System.IntPtr)">
            <summary>
            NtQuerySystemInformation is an internal Windows function that retrieves various kinds of system information.
            </summary>
            <param name="dwInfoType">One of the values enumerated in SYSTEM_INFORMATION_CLASS, indicating the kind of system information to be retrieved.</param>
            <param name="lpStructure">Points to a buffer where the requested information is to be returned. The size and structure of this information varies depending on the value of the SystemInformationClass parameter.</param>
            <param name="dwSize">Length of the buffer pointed to by the SystemInformation parameter.</param>
            <param name="returnLength">Optional pointer to a location where the function writes the actual size of the information requested.</param>
            <returns>Returns a success NTSTATUS if successful, and an NTSTATUS error code otherwise.</returns>
        </member>
        <member name="F:WHC.OrderWater.Commons.Computer.CpuUsageNt.oldIdleTime">
            <summary>Holds the old idle time.</summary>
        </member>
        <member name="F:WHC.OrderWater.Commons.Computer.CpuUsageNt.oldSystemTime">
            <summary>Holds the old system time.</summary>
        </member>
        <member name="F:WHC.OrderWater.Commons.Computer.CpuUsageNt.processorCount">
            <summary>Holds the number of processors in the system.</summary>
        </member>
        <member name="T:WHC.OrderWater.Commons.SqlScriptHelper">
            <summary>
            OSql命令操作函数（可用于安装程序的时候数据库脚本执行）
            </summary>
        </member>
        <member name="M:WHC.OrderWater.Commons.SqlScriptHelper.DoSQL(System.String)">
            <summary>
            本地执行SQL脚本
            </summary>
            <param name="path">脚本文件路径全名</param>
        </member>
        <member name="M:WHC.OrderWater.Commons.SqlScriptHelper.DoSQL(System.String,System.String,System.String,System.String)">
            <summary>
            执行SQL脚本
            </summary>
            <param name="path">脚本文件路径全名</param>
            <param name="userID">数据库登录ID</param>
            <param name="password">数据库登录密码</param>
            <param name="server">数据库服务器地址</param>
        </member>
        <member name="M:WHC.OrderWater.Commons.SqlScriptHelper.RunDos(System.String,System.String,System.Boolean)">
            <summary>
            后台执行DOS文件
            </summary>
            <param name="fileName">文件名(包含路径)</param>
            <param name="argument">运行参数</param>
            <param name="hidden">是否隐藏窗口</param>
        </member>
        <member name="M:WHC.OrderWater.Commons.SqlScriptHelper.ExecuteCMD(System.String,System.String,System.String,System.Boolean)">
              <summary>   
              运行指定DOS命令行   
              </summary>   
              <param name="cmd">命令</param>   
              <param name="tempFolder">命令行参数</param>   
              <param name="comfirm">写入命令行的确认信息</param>   
              <param name="showWindow">是否显示窗口</param> 
              <returns></returns>   
        </member>
        <member name="M:WHC.OrderWater.Commons.SqlScriptHelper.ReplaceDBName(System.String,System.String,System.String)">
            <summary>
            在运行脚本之前把脚本中的数据库名称替换成安装界面输入的数据库名称
            </summary>
            <param name="filePath">脚本文件名</param>
            <param name="oldDBName">原有的数据库名称</param>
            <param name="newDBName">新的数据库名称</param>
        </member>
        <member name="M:WHC.OrderWater.Commons.SqlScriptHelper.WriteLog(System.String)">
            <summary>
            为测试使用的函数
            </summary>
            <param name="fileText">输出的内容</param>
        </member>
        <member name="M:WHC.OrderWater.Commons.SqlScriptHelper.UpdatePathEnvironment(System.String)">
            <summary>
            加入安装文件的路径，方便Web端访问
            </summary>
        </member>
        <member name="M:WHC.OrderWater.Commons.SqlScriptHelper.AttachDB(System.String,System.String,System.String,System.String)">
            <summary>
            附加SqlServer数据库
            </summary>
        </member>
        <member name="M:WHC.OrderWater.Commons.SqlScriptHelper.DetachDB(System.String,System.String)">
            <summary>
            分离SqlServer数据库
            </summary>
        </member>
        <member name="M:WHC.OrderWater.Commons.SqlScriptHelper.RestoreDataBase(System.String,System.String,System.String,System.String)">
            <summary>
            还原数据库
            </summary>
        </member>
        <member name="M:WHC.OrderWater.Commons.SqlScriptHelper.BackupDataBase(System.String,System.String,System.String,System.String)">
            <summary>
            备份SqlServer数据库
            </summary>
        </member>
        <member name="T:WHC.OrderWater.Commons.TimerHelper">
            <summary>
            Provides the definition to create timers within their own threads and within critical sections.
            </summary>
        </member>
        <member name="M:WHC.OrderWater.Commons.TimerHelper.#ctor">
            <summary>
            Creates a timer with a specified interval, and starts after the specified delay.
            </summary>
        </member>
        <member name="M:WHC.OrderWater.Commons.TimerHelper.#ctor(System.Int64,System.Int32)">
            <summary>
            Creates a timer with a specified interval, and starts after the specified delay.
            </summary>
            <param name="interval">Interval in milliseconds at which the timer will execute.</param>
            <param name="startDelay"></param>
        </member>
        <member name="M:WHC.OrderWater.Commons.TimerHelper.#ctor(System.Int64,System.Boolean)">
            <summary>
            Creates a timer with a specified interval.
            </summary>
            <param name="interval"></param>
        </member>
        <member name="M:WHC.OrderWater.Commons.TimerHelper.Start(System.Int32)">
            <summary>
            Starts the timer with a specified delay.
            </summary>
            <param name="delayBeforeStart"></param>
        </member>
        <member name="M:WHC.OrderWater.Commons.TimerHelper.Start">
            <summary>
            Starts the timer instantly.
            </summary>
        </member>
        <member name="M:WHC.OrderWater.Commons.TimerHelper.Pause">
            <summary>
            Pauses the timer.
            Note: Running threads won't be closed.
            </summary>
        </member>
        <member name="M:WHC.OrderWater.Commons.TimerHelper.Stop">
            <summary>
            Stops the timer.
            Note: Running threads won't be closed.
            </summary>
        </member>
        <member name="E:WHC.OrderWater.Commons.TimerHelper.Execute">
            <summary>
            Called when the timer is executed.
            </summary>
        </member>
        <member name="P:WHC.OrderWater.Commons.TimerHelper.State">
            <summary>
            Gets the state of the timer.
            </summary>
        </member>
        <member name="P:WHC.OrderWater.Commons.TimerHelper.Interval">
            <summary>
            Gets or sets the timer interval.
            </summary>
        </member>
        <member name="T:WHC.OrderWater.Commons.TimerHelper.TimerExecution">
            <summary>
            The function prototype for timer executions.
            </summary>
        </member>
        <member name="M:WHC.OrderWater.Commons.ThreadHelper.SetThreadName(System.String)">
            <summary>
            Thread name: No longer than 10 chars!!!
            </summary>
            <param name="name">TORTOISE, UPDATE, REFRESH...</param>
        </member>
        <member name="M:WHC.OrderWater.Commons.ThreadHelper.Queue(System.Threading.WaitCallback,System.String,System.Threading.ThreadPriority)">
            <summary>
                Queues a method for execution, and specifies an object containing data to
                be used by the method. The method executes when a thread pool thread becomes
                available.
            </summary>
            <param name="callBack"></param>
            <param name="threadName">TORTOISE, UPDATE, REFRESH...</param>
            <returns></returns>
        </member>
        <member name="M:WHC.OrderWater.Commons.ThreadHelper.Queue(System.Threading.WaitCallback,System.String,System.Object,System.Threading.ThreadPriority)">
            <summary>
                Queues a method for execution, and specifies an object containing data to
                be used by the method. The method executes when a thread pool thread becomes
                available.
            </summary>
            <param name="callBack"></param>
            <param name="threadName">TORTOISE, UPDATE, REFRESH...</param>
            <param name="state"></param>
            <returns></returns>
        </member>
        <member name="M:WHC.OrderWater.Commons.SimpleExcelExport.Output(System.Data.DataTable)">
            <summary>
            将DataTable导出为Excel
            </summary>
        </member>
        <member name="M:WHC.OrderWater.Commons.SimpleExcelExport.Output(System.Data.DataTable,System.String)">
            <summary>
            将DataTable到处为Excel
            </summary>
            <param name="dataTable">表</param>
            <param name="name">导出默认文件名</param>
        </member>
        <member name="T:WHC.OrderWater.Commons.Threading.RunQueuedWorkerCompletedEventHandler">
            <summary>
            Represents the method that will handle the RunWorkerCompleted event.
            </summary>
            <param name="sender">The object that is the source of the event.</param>
            <param name="e">A <see cref="T:WHC.OrderWater.Commons.Threading.QueuedWorkerCompletedEventArgs"/> that contains event data.</param>
        </member>
        <member name="T:WHC.OrderWater.Commons.Threading.QueuedWorkerDoWorkEventHandler">
            <summary>
            Represents the method that will handle the DoWork event.
            </summary>
            <param name="sender">The object that is the source of the event.</param>
            <param name="e">An <see cref="T:WHC.OrderWater.Commons.Threading.QueuedWorkerDoWorkEventArgs"/> that contains event data.</param>
        </member>
        <member name="T:WHC.OrderWater.Commons.Threading.QueuedWorkerCompletedEventArgs">
            <summary>
            Represents the event arguments of the RunWorkerCompleted event.
            </summary>
        </member>
        <member name="M:WHC.OrderWater.Commons.Threading.QueuedWorkerCompletedEventArgs.#ctor(System.Object,System.Object,System.Int32,System.Exception,System.Boolean)">
            <summary>
            Initializes a new instance of the QueuedWorkerCompletedEventArgs class.
            </summary>
            <param name="argument">The argument of an asynchronous operation.</param>
            <param name="result">The result of an asynchronous operation.</param>
            <param name="priority">A value between 0 and 5 indicating the priority of this item.</param>
            <param name="error">The error that occurred while loading the image.</param>
            <param name="cancelled">A value indicating whether the asynchronous operation was canceled.</param>
        </member>
        <member name="P:WHC.OrderWater.Commons.Threading.QueuedWorkerCompletedEventArgs.Result">
            <summary>
            Gets a value that represents the result of an asynchronous operation.
            </summary>
        </member>
        <member name="P:WHC.OrderWater.Commons.Threading.QueuedWorkerCompletedEventArgs.Priority">
            <summary>
            Gets the priority of this item.
            </summary>
        </member>
        <member name="T:WHC.OrderWater.Commons.Threading.QueuedWorkerDoWorkEventArgs">
            <summary>
            Represents the event arguments of the RunWorkerCompleted event.
            </summary>
        </member>
        <member name="M:WHC.OrderWater.Commons.Threading.QueuedWorkerDoWorkEventArgs.#ctor(System.Object,System.Int32)">
            <summary>
            Initializes a new instance of the QueuedWorkerDoWorkEventArgs class.
            </summary>
            <param name="argument">The argument of an asynchronous operation.</param>
            <param name="priority">A value between 0 and 5 indicating the priority of this item.</param>
        </member>
        <member name="P:WHC.OrderWater.Commons.Threading.QueuedWorkerDoWorkEventArgs.Priority">
            <summary>
            Gets the priority of this item.
            </summary>
        </member>
        <member name="T:WHC.OrderWater.Commons.MouseHook">
            <summary>
            The global mouse hook. This can be used to globally capture mouse input.
            </summary>
        </member>
        <member name="F:WHC.OrderWater.Commons.MouseHook.Enabled">
            <summary>
            Keep track of the hook state.
            </summary>
        </member>
        <member name="M:WHC.OrderWater.Commons.MouseHook.Enable">
            <summary>
            Start the mouse hook.
            </summary>
            <returns>True if no exceptions.</returns>
        </member>
        <member name="M:WHC.OrderWater.Commons.MouseHook.Disable">
            <summary>
            Disable mouse hooking.
            </summary>
            <returns>True if disabled correctly.</returns>
        </member>
        <member name="T:WHC.OrderWater.Commons.MouseHook.MouseButtonHandler">
            <summary>
            Delegate for handling mouse input.
            </summary>
            <param name="button">The mouse button that was pressed.</param>
            <returns>True if you want the key to pass through
            (be recognized for the app), False if you want it
            to be trapped (app never sees it).</returns>
        </member>
        <member name="T:WHC.OrderWater.Commons.MessageUtil">
            <summary>
            MessageUtil 的摘要说明。
            </summary>
        </member>
        <member name="M:WHC.OrderWater.Commons.MessageUtil.ShowTips(System.String)">
            <summary>
            显示一般的提示信息
            </summary>
            <param name="message">提示信息</param>
        </member>
        <member name="M:WHC.OrderWater.Commons.MessageUtil.ShowWarning(System.String)">
            <summary>
            显示警告信息
            </summary>
            <param name="message">警告信息</param>
        </member>
        <member name="M:WHC.OrderWater.Commons.MessageUtil.ShowError(System.String)">
            <summary>
            显示错误信息
            </summary>
            <param name="message">错误信息</param>
        </member>
        <member name="M:WHC.OrderWater.Commons.MessageUtil.ShowYesNoAndError(System.String)">
            <summary>
            显示询问用户信息，并显示错误标志
            </summary>
            <param name="message">错误信息</param>
        </member>
        <member name="M:WHC.OrderWater.Commons.MessageUtil.ShowYesNoAndTips(System.String)">
            <summary>
            显示询问用户信息，并显示提示标志
            </summary>
            <param name="message">错误信息</param>
        </member>
        <member name="M:WHC.OrderWater.Commons.MessageUtil.ShowYesNoAndWarning(System.String)">
            <summary>
            显示询问用户信息，并显示警告标志
            </summary>
            <param name="message">警告信息</param>
        </member>
        <member name="M:WHC.OrderWater.Commons.MessageUtil.ShowYesNoCancelAndTips(System.String)">
            <summary>
            显示询问用户信息，并显示提示标志
            </summary>
            <param name="message">错误信息</param>
        </member>
        <member name="M:WHC.OrderWater.Commons.MessageUtil.ConfirmYesNo(System.String)">
            <summary>
            显示一个YesNo选择对话框
            </summary>
            <param name="prompt">对话框的选择内容提示信息</param>
            <returns>如果选择Yes则返回true，否则返回false</returns>
        </member>
        <member name="M:WHC.OrderWater.Commons.MessageUtil.ConfirmYesNoCancel(System.String)">
            <summary>
            显示一个YesNoCancel选择对话框
            </summary>
            <param name="prompt">对话框的选择内容提示信息</param>
            <returns>返回选择结果的的DialogResult值</returns>
        </member>
        <member name="M:WHC.OrderWater.Commons.ExcelHelper.GetExcelConnectstring(System.String,System.Boolean,WHC.OrderWater.Commons.ExcelHelper.ExcelType)">
            <summary>
            返回Excel 连接字符串   [IMEX=1]
            </summary>
            <param name="excelPath">Excel文件 绝对路径</param>
            <param name="header">是否把第一行作为列名</param>
            <param name="eType">Excel 版本 </param>
            <returns></returns>
        </member>
        <member name="M:WHC.OrderWater.Commons.ExcelHelper.GetExcelConnectstring(System.String,System.Boolean,WHC.OrderWater.Commons.ExcelHelper.ExcelType,WHC.OrderWater.Commons.ExcelHelper.IMEXType)">
            <summary>
            返回Excel 连接字符串
            </summary>
            <param name="excelPath">Excel文件 绝对路径</param>
            <param name="header">是否把第一行作为列名</param>
            <param name="eType">Excel 版本 </param>
            <param name="imex">IMEX模式</param>
            <returns></returns>
        </member>
        <member name="M:WHC.OrderWater.Commons.ExcelHelper.GetExcelTablesName(System.String,WHC.OrderWater.Commons.ExcelHelper.ExcelType)">
            <summary>
            返回Excel工作表名
            </summary>
            <param name="excelPath">Excel文件 绝对路径</param>
            <param name="eType">Excel 版本 </param>
            <returns></returns>
        </member>
        <member name="M:WHC.OrderWater.Commons.ExcelHelper.GetExcelTablesName(System.String)">
            <summary>
            返回Excel工作表名
            </summary>
            <param name="connectstring">excel连接字符串</param>
            <returns></returns>
        </member>
        <member name="M:WHC.OrderWater.Commons.ExcelHelper.GetExcelTablesName(System.Data.OleDb.OleDbConnection)">
            <summary>
            返回Excel工作表名
            </summary>
            <param name="connection">excel连接</param>
            <returns></returns>
        </member>
        <member name="M:WHC.OrderWater.Commons.ExcelHelper.GetExcelFirstTableName(System.String,WHC.OrderWater.Commons.ExcelHelper.ExcelType)">
            <summary>
            返回Excel第一个工作表表名
            </summary>
            <param name="excelPath">Excel文件 绝对路径</param>
            <param name="eType">Excel 版本 </param>
            <returns></returns>
        </member>
        <member name="M:WHC.OrderWater.Commons.ExcelHelper.GetExcelFirstTableName(System.String)">
            <summary>
            返回Excel第一个工作表表名
            </summary>
            <param name="connectstring">excel连接字符串</param>
            <returns></returns>
        </member>
        <member name="M:WHC.OrderWater.Commons.ExcelHelper.GetExcelFirstTableName(System.Data.OleDb.OleDbConnection)">
            <summary>
            返回Excel第一个工作表表名
            </summary>
            <param name="connection">excel连接</param>
            <returns></returns>
        </member>
        <member name="M:WHC.OrderWater.Commons.ExcelHelper.ExcelToDataSet(System.String,System.String,System.Boolean,WHC.OrderWater.Commons.ExcelHelper.ExcelType)">
            <summary>
            EXCEL导入DataSet
            </summary>
            <param name="excelPath">Excel文件 绝对路径</param>
            <param name="table">名称 excel table  例如：Sheet1$ </param>
            <param name="header">是否把第一行作为列名</param>
            <param name="eType">Excel 版本 </param>
            <returns>返回Excel相应工作表中的数据 DataSet   [table不存在时返回空的DataSet]</returns>
        </member>
        <member name="M:WHC.OrderWater.Commons.ExcelHelper.isExistExcelTableName(System.Data.OleDb.OleDbConnection,System.String)">
            <summary>
            判断工作表名是否存在
            </summary>
            <param name="connection"></param>
            <param name="table"></param>
            <returns></returns>
        </member>
        <member name="M:WHC.OrderWater.Commons.ExcelHelper.ExcelToDataSet(System.String,System.String)">
            <summary>
            EXCEL导入DataSet
            </summary>
            <param name="connectstring">excel连接字符串</param>
            <param name="table">名称 excel table  例如：Sheet1$ </param>
            <returns>返回Excel相应工作表中的数据 DataSet   [table不存在时返回空的DataSet]</returns>
        </member>
        <member name="M:WHC.OrderWater.Commons.ExcelHelper.ExcelToDataSet(System.String,System.Boolean,WHC.OrderWater.Commons.ExcelHelper.ExcelType)">
            <summary>
            EXCEL所有工作表导入DataSet
            </summary>
            <param name="excelPath">Excel文件 绝对路径</param>
            <param name="header">是否把第一行作为列名</param>
            <param name="eType">Excel 版本 </param>
            <returns>返回Excel第一个工作表中的数据 DataSet </returns>
        </member>
        <member name="M:WHC.OrderWater.Commons.ExcelHelper.ExcelToDataSet(System.String)">
            <summary>
            EXCEL所有工作表导入DataSet
            </summary>
            <param name="connectstring">excel连接字符串</param>
            <returns>返回Excel第一个工作表中的数据 DataSet </returns>
        </member>
        <member name="T:WHC.OrderWater.Commons.ExcelHelper.ExcelType">
            <summary>
            Excel 版本
            </summary>
        </member>
        <member name="T:WHC.OrderWater.Commons.ExcelHelper.IMEXType">
            <summary>
            IMEX 三种模式
            </summary>
        </member>
        <member name="M:WHC.OrderWater.Commons.DateTimeHelper.GetWeekAmount(System.Int32)">
            <summary>
            获取某一年有多少周
            </summary>
            <param name="year">年份</param>
            <returns>该年周数</returns>
        </member>
        <member name="M:WHC.OrderWater.Commons.DateTimeHelper.WeekOfYear(System.DateTime)">
            <summary>
            返回年度第几个星期   默认星期日是第一天
            </summary>
            <param name="date">时间</param>
            <returns></returns>
        </member>
        <member name="M:WHC.OrderWater.Commons.DateTimeHelper.WeekOfYear(System.DateTime,System.DayOfWeek)">
            <summary>
            返回年度第几个星期
            </summary>
            <param name="date">时间</param>
            <param name="week">一周的开始日期</param>
            <returns></returns>
        </member>
        <member name="M:WHC.OrderWater.Commons.DateTimeHelper.GetWeekTime(System.Int32,System.Int32,System.DateTime@,System.DateTime@)">
            <summary>
            得到一年中的某周的起始日和截止日
            年 nYear
            周数 nNumWeek
            周始 out dtWeekStart
            周终 out dtWeekeEnd
            </summary>
            <param name="nYear">年份</param>
            <param name="nNumWeek">第几周</param>
            <param name="dtWeekStart">开始日期</param>
            <param name="dtWeekeEnd">结束日期</param>
        </member>
        <member name="M:WHC.OrderWater.Commons.DateTimeHelper.GetWeekWorkTime(System.Int32,System.Int32,System.DateTime@,System.DateTime@)">
            <summary>
            得到一年中的某周的起始日和截止日    周一到周五  工作日
            </summary>
            <param name="nYear">年份</param>
            <param name="nNumWeek">第几周</param>
            <param name="dtWeekStart">开始日期</param>
            <param name="dtWeekeEnd">结束日期</param>
        </member>
        <member name="M:WHC.OrderWater.Commons.DateTimeHelper.SetLocalTime(System.DateTime)">
            <summary>
            设置本地计算机时间
            </summary>
            <param name="dt">DateTime对象</param>
        </member>
        <member name="M:WHC.OrderWater.Commons.DateTimeHelper.GetChineseDateTime">
            <summary>
            获取中国国家授时中心网络服务器时间发布的当前时间
            </summary>
            <returns></returns>
        </member>
        <member name="M:WHC.OrderWater.Commons.DateTimeHelper.GetInt(System.String,System.Boolean)">
            <summary>
            从指定的字符串中获取整数
            </summary>
            <param name="origin">原始的字符串</param>
            <param name="fullMatch">是否完全匹配，若为false，则返回字符串中的第一个整数数字</param>
            <returns>整数数字</returns>
        </member>
        <member name="M:WHC.OrderWater.Commons.DateTimeHelper.GetTheDay(System.Nullable{System.Int32})">
            <summary>
            哪天
            </summary>
            <param name="days">7天前:-7 7天后:+7</param>
            <returns></returns>
        </member>
        <member name="M:WHC.OrderWater.Commons.DateTimeHelper.GetSunday(System.Nullable{System.Int32})">
            <summary>
            周日
            </summary>
            <param name="weeks">上周-1 下周+1 本周0</param>
            <returns></returns>
        </member>
        <member name="M:WHC.OrderWater.Commons.DateTimeHelper.GetSaturday(System.Nullable{System.Int32})">
            <summary>
            周六
            </summary>
            <param name="weeks">上周-1 下周+1 本周0</param>
            <returns></returns>
        </member>
        <member name="M:WHC.OrderWater.Commons.DateTimeHelper.GetFirstDayOfMonth(System.Nullable{System.Int32})">
            <summary>
            月第一天
            </summary>
            <param name="months">上月-1 本月0 下月1</param>
            <returns></returns>
        </member>
        <member name="M:WHC.OrderWater.Commons.DateTimeHelper.GetLastDayOfMonth(System.Nullable{System.Int32})">
            <summary>
            月最后一天
            </summary>
            <param name="months">上月0 本月1 下月2</param>
            <returns></returns>
        </member>
        <member name="M:WHC.OrderWater.Commons.DateTimeHelper.GetFirstDayOfYear(System.Nullable{System.Int32})">
            <summary>
            年度第一天
            </summary>
            <param name="years">上年度-1 下年度+1</param>
            <returns></returns>
        </member>
        <member name="M:WHC.OrderWater.Commons.DateTimeHelper.GetLastDayOfYear(System.Nullable{System.Int32})">
            <summary>
            年度最后一天
            </summary>
            <param name="years">上年度0 本年度1 下年度2</param>
            <returns></returns>
        </member>
        <member name="M:WHC.OrderWater.Commons.DateTimeHelper.GetFirstDayOfQuarter(System.Nullable{System.Int32})">
            <summary>
            季度第一天
            </summary>
            <param name="quarters">上季度-1 下季度+1</param>
            <returns></returns>
        </member>
        <member name="M:WHC.OrderWater.Commons.DateTimeHelper.GetLastDayOfQuarter(System.Nullable{System.Int32})">
            <summary>
            季度最后一天
            </summary>
            <param name="quarters">上季度0 本季度1 下季度2</param>
            <returns></returns>
        </member>
        <member name="M:WHC.OrderWater.Commons.DateTimeHelper.GetDayOfWeekCN">
            <summary>
            中文星期
            </summary>
            <returns></returns>
        </member>
        <member name="M:WHC.OrderWater.Commons.DateTimeHelper.GetDayOfWeekNum">
            <summary>
            获取星期数字形式,周一开始
            </summary>
            <returns></returns>
        </member>
        <member name="M:WHC.OrderWater.Commons.DateTimeHelper.ConvertTimeToJS(System.DateTime)">
            <summary>
            C#的时间到Javascript的时间的转换
            </summary>
            <param name="TheDate"></param>
            <returns></returns>
        </member>
        <member name="M:WHC.OrderWater.Commons.DateTimeHelper.ConvertPHPToTime(System.Int64)">
            <summary>
            PHP的时间转换成C#中的DateTime
            </summary>
            <param name="time"></param>
            <returns></returns>
        </member>
        <member name="M:WHC.OrderWater.Commons.DateTimeHelper.ConvertTimeToPHP(System.DateTime)">
            <summary>
             C#中的DateTime转换成PHP的时间
            </summary>
            <param name="time"></param>
            <returns></returns>
        </member>
        <member name="M:WHC.OrderWater.Commons.DateTimeHelper.GetDiffTime(System.DateTime,System.DateTime,System.Int32@)">
            <summary>
            计算2个时间差
            </summary>
            <param name="beginTime">开始时间</param>
            <param name="endTime">结束时间</param>
            <returns></returns>
        </member>
    </members>
</doc>
